{
  "name": "SemanticModel",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/Source2Pay_ASDW",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "azpg-sqlserver-prod-p2p.database.windows.net",
            "database": "p2p-sqldw-prod"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "azpg-sqlserver-prod-p2p.database.windows.net;p2p-sqldw-prod",
          "Username": "p2p_asdw_data_loader",
          "EncryptConnection": true
        }
      }
    ],
    "tables": [
      {
        "name": "material_group_dim",
        "columns": [
          {
            "name": "material_group_code",
            "dataType": "string",
            "sourceColumn": "material_group_code"
          },
          {
            "name": "material_group_desc",
            "dataType": "string",
            "sourceColumn": "material_group_desc"
          },
          {
            "name": "material_group_code_and_desc",
            "dataType": "string",
            "sourceColumn": "material_group_code_and_desc"
          },
          {
            "name": "coupa_commodity_name",
            "dataType": "string",
            "sourceColumn": "coupa_commodity_name"
          },
          {
            "name": "material_group_coupa_commodity_desc",
            "dataType": "string",
            "sourceColumn": "material_group_coupa_commodity_desc"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_material_group_dim = Source{[Schema=\"baseview\",Item=\"vw_material_group_dim\"]}[Data]",
                "in",
                "    baseview_vw_material_group_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "spend_pool_hier_inv_dim",
        "columns": [
          {
            "name": "spend_pool_lkp_code",
            "dataType": "string",
            "sourceColumn": "spend_pool_lkp_code"
          },
          {
            "name": "spend_pool_high_name",
            "dataType": "string",
            "sourceColumn": "spend_pool_high_name"
          },
          {
            "name": "spend_pool_medium_name",
            "dataType": "string",
            "sourceColumn": "spend_pool_medium_name"
          },
          {
            "name": "spend_pool_low_name",
            "dataType": "string",
            "sourceColumn": "spend_pool_low_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_spend_pool_hier_inv_dim = Source{[Schema=\"baseview\",Item=\"vw_spend_pool_hier_inv_dim\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(baseview_vw_spend_pool_hier_inv_dim,{\"refresh_date\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Spend_pool_hierarchy",
            "levels": [
              {
                "name": "spend_pool_high_name",
                "ordinal": 0,
                "column": "spend_pool_high_name"
              },
              {
                "name": "spend_pool_medium_name",
                "ordinal": 1,
                "column": "spend_pool_medium_name"
              },
              {
                "name": "spend_pool_low_name",
                "ordinal": 2,
                "column": "spend_pool_low_name"
              },
              {
                "name": "spend_pool_lkp_code",
                "ordinal": 3,
                "column": "spend_pool_lkp_code"
              }
            ]
          }
        ]
      },
      {
        "name": "material_dim",
        "columns": [
          {
            "name": "material_number",
            "dataType": "string",
            "sourceColumn": "material_number"
          },
          {
            "name": "material_desc",
            "dataType": "string",
            "sourceColumn": "material_desc"
          },
          {
            "name": "material_num_disp",
            "dataType": "string",
            "sourceColumn": "material_num_disp"
          },
          {
            "name": "material_number_and_desc",
            "dataType": "string",
            "sourceColumn": "material_number_and_desc"
          },
          {
            "name": "material_group_override_id",
            "dataType": "string",
            "sourceColumn": "material_group_override_id"
          },
          {
            "name": "created_on",
            "dataType": "string",
            "sourceColumn": "created_on"
          },
          {
            "name": "date_of_last_change",
            "dataType": "string",
            "sourceColumn": "date_of_last_change"
          },
          {
            "name": "maintenance_status_of_complete_material",
            "dataType": "string",
            "sourceColumn": "maintenance_status_of_complete_material"
          },
          {
            "name": "maintenance_status",
            "dataType": "string",
            "sourceColumn": "maintenance_status"
          },
          {
            "name": "flag_material_for_deletion_at_client_level",
            "dataType": "string",
            "sourceColumn": "flag_material_for_deletion_at_client_level"
          },
          {
            "name": "material_type",
            "dataType": "string",
            "sourceColumn": "material_type"
          },
          {
            "name": "material_group",
            "dataType": "string",
            "sourceColumn": "material_group"
          },
          {
            "name": "old_material_number",
            "dataType": "string",
            "sourceColumn": "old_material_number"
          },
          {
            "name": "base_unit_of_measure",
            "dataType": "string",
            "sourceColumn": "base_unit_of_measure"
          },
          {
            "name": "purchase_order_unit_of_measure",
            "dataType": "string",
            "sourceColumn": "purchase_order_unit_of_measure"
          },
          {
            "name": "purchasing_value_key",
            "dataType": "string",
            "sourceColumn": "purchasing_value_key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_material_dim = Source{[Schema=\"baseview\",Item=\"vw_material_dim\"]}[Data]",
                "in",
                "    baseview_vw_material_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "company_invoice_star_dim",
        "columns": [
          {
            "name": "company_code",
            "dataType": "string",
            "sourceColumn": "company_code"
          },
          {
            "name": "company_name",
            "dataType": "string",
            "sourceColumn": "company_name"
          },
          {
            "name": "company_code_and_name",
            "dataType": "string",
            "sourceColumn": "company_code_and_name"
          },
          {
            "name": "city",
            "dataType": "string",
            "sourceColumn": "city"
          },
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "currency_code",
            "dataType": "string",
            "sourceColumn": "currency_code"
          },
          {
            "name": "vat_registration_number",
            "dataType": "string",
            "sourceColumn": "vat_registration_number"
          },
          {
            "name": "company_code_stat",
            "dataType": "int64",
            "sourceColumn": "company_code_stat"
          },
          {
            "name": "region_name",
            "dataType": "string",
            "sourceColumn": "region_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_company_geo_dim_1 = Source{[Schema=\"baseview\",Item=\"vw_company_geo_dim_1\"]}[Data]",
                "in",
                "    baseview_vw_company_geo_dim_1"
              ]
            }
          }
        ]
      },
      {
        "name": "plant_invoice_star_dim",
        "columns": [
          {
            "name": "plant_code",
            "dataType": "string",
            "sourceColumn": "plant_code"
          },
          {
            "name": "plant_name",
            "dataType": "string",
            "sourceColumn": "plant_name"
          },
          {
            "name": "plant_code_and_name",
            "dataType": "string",
            "sourceColumn": "plant_code_and_name"
          },
          {
            "name": "site_code",
            "dataType": "string",
            "sourceColumn": "site_code"
          },
          {
            "name": "vendor_number_of_plant",
            "dataType": "string",
            "sourceColumn": "vendor_number_of_plant"
          },
          {
            "name": "factory_calendar_key",
            "dataType": "string",
            "sourceColumn": "factory_calendar_key"
          },
          {
            "name": "name_2",
            "dataType": "string",
            "sourceColumn": "name_2"
          },
          {
            "name": "street_name",
            "dataType": "string",
            "sourceColumn": "street_name"
          },
          {
            "name": "po_box",
            "dataType": "string",
            "sourceColumn": "po_box"
          },
          {
            "name": "postal_code",
            "dataType": "string",
            "sourceColumn": "postal_code"
          },
          {
            "name": "city_name",
            "dataType": "string",
            "sourceColumn": "city_name"
          },
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "region_code",
            "dataType": "string",
            "sourceColumn": "region_code"
          },
          {
            "name": "county_code",
            "dataType": "string",
            "sourceColumn": "county_code"
          },
          {
            "name": "city_code",
            "dataType": "string",
            "sourceColumn": "city_code"
          },
          {
            "name": "tax_jurisdiction",
            "dataType": "string",
            "sourceColumn": "tax_jurisdiction"
          },
          {
            "name": "global_site_type_code",
            "dataType": "string",
            "sourceColumn": "global_site_type_code"
          },
          {
            "name": "global_site_ownership_code",
            "dataType": "string",
            "sourceColumn": "global_site_ownership_code"
          },
          {
            "name": "global_site_status_code",
            "dataType": "string",
            "sourceColumn": "global_site_status_code"
          },
          {
            "name": "difference_from_gm_time",
            "dataType": "string",
            "sourceColumn": "difference_from_gm_time"
          },
          {
            "name": "sap_use_flag",
            "dataType": "string",
            "sourceColumn": "sap_use_flag"
          },
          {
            "name": "region_name",
            "dataType": "string",
            "sourceColumn": "region_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_plant_geo_dim_1 = Source{[Schema=\"baseview\",Item=\"vw_plant_geo_dim_1\"]}[Data]",
                "in",
                "    baseview_vw_plant_geo_dim_1"
              ]
            }
          }
        ]
      },
      {
        "name": "vendor_invoice_star_dim",
        "columns": [
          {
            "name": "vendor_id",
            "dataType": "string",
            "sourceColumn": "vendor_id"
          },
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "vendor_name",
            "dataType": "string",
            "sourceColumn": "vendor_name"
          },
          {
            "name": "vendor_id_and_name",
            "dataType": "string",
            "sourceColumn": "vendor_id_and_name"
          },
          {
            "name": "vendor_long_name",
            "dataType": "string",
            "sourceColumn": "vendor_long_name"
          },
          {
            "name": "pg_guv_id",
            "dataType": "string",
            "sourceColumn": "pg_guv_id"
          },
          {
            "name": "pg_guv_name",
            "dataType": "string",
            "sourceColumn": "pg_guv_name"
          },
          {
            "name": "pg_duns_num",
            "dataType": "int64",
            "sourceColumn": "pg_duns_num"
          },
          {
            "name": "name_2_1",
            "dataType": "string",
            "sourceColumn": "name_2_1"
          },
          {
            "name": "name_3_1",
            "dataType": "string",
            "sourceColumn": "name_3_1"
          },
          {
            "name": "name_4",
            "dataType": "string",
            "sourceColumn": "name_4"
          },
          {
            "name": "city_name",
            "dataType": "string",
            "sourceColumn": "city_name"
          },
          {
            "name": "district",
            "dataType": "string",
            "sourceColumn": "district"
          },
          {
            "name": "po_box",
            "dataType": "string",
            "sourceColumn": "po_box"
          },
          {
            "name": "p_o_box_postal_code",
            "dataType": "string",
            "sourceColumn": "p_o_box_postal_code"
          },
          {
            "name": "postal_code",
            "dataType": "string",
            "sourceColumn": "postal_code"
          },
          {
            "name": "region_code",
            "dataType": "string",
            "sourceColumn": "region_code"
          },
          {
            "name": "house_number_and_street",
            "dataType": "string",
            "sourceColumn": "house_number_and_street"
          },
          {
            "name": "search_term_for_matchcode_search_1",
            "dataType": "string",
            "sourceColumn": "search_term_for_matchcode_search_1"
          },
          {
            "name": "authorization_group",
            "dataType": "string",
            "sourceColumn": "authorization_group"
          },
          {
            "name": "vendor_account_group",
            "dataType": "string",
            "sourceColumn": "vendor_account_group"
          },
          {
            "name": "alt_payee_id",
            "dataType": "string",
            "sourceColumn": "alt_payee_id"
          },
          {
            "name": "central_del_flag",
            "dataType": "string",
            "sourceColumn": "central_del_flag"
          },
          {
            "name": "central_post_blok_flag",
            "dataType": "string",
            "sourceColumn": "central_post_blok_flag"
          },
          {
            "name": "central_purch_block_flag",
            "dataType": "string",
            "sourceColumn": "central_purch_block_flag"
          },
          {
            "name": "tax_1_id",
            "dataType": "string",
            "sourceColumn": "tax_1_id"
          },
          {
            "name": "tax_2_id",
            "dataType": "string",
            "sourceColumn": "tax_2_id"
          },
          {
            "name": "first_telephone_number",
            "dataType": "string",
            "sourceColumn": "first_telephone_number"
          },
          {
            "name": "second_telephone_number",
            "dataType": "string",
            "sourceColumn": "second_telephone_number"
          },
          {
            "name": "fax_number",
            "dataType": "string",
            "sourceColumn": "fax_number"
          },
          {
            "name": "vat_reg_num",
            "dataType": "string",
            "sourceColumn": "vat_reg_num"
          },
          {
            "name": "factory_calendar_key",
            "dataType": "string",
            "sourceColumn": "factory_calendar_key"
          },
          {
            "name": "tax_jur_code",
            "dataType": "string",
            "sourceColumn": "tax_jur_code"
          },
          {
            "name": "paymt_block_flag",
            "dataType": "string",
            "sourceColumn": "paymt_block_flag"
          },
          {
            "name": "standard_carrier_access_code",
            "dataType": "string",
            "sourceColumn": "standard_carrier_access_code"
          },
          {
            "name": "tax_type",
            "dataType": "string",
            "sourceColumn": "tax_type"
          },
          {
            "name": "tax_number_type",
            "dataType": "string",
            "sourceColumn": "tax_number_type"
          },
          {
            "name": "tax_3_id",
            "dataType": "string",
            "sourceColumn": "tax_3_id"
          },
          {
            "name": "tax_4_id",
            "dataType": "string",
            "sourceColumn": "tax_4_id"
          },
          {
            "name": "tax_5_id",
            "dataType": "string",
            "sourceColumn": "tax_5_id"
          },
          {
            "name": "pg_guv_id_and_name",
            "dataType": "string",
            "sourceColumn": "pg_guv_id_and_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_vendor_guv_dim = Source{[Schema=\"baseview\",Item=\"vw_vendor_guv_dim\"]}[Data]",
                "in",
                "    baseview_vw_vendor_guv_dim"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "guv_hierarchy",
            "levels": [
              {
                "name": "GUV",
                "ordinal": 0,
                "column": "pg_guv_id_and_name"
              },
              {
                "name": "Invoice Vendor",
                "ordinal": 1,
                "column": "vendor_id_and_name"
              }
            ]
          }
        ]
      },
      {
        "name": "vendor_company_dim",
        "columns": [
          {
            "name": "vendor_id",
            "dataType": "string",
            "sourceColumn": "vendor_id"
          },
          {
            "name": "company_code",
            "dataType": "string",
            "sourceColumn": "company_code"
          },
          {
            "name": "vendor_company_join_id",
            "dataType": "string",
            "sourceColumn": "vendor_company_join_id"
          },
          {
            "name": "posting_block_for_company_code",
            "dataType": "string",
            "sourceColumn": "posting_block_for_company_code"
          },
          {
            "name": "deletion_flag_for_master_record_company_code_level",
            "dataType": "string",
            "sourceColumn": "deletion_flag_for_master_record_company_code_level"
          },
          {
            "name": "authorization_group",
            "dataType": "string",
            "sourceColumn": "authorization_group"
          },
          {
            "name": "block_key_for_payment",
            "dataType": "string",
            "sourceColumn": "block_key_for_payment"
          },
          {
            "name": "terms_of_payment_key",
            "dataType": "string",
            "sourceColumn": "terms_of_payment_key"
          },
          {
            "name": "certificate_number_of_the_withholding_tax_exemption",
            "dataType": "string",
            "sourceColumn": "certificate_number_of_the_withholding_tax_exemption"
          },
          {
            "name": "validity_date_for_withholding_tax_exemption_certificate",
            "dataType": "string",
            "sourceColumn": "validity_date_for_withholding_tax_exemption_certificate"
          },
          {
            "name": "withholding_tax_code",
            "dataType": "string",
            "sourceColumn": "withholding_tax_code"
          },
          {
            "name": "minority_indicators",
            "dataType": "string",
            "sourceColumn": "minority_indicators"
          },
          {
            "name": "minority_indicator_code_and_desc",
            "dataType": "string",
            "sourceColumn": "minority_indicator_code_and_desc"
          },
          {
            "name": "ethnic_group",
            "dataType": "string",
            "sourceColumn": "ethnic_group"
          },
          {
            "name": "ethnic_minority_status",
            "dataType": "string",
            "sourceColumn": "ethnic_minority_status"
          },
          {
            "name": "gender",
            "dataType": "string",
            "sourceColumn": "gender"
          },
          {
            "name": "woman_owned_flag",
            "dataType": "string",
            "sourceColumn": "woman_owned_flag"
          },
          {
            "name": "payment_method_supplement",
            "dataType": "string",
            "sourceColumn": "payment_method_supplement"
          },
          {
            "name": "authority_for_exemption_from_withholding_tax",
            "dataType": "string",
            "sourceColumn": "authority_for_exemption_from_withholding_tax"
          },
          {
            "name": "withholding_tax_country_key",
            "dataType": "string",
            "sourceColumn": "withholding_tax_country_key"
          },
          {
            "name": "indicator_alternative_payee_using_account_number",
            "dataType": "string",
            "sourceColumn": "indicator_alternative_payee_using_account_number"
          },
          {
            "name": "deletion_bock_for_master_record_company_code_level",
            "dataType": "string",
            "sourceColumn": "deletion_bock_for_master_record_company_code_level"
          },
          {
            "name": "payment_method",
            "dataType": "string",
            "sourceColumn": "payment_method"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_vendor_company_dim = Source{[Schema=\"baseview\",Item=\"vw_vendor_company_dim\"]}[Data]",
                "in",
                "    baseview_vw_vendor_company_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "geo_dim",
        "columns": [
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "region_name",
            "dataType": "string",
            "sourceColumn": "region_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_geo_dim = Source{[Schema=\"baseview\",Item=\"vw_geo_dim\"]}[Data]",
                "in",
                "    baseview_vw_geo_dim"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "region_hierarchy",
            "levels": [
              {
                "name": "region_name",
                "ordinal": 0,
                "column": "region_name"
              },
              {
                "name": "country_code",
                "ordinal": 1,
                "column": "country_code"
              }
            ]
          }
        ]
      },
      {
        "name": "bu_comb_dim",
        "columns": [
          {
            "name": "hier_type",
            "dataType": "string",
            "sourceColumn": "hier_type"
          },
          {
            "name": "code",
            "dataType": "string",
            "sourceColumn": "code"
          },
          {
            "name": "name",
            "dataType": "string",
            "sourceColumn": "name"
          },
          {
            "name": "top_na",
            "dataType": "string",
            "sourceColumn": "top_na"
          },
          {
            "name": "sector_business_unit",
            "dataType": "string",
            "sourceColumn": "sector_business_unit"
          },
          {
            "name": "business_unit",
            "dataType": "string",
            "sourceColumn": "business_unit"
          },
          {
            "name": "category",
            "dataType": "string",
            "sourceColumn": "category"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_bu_comb_dim = Source{[Schema=\"baseview\",Item=\"vw_bu_comb_dim\"]}[Data]",
                "in",
                "    baseview_vw_bu_comb_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "final_spend_pool_PurchaseVendor_lkp",
        "columns": [
          {
            "name": "vendor_id",
            "dataType": "string",
            "sourceColumn": "vendor_id"
          },
          {
            "name": "sap_material_group_code",
            "dataType": "string",
            "sourceColumn": "sap_material_group_code"
          },
          {
            "name": "spend_pool_lkp_code",
            "dataType": "string",
            "sourceColumn": "spend_pool_lkp_code"
          },
          {
            "name": "user_cmmnt",
            "dataType": "string",
            "sourceColumn": "user_cmmnt"
          },
          {
            "name": "last_change_user_name",
            "dataType": "string",
            "sourceColumn": "last_change_user_name"
          },
          {
            "name": "PurchaseVendorMGCComboKey",
            "dataType": "string",
            "sourceColumn": "PurchaseVendorMGCComboKey"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    support_final_spend_pool_lkp = Source{[Schema=\"support\",Item=\"final_spend_pool_lkp\"]}[Data],",
                "    #\"Added Custom\" = Table.AddColumn(support_final_spend_pool_lkp, \"PurchaseVendorMGCComboKey\", each Text.Combine({[vendor_id],[sap_material_group_code]}))",
                "in",
                "    #\"Added Custom\""
              ]
            }
          }
        ]
      },
      {
        "name": "final_spend_pool_InvoiceVendor_lkp",
        "columns": [
          {
            "name": "vendor_id",
            "dataType": "string",
            "sourceColumn": "vendor_id"
          },
          {
            "name": "sap_material_group_code",
            "dataType": "string",
            "sourceColumn": "sap_material_group_code"
          },
          {
            "name": "spend_pool_lkp_code",
            "dataType": "string",
            "sourceColumn": "spend_pool_lkp_code"
          },
          {
            "name": "user_cmmnt",
            "dataType": "string",
            "sourceColumn": "user_cmmnt"
          },
          {
            "name": "last_change_user_name",
            "dataType": "string",
            "sourceColumn": "last_change_user_name"
          },
          {
            "name": "InvoiceVendorMGCComboKey",
            "dataType": "string",
            "sourceColumn": "InvoiceVendorMGCComboKey"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    support_final_spend_pool_lkp = Source{[Schema=\"support\",Item=\"final_spend_pool_lkp\"]}[Data],",
                "    #\"Added Custom\" = Table.AddColumn(support_final_spend_pool_lkp, \"InvoiceVendorMGCComboKey\", each Text.Combine({[vendor_id],[sap_material_group_code]}))",
                "in",
                "    #\"Added Custom\""
              ]
            }
          }
        ]
      },
      {
        "name": "invoice_vendor_spend_pool_lkp",
        "columns": [
          {
            "name": "vendor_id",
            "dataType": "string",
            "sourceColumn": "vendor_id"
          },
          {
            "name": "spend_pool_lkp_code",
            "dataType": "string",
            "sourceColumn": "spend_pool_lkp_code"
          },
          {
            "name": "user_cmmnt",
            "dataType": "string",
            "sourceColumn": "user_cmmnt"
          },
          {
            "name": "last_change_user_name",
            "dataType": "string",
            "sourceColumn": "last_change_user_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    support_vendor_spend_pool_lkp = Source{[Schema=\"support\",Item=\"vendor_spend_pool_lkp\"]}[Data]",
                "in",
                "    support_vendor_spend_pool_lkp"
              ]
            }
          }
        ]
      },
      {
        "name": "purchase_vendor_spend_pool_lkp",
        "columns": [
          {
            "name": "vendor_id",
            "dataType": "string",
            "sourceColumn": "vendor_id"
          },
          {
            "name": "spend_pool_lkp_code",
            "dataType": "string",
            "sourceColumn": "spend_pool_lkp_code"
          },
          {
            "name": "user_cmmnt",
            "dataType": "string",
            "sourceColumn": "user_cmmnt"
          },
          {
            "name": "last_change_user_name",
            "dataType": "string",
            "sourceColumn": "last_change_user_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    support_vendor_spend_pool_lkp = Source{[Schema=\"support\",Item=\"vendor_spend_pool_lkp\"]}[Data]",
                "in",
                "    support_vendor_spend_pool_lkp"
              ]
            }
          }
        ]
      },
      {
        "name": "invoice_star",
        "columns": [
          {
            "name": "source_system_code",
            "dataType": "string",
            "sourceColumn": "source_system_code"
          },
          {
            "name": "company_code",
            "dataType": "string",
            "sourceColumn": "company_code"
          },
          {
            "name": "fiscal_year_num",
            "dataType": "int64",
            "sourceColumn": "fiscal_year_num"
          },
          {
            "name": "acct_doc_num",
            "dataType": "string",
            "sourceColumn": "acct_doc_num"
          },
          {
            "name": "acct_doc_line_num",
            "dataType": "int64",
            "sourceColumn": "acct_doc_line_num"
          },
          {
            "name": "doc_post_date",
            "dataType": "dateTime",
            "sourceColumn": "doc_post_date",
            "formatString": "yyyy-MM-dd",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"yyyy-MM-dd\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "global_curr_amt",
            "dataType": "double",
            "sourceColumn": "global_curr_amt"
          },
          {
            "name": "global_curr_amt_mm",
            "dataType": "double",
            "sourceColumn": "global_curr_amt_mm"
          },
          {
            "name": "doc_curr_amt",
            "dataType": "double",
            "sourceColumn": "doc_curr_amt"
          },
          {
            "name": "doc_curr_amt_mm",
            "dataType": "double",
            "sourceColumn": "doc_curr_amt_mm"
          },
          {
            "name": "cal_year_month",
            "dataType": "string",
            "sourceColumn": "cal_year_month"
          },
          {
            "name": "cal_year_month_disp",
            "dataType": "string",
            "sourceColumn": "cal_year_month_disp"
          },
          {
            "name": "purchase_doc_type_code",
            "dataType": "string",
            "sourceColumn": "purchase_doc_type_code"
          },
          {
            "name": "acct_assign_categ_code",
            "dataType": "string",
            "sourceColumn": "acct_assign_categ_code"
          },
          {
            "name": "purchase_vendor_id",
            "dataType": "string",
            "sourceColumn": "purchase_vendor_id"
          },
          {
            "name": "create_date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "create_date"
          },
          {
            "name": "invoice_item_desc",
            "dataType": "string",
            "sourceColumn": "invoice_item_desc"
          },
          {
            "name": "doc_curr_code",
            "dataType": "string",
            "sourceColumn": "doc_curr_code"
          },
          {
            "name": "vendor_master_object_cap_id",
            "dataType": "string",
            "sourceColumn": "vendor_master_object_cap_id"
          },
          {
            "name": "plant_code",
            "dataType": "string",
            "sourceColumn": "plant_code"
          },
          {
            "name": "clear_doc_num",
            "dataType": "string",
            "sourceColumn": "clear_doc_num"
          },
          {
            "name": "purchase_group_code",
            "dataType": "string",
            "sourceColumn": "purchase_group_code"
          },
          {
            "name": "fi_item_desc",
            "dataType": "string",
            "sourceColumn": "fi_item_desc"
          },
          {
            "name": "invoice_vendor_id",
            "dataType": "string",
            "sourceColumn": "invoice_vendor_id"
          },
          {
            "name": "invoice_vendor_company",
            "dataType": "string",
            "sourceColumn": "invoice_vendor_company"
          },
          {
            "name": "invoice_coupa_contract_id",
            "dataType": "string",
            "sourceColumn": "invoice_coupa_contract_id"
          },
          {
            "name": "purchase_doc_num",
            "dataType": "string",
            "sourceColumn": "purchase_doc_num"
          },
          {
            "name": "wbs_element_id",
            "dataType": "string",
            "sourceColumn": "wbs_element_id"
          },
          {
            "name": "clear_date",
            "dataType": "dateTime",
            "sourceColumn": "clear_date"
          },
          {
            "name": "baseline_date",
            "dataType": "dateTime",
            "sourceColumn": "baseline_date"
          },
          {
            "name": "purchase_org_id",
            "dataType": "string",
            "sourceColumn": "purchase_org_id"
          },
          {
            "name": "material_id",
            "dataType": "string",
            "sourceColumn": "material_id"
          },
          {
            "name": "material_id_disp",
            "dataType": "string",
            "sourceColumn": "material_id_disp"
          },
          {
            "name": "invoice_uom",
            "dataType": "string",
            "sourceColumn": "invoice_uom"
          },
          {
            "name": "purchase_doc_line_num",
            "dataType": "int64",
            "sourceColumn": "purchase_doc_line_num"
          },
          {
            "name": "gl_account_id",
            "dataType": "string",
            "sourceColumn": "gl_account_id"
          },
          {
            "name": "invoice_doc_type_code",
            "dataType": "string",
            "sourceColumn": "invoice_doc_type_code"
          },
          {
            "name": "material_group_code",
            "dataType": "string",
            "sourceColumn": "material_group_code"
          },
          {
            "name": "profit_center_code",
            "dataType": "string",
            "sourceColumn": "profit_center_code"
          },
          {
            "name": "doc_date",
            "dataType": "dateTime",
            "sourceColumn": "doc_date"
          },
          {
            "name": "cost_center_code",
            "dataType": "string",
            "sourceColumn": "cost_center_code"
          },
          {
            "name": "payment_term_code",
            "dataType": "string",
            "sourceColumn": "payment_term_code"
          },
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "internal_order_id",
            "dataType": "string",
            "sourceColumn": "internal_order_id"
          },
          {
            "name": "invoice_usd_amt",
            "dataType": "double",
            "sourceColumn": "invoice_usd_amt",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "invoice_usd_amt_mm",
            "dataType": "double",
            "sourceColumn": "invoice_usd_amt_mm",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "invoice_vendor_mgc_key",
            "dataType": "string",
            "sourceColumn": "invoice_vendor_mgc_key"
          },
          {
            "name": "purch_vendor_mgc_key",
            "dataType": "string",
            "sourceColumn": "purch_vendor_mgc_key"
          },
          {
            "name": "spend_pool_lkp_code",
            "dataType": "string",
            "sourceColumn": "spend_pool_lkp_code"
          },
          {
            "name": "channel_name",
            "dataType": "string",
            "sourceColumn": "channel_name"
          },
          {
            "name": "purch_doc_line_key",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "purch_doc_line_key"
          },
          {
            "name": "invoice_country_code",
            "dataType": "string",
            "sourceColumn": "invoice_country_code"
          },
          {
            "name": "tdcval_flag",
            "dataType": "int64",
            "sourceColumn": "tdcval_flag",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "tdcval_code",
            "dataType": "string",
            "sourceColumn": "tdcval_code"
          },
          {
            "name": "split_record_num",
            "dataType": "int64",
            "sourceColumn": "split_record_num"
          },
          {
            "name": "tdcval_split_flag",
            "dataType": "int64",
            "sourceColumn": "tdcval_split_flag",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "business_unit_lkp_code",
            "dataType": "string",
            "sourceColumn": "business_unit_lkp_code"
          },
          {
            "name": "fi_mm",
            "dataType": "string",
            "sourceColumn": "fi_mm"
          },
          {
            "name": "ap_nonap",
            "dataType": "string",
            "sourceColumn": "ap_nonap"
          },
          {
            "name": "pg_nonpg",
            "dataType": "string",
            "sourceColumn": "pg_nonpg"
          },
          {
            "name": "paid_notpaid",
            "dataType": "string",
            "sourceColumn": "paid_notpaid"
          },
          {
            "name": "m_country",
            "dataType": "string",
            "sourceColumn": "m_country"
          },
          {
            "name": "m_region",
            "dataType": "string",
            "sourceColumn": "m_region"
          },
          {
            "name": "m_subregion",
            "dataType": "string",
            "sourceColumn": "m_subregion"
          },
          {
            "name": "m_gbs_center",
            "dataType": "string",
            "sourceColumn": "m_gbs_center"
          },
          {
            "name": "m_scorecard_region",
            "dataType": "string",
            "sourceColumn": "m_scorecard_region"
          },
          {
            "name": "doc_post_date_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "doc_post_date_key"
          },
          {
            "name": "clear_date_Key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "clear_date_Key"
          },
          {
            "name": "sc_ext_bus_partner",
            "dataType": "string",
            "sourceColumn": "sc_ext_bus_partner"
          },
          {
            "name": "sc_category",
            "dataType": "string",
            "sourceColumn": "sc_category"
          },
          {
            "name": "invoice_channel",
            "dataType": "string",
            "sourceColumn": "invoice_channel"
          },
          {
            "name": "invoice_channel_group",
            "dataType": "string",
            "sourceColumn": "invoice_channel_group"
          },
          {
            "name": "autoposted",
            "dataType": "string",
            "sourceColumn": "autoposted"
          },
          {
            "name": "payment_on_time",
            "dataType": "string",
            "sourceColumn": "payment_on_time"
          },
          {
            "name": "fiscal_year_period_int_partition",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "fiscal_year_period_int_partition"
          },
          {
            "name": "eu_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "eu_sup_care_owner"
          },
          {
            "name": "eecar_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "eecar_sup_care_owner"
          },
          {
            "name": "asia_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "asia_sup_care_owner"
          },
          {
            "name": "imea_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "imea_sup_care_owner"
          },
          {
            "name": "amer_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "amer_sup_care_owner"
          },
          {
            "name": "invoice_relationship",
            "dataType": "string",
            "sourceColumn": "invoice_relationship"
          },
          {
            "name": "site_map_site",
            "dataType": "string",
            "sourceColumn": "site_map_site"
          },
          {
            "name": "site_map_plant_ho",
            "dataType": "string",
            "sourceColumn": "site_map_plant_ho"
          },
          {
            "name": "site_map_cluster",
            "dataType": "string",
            "sourceColumn": "site_map_cluster"
          },
          {
            "name": "site_map_cluster_lvl_2",
            "dataType": "string",
            "sourceColumn": "site_map_cluster_lvl_2"
          },
          {
            "name": "direct_owner",
            "dataType": "string",
            "sourceColumn": "direct_owner"
          },
          {
            "name": "purchase_org_direct_spend",
            "dataType": "string",
            "sourceColumn": "purchase_org_direct_spend"
          },
          {
            "name": "purchase_org_direct_spend_description",
            "dataType": "string",
            "sourceColumn": "purchase_org_direct_spend_description"
          },
          {
            "name": "invoice_credit",
            "dataType": "string",
            "sourceColumn": "invoice_credit"
          },
          {
            "name": "vendor_category_scope",
            "dataType": "string",
            "sourceColumn": "vendor_category_scope"
          },
          {
            "name": "vendor_category_lease_building_name",
            "dataType": "string",
            "sourceColumn": "vendor_category_lease_building_name"
          },
          {
            "name": "vendor_category_vendor_name",
            "dataType": "string",
            "sourceColumn": "vendor_category_vendor_name"
          },
          {
            "name": "vendor_category_country",
            "dataType": "string",
            "sourceColumn": "vendor_category_country"
          },
          {
            "name": "vendor_category_region",
            "dataType": "string",
            "sourceColumn": "vendor_category_region"
          },
          {
            "name": "vendor_category_cluster",
            "dataType": "string",
            "sourceColumn": "vendor_category_cluster"
          },
          {
            "name": "solution_to_offer_porg",
            "dataType": "string",
            "sourceColumn": "solution_to_offer_porg"
          },
          {
            "name": "opportunity",
            "dataType": "string",
            "sourceColumn": "opportunity"
          },
          {
            "name": "solution_technology",
            "dataType": "string",
            "sourceColumn": "solution_technology"
          },
          {
            "name": "sol_tech_coupa_tungsten",
            "dataType": "string",
            "sourceColumn": "sol_tech_coupa_tungsten"
          },
          {
            "name": "m_country_description",
            "dataType": "string",
            "sourceColumn": "m_country_description"
          },
          {
            "name": "cg_pm_category",
            "dataType": "string",
            "sourceColumn": "cg_pm_category"
          },
          {
            "name": "cg_pm_owner",
            "dataType": "string",
            "sourceColumn": "cg_pm_owner"
          },
          {
            "type": "calculated",
            "name": "TEST_grand_total",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(invoice_star[acct_doc_num],invoice_star[solution_technology])"
          },
          {
            "name": "coupa_tungsten_owner",
            "dataType": "string",
            "sourceColumn": "coupa_tungsten_owner"
          },
          {
            "name": "vendor_Country_code",
            "dataType": "string",
            "sourceColumn": "vendor_country_code"
          },
          {
            "name": "le_country_coupa_enabled",
            "dataType": "string",
            "sourceColumn": "le_country_coupa_enabled"
          },
          {
            "name": "le_country_tungsten_enabled",
            "dataType": "string",
            "sourceColumn": "le_country_tungsten_enabled"
          },
          {
            "name": "vendor_country_coupa_compliant",
            "dataType": "string",
            "sourceColumn": "vendor_country_coupa_compliant"
          },
          {
            "name": "vendor_country_tungsten_compliant",
            "dataType": "string",
            "sourceColumn": "vendor_country_tungsten_compliant"
          },
          {
            "name": "acct_doc_key",
            "dataType": "string",
            "sourceColumn": "acct_doc_key"
          },
          {
            "name": "invoice_fraction",
            "dataType": "double",
            "sourceColumn": "invoice_fraction",
            "formatString": "0.00"
          },
          {
            "type": "calculated",
            "name": "vendor_purchase_group_key",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "if((invoice_star[purchase_group_code]<>\"--\"),CONCATENATE(CONCATENATE(invoice_star[invoice_vendor_id],\" \"),invoice_star[purchase_group_code]),\"--\")"
          },
          {
            "name": "fi_compliant",
            "dataType": "string",
            "sourceColumn": "fi_compliant"
          },
          {
            "name": "doc_curr_amount_cluster",
            "dataType": "string",
            "sourceColumn": "doc_curr_amount_cluster"
          },
          {
            "name": "invoice_source",
            "dataType": "string",
            "sourceColumn": "invoice_source"
          },
          {
            "name": "pot_status",
            "dataType": "string",
            "sourceColumn": "pot_status"
          },
          {
            "name": "first_approver",
            "dataType": "string",
            "sourceColumn": "first_approver"
          },
          {
            "name": "second_approver",
            "dataType": "string",
            "sourceColumn": "second_approver"
          },
          {
            "name": "net_payment_due_date",
            "dataType": "dateTime",
            "sourceColumn": "net_payment_due_date"
          },
          {
            "name": "dxc_touched_status",
            "dataType": "string",
            "sourceColumn": "dxc_touched_status"
          },
          {
            "type": "calculated",
            "name": "SCF_enroll",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF(MAX(vendor_company_dim[payment_method]) = \"P\" && (MAX(vendor_company_dim[payment_method_supplement]) = \"CI\" || MAX(vendor_company_dim[payment_method_supplement]) = \"DB\" || MAX(vendor_company_dim[payment_method_supplement]) = \"JP\"), \"ENROLLED\",\"NOT-ENROLLED\")"
          },
          {
            "name": "region_lkp_key",
            "dataType": "string",
            "sourceColumn": "region_lkp_key"
          },
          {
            "name": "ledger_num",
            "dataType": "string",
            "sourceColumn": "ledger_num"
          },
          {
            "name": "dxc_touched_is_dxc",
            "dataType": "string",
            "sourceColumn": "dxc_touched_is_dxc"
          },
          {
            "name": "ess_org_approvers",
            "dataType": "int64",
            "sourceColumn": "ess_org_approvers"
          }
        ],
        "partitions": [
          {
            "name": "201901",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201901)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201901)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201902",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201902)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201902)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201903",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201903)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201903)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201904",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201904)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201904)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201905",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201905)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201905)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201906",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201906)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201906)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201907",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201907)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201907)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201908",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201908)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201908)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201909",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201909)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201909)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201910",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201910)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201910)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201911",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201911)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201911)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201912",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201912)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201912)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202001",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202001)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202001)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202002",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202002)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202002)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202003",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202003)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202003)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201801",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201801)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201801)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201802",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201802)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201802)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201803",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201803)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201803)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201804",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201804)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201804)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201805",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201805)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201805)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201806",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201806)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201806)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201807",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201807)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201807)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201808",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201808)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201808)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201809",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201809)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201809)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201810",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201810)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201810)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201811",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201811)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201811)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201812",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201812)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201812)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202004",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202004)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202004)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202005",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202005)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202005)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202006",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202006)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202006)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202007",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202007)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202007)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202008",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202008)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202008)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202009",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202009)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202009)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202010",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202010)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202010)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202011",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202011)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202011)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202012",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202012)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202012)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202101",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202101)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202101)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202102",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202102)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202102)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202103",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202103)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202103)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202104",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202104)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202104)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202105",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202105)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202105)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202106",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202106)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202106)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202107",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202107)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202107)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202108",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202108)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202108)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202109",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202109)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202109)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202110",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202110)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202110)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202111",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202111)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202111)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "202112",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202112)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 202112)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201701",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201701)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201701)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201702",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201702)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201702)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201703",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201703)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201703)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201704",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201704)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201704)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201705",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201705)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201705)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201706",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201706)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201706)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201707",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201707)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201707)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201708",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201708)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201708)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201709",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201709)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201709)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201710",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201710)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201710)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201711",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201711)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201711)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "201712",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201712)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_invoice_star = Source{[Schema=\"baseview\",Item=\"vw_invoice_star\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_invoice_star, each [fiscal_year_period_int_partition] = 201712)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "M_Total Invoice #",
            "expression": [
              "",
              "SUMX ( invoice_star, invoice_star[invoice_fraction] )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Electronic %",
            "expression": [
              "",
              " (",
              "    CALCULATE (",
              "        [M_Total Invoice #],",
              "        invoice_star[invoice_channel_group] = \"ELECTRONIC\"",
              "    ) / [M_Total Invoice #]",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total Opportunity #",
            "expression": " [M_Total Invoice #] (invoice_star[opportunity] = \"NOT CONVERTED YET\")",
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "M_Electronic Count #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total Invoice #],",
              "   invoice_star[invoice_channel_group] = \"ELECTRONIC\"",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Electronic % CY_CM",
            "expression": [
              "",
              "DIVIDE (",
              "    CALCULATE (",
              "        [M_Electronic Count #],",
              "        FILTER (",
              "            doc_post_date_dim,",
              "            ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "                && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "        )",
              "    ),",
              "    (",
              "        CALCULATE (",
              "            [M_Total Invoice #],",
              "            FILTER (",
              "                doc_post_date_dim,",
              "                doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "                    && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "            )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Electronic % CY_PM",
            "expression": [
              "",
              "DIVIDE (",
              "    CALCULATE (",
              "        [M_Electronic Count #],",
              "        FILTER (",
              "            doc_post_date_dim,",
              "            (",
              "                doc_post_date_dim[calendar_year]",
              "                    = IF (",
              "                        ( doc_post_date_dim[closed_month] = 1 ),",
              "                        doc_post_date_dim[closed_year] - 1,",
              "                        doc_post_date_dim[closed_year]",
              "                    )",
              "                    && (",
              "                        doc_post_date_dim[calendar_month]",
              "                            = IF (",
              "                                ( doc_post_date_dim[closed_month] = 1 ),",
              "                                12,",
              "                                doc_post_date_dim[closed_month] - 1",
              "                            )",
              "                    )",
              "            )",
              "        )",
              "    ),",
              "    (",
              "        CALCULATE (",
              "            [M_Total Invoice #],",
              "            FILTER (",
              "                doc_post_date_dim,",
              "                doc_post_date_dim[calendar_year]",
              "                    = IF (",
              "                        ( doc_post_date_dim[closed_month] = 1 ),",
              "                        doc_post_date_dim[closed_year] - 1,",
              "                        doc_post_date_dim[closed_year]",
              "                    )",
              "                    && doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "            )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Electronic % YA_CM",
            "expression": [
              "",
              "DIVIDE (",
              "    CALCULATE (",
              "        [M_Electronic Count #],",
              "        FILTER (",
              "            doc_post_date_dim,",
              "            ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] - 1 )",
              "                && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "        )",
              "    ),",
              "    (",
              "        CALCULATE (",
              "            [M_Total Invoice #],",
              "            FILTER (",
              "                doc_post_date_dim,",
              "                doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] - 1",
              "                    && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "            )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Opportunity_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total Opportunity #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total Invoice #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Opportunity % CY_CM",
            "expression": [
              "",
              "DIVIDE (",
              "    CALCULATE (",
              "        [M_Opportunity_CY_CM #],",
              "        FILTER (",
              "            doc_post_date_dim,",
              "            ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "                && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "        )",
              "    ),",
              "    (",
              "        CALCULATE (",
              "            [M_Total_Invoice_CY_CM #],",
              "            FILTER (",
              "                doc_post_date_dim,",
              "                doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "                    && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "            )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Electronic_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Electronic Count #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Opportunity_CY_CM %",
            "expression": [
              "",
              "DIVIDE (",
              "    ( [M_Electronic_CY_CM #] + [M_Opportunity_CY_CM #] ),",
              "    [M_Total_Invoice_CY_CM #]",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_Autoposted #",
            "expression": [
              "",
              "CALCULATE ( [M_Total Invoice #], invoice_star[autoposted] = \"X\" )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Autoposted % YA_CM",
            "expression": [
              "",
              "DIVIDE (",
              "    CALCULATE (",
              "        [M_Total_Autoposted #],",
              "        FILTER (",
              "            doc_post_date_dim,",
              "            ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] - 1 )",
              "                && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "        )",
              "    ),",
              "    (",
              "        CALCULATE (",
              "            [M_Total Invoice #],",
              "            FILTER (",
              "                doc_post_date_dim,",
              "                doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] - 1",
              "                    && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "            )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Autoposted %",
            "expression": [
              "",
              " (",
              "    CALCULATE ( [M_Total Invoice #], invoice_star[autoposted] = \"X\" ) / [M_Total Invoice #]",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Autoposted % CY_CM",
            "expression": [
              "",
              "DIVIDE (",
              "    CALCULATE (",
              "        [M_Total_Autoposted #],",
              "        FILTER (",
              "            doc_post_date_dim,",
              "            ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "                && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "        )",
              "    ),",
              "    (",
              "        CALCULATE (",
              "            [M_Total Invoice #],",
              "            FILTER (",
              "                doc_post_date_dim,",
              "                doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "                    && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "            )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Autoposted % CY_PM",
            "expression": [
              "DIVIDE (",
              "    CALCULATE (",
              "        [M_Total_Autoposted #],",
              "        FILTER (",
              "            doc_post_date_dim,",
              "            (",
              "                doc_post_date_dim[calendar_year]",
              "                    = IF (",
              "                        ( doc_post_date_dim[closed_month] = 1 ),",
              "                        doc_post_date_dim[closed_year] - 1,",
              "                        doc_post_date_dim[closed_year]",
              "                    )",
              "                    && (",
              "                        doc_post_date_dim[calendar_month]",
              "                            = IF (",
              "                                ( doc_post_date_dim[closed_month] = 1 ),",
              "                                12,",
              "                                doc_post_date_dim[closed_month] - 1",
              "                            )",
              "                    )",
              "            )",
              "        )",
              "    ),",
              "    (",
              "        CALCULATE (",
              "            [M_Total Invoice #],",
              "            FILTER (",
              "                doc_post_date_dim,",
              "                doc_post_date_dim[calendar_year]",
              "                    = IF (",
              "                        ( doc_post_date_dim[closed_month] = 1 ),",
              "                        doc_post_date_dim[closed_year] - 1,",
              "                        doc_post_date_dim[closed_year]",
              "                    )",
              "                    && doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "            )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total Opportunity %",
            "expression": [
              "",
              " (",
              "    DIVIDE (",
              "        ( [M_Total Opportunity #] + [M_Electronic Count #] ),",
              "        [M_Total Invoice #]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Opportunity_CY_PM #",
            "expression": [
              " CALCULATE (",
              "    [M_Total Opportunity #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Autoposted_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Autoposted #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Autoposted_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Autoposted #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Electronic_CY_PM #",
            "expression": [
              " CALCULATE (",
              "    [M_Electronic Count #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Tungsten_CY_CM#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Opportunity_CY_CM #],",
              "    invoice_star[solution_to_offer_porg] = \"OFFER TUNGSTEN\"",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Coupa_CY_CM#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Opportunity_CY_CM #],",
              "    ( invoice_star[solution_to_offer_porg] = \"OFFER COUPA\" )",
              "        || ( invoice_star[solution_to_offer_porg] = \"OFFER COUPA (CROSSBORDER)\" )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Opportunity #",
            "expression": " [M_Coupa_CY_CM#] + [M_Tungsten_CY_CM#]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Manually_Posted",
            "expression": "[M_Total Invoice #]-[M_Total_Autoposted #]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Manually_Posted_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Manually_Posted],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Spend USD",
            "expression": "SUM(invoice_star[invoice_usd_amt])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_Total_Autoposted_CY_CM USD",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Spend USD],",
              "    FILTER ( invoice_star, ( invoice_star[autoposted] = \"x\" ) ),",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_Total_invoice_chart #",
            "expression": [
              "",
              "DISTINCTCOUNT ( invoice_star[TEST_grand_total] )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_INVOICE#",
            "expression": [
              "",
              "TOTALMTD ( [M_Total Invoice #], DATESMTD ( invoice_star[doc_post_date] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_ELECTRONIC#",
            "expression": [
              "",
              "TOTALMTD ( [M_Electronic Count #], DATESMTD ( invoice_star[doc_post_date] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_AUTOPOSTED#",
            "expression": [
              "",
              "TOTALMTD ( [M_Total_Autoposted #], DATESMTD ( invoice_star[doc_post_date] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_ELECTRONIC%",
            "expression": [
              "",
              "DIVIDE ( [M_MTD_ELECTRONIC#], [M_MTD_INVOICE#] )"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_MTD_AUTOPOSTED%",
            "expression": [
              "",
              "DIVIDE ( [M_MTD_AUTOPOSTED#], [M_MTD_INVOICE#] )"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Chg vs PM (Electronic)#",
            "expression": [
              "[M_Electronic_CY_CM #]-[M_Electronic_CY_PM #] ",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PM (Electronic)%",
            "expression": [
              "[M_Electronic % CY_CM]-[M_Electronic % CY_PM]",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Chg vs PM (Autopost)#",
            "expression": [
              "[M_Autoposted_CY_CM #]-[M_Autoposted_CY_PM #]",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PM (Autopost)%",
            "expression": "[M_Autoposted % CY_CM]-[M_Autoposted % CY_PM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Adoption_Technology%",
            "expression": [
              " DIVIDE([M_Total Invoice #],CALCULATE([M_Total Invoice #],ALL(invoice_star[solution_technology])))",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Vendor_Buyer_Scope #",
            "expression": [
              " DISTINCTCOUNT(invoice_star[vendor_purchase_group_key])",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Vendor_Buyer_Scope_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Vendor_Buyer_Scope #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Vendor_Buyer_Scope_Electronic_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Vendor_Buyer_Scope_CY_CM #],",
              "    invoice_star[invoice_channel_group] = \"ELECTRONIC\"",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs YA (Autopost) %",
            "expression": " [M_Autoposted % CY_CM] - [M_Autoposted % YA_CM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_Vendors #",
            "expression": " DISTINCTCOUNT(invoice_star[invoice_vendor_id])",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Vendors_Enrolled #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Vendors #],",
              "    invoice_star[invoice_channel_group] = \"ELECTRONIC\" )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Vendors_Enrolled %",
            "expression": " DIVIDE([M_Total_Vendors_Enrolled #],[M_Total_Vendors #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_Vendors # CY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    DISTINCTCOUNT ( invoice_star[invoice_vendor_id] ),",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Vendors_Enrolled # CY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Vendors # CY_CM],",
              "    invoice_star[invoice_channel_group] = \"ELECTRONIC\" )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Vendors_Enrolled % CY_CM",
            "expression": [
              "",
              "DIVIDE ( [M_Total_Vendors_Enrolled # CY_CM], [M_Total_Vendors # CY_CM] )"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Chg vs YA (Electronic)%",
            "expression": [
              "",
              "[M_Electronic % CY_CM] - [M_Electronic % YA_CM]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_Paid_Vendors_CY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Paid_Vendors],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_CY_PM",
            "expression": [
              " CALCULATE (",
              "    [M_Total_Paid_Vendors],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_PY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Paid_Vendors],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] - 1 )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_FYTD",
            "expression": " CALCULATE([M_Total_Paid_Vendors], doc_post_date_dim[is_current_fiscal_year] = \"Yes\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_CFY",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Paid_Vendors],",
              "    FILTER (",
              "        invoice_star,",
              "        invoice_star[fiscal_year_num]",
              "            = MAX ( invoice_star[fiscal_year_num] ) - 1",
              "    )",
              ")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_PFY",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Paid_Vendors],",
              "    FILTER (",
              "        invoice_star,",
              "        invoice_star[fiscal_year_num]",
              "            = MAX ( invoice_star[fiscal_year_num] ) - 2",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs",
            "expression": "CALCULATE([M_Total_GUV's], FILTER(invoice_star, invoice_star[paid_notpaid] = \"PAID\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_MTD",
            "expression": [
              "",
              "TOTALMTD ( [M_Total_Paid_GUVs], DATESMTD ( invoice_star[doc_post_date] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_CY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Paid_GUVs],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_CY_PM",
            "expression": [
              " CALCULATE (",
              "    [M_Total_Paid_GUVs],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_PY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total_Paid_GUVs],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] - 1 )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_GUVs_FYTD",
            "expression": " CALCULATE([M_Total_Paid_GUVs], doc_post_date_dim[is_current_fiscal_year] = \"Yes\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_GUVs_CFY",
            "expression": [
              " CALCULATE ( [M_Total_Paid_GUVs], doc_post_date_dim[fy_type] = \"FY_PREV\" )",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_GUVs_PFY",
            "expression": [
              " CALCULATE (",
              "    [M_Total_Paid_GUVs],doc_post_date_dim[fy_type]=\"FY_PREV_2\" )",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PM (Invoices)",
            "expression": " [M_Total_Invoice_CY_CM #] - [M_Total_Invoice_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs YA (Invoices)",
            "expression": " [M_Total_Invoice_CY_CM #] - [M_Total_Invoice_PY_CM]",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PFY (Invoices)",
            "expression": " [M_Total_Invoice_CFY] - [M_Total_Invoice_PFY]",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PM (Vendors)",
            "expression": " [M_Total_Paid_Vendors_CY_CM] - [M_Total_Paid_Vendors_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs YA (Vendors)",
            "expression": " [M_Total_Paid_Vendors_CY_CM] - [M_Total_Paid_Vendors_PY_CM]",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PFY (Vendors)",
            "expression": " [M_Total_Paid_Vendors_CFY] - [M_Total_Paid_Vendors_PFY]",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PM (GUVs)",
            "expression": " [M_Total_Paid_GUVs_CY_CM] - [M_Total_Paid_GUVs_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs YA (GUVs)",
            "expression": " [M_Total_Paid_GUVs_CY_CM] - [M_Total_Paid_GUVs_PY_CM]",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PFY (GUVs)",
            "expression": " [M_Total_GUVs_CFY] - [M_Total_GUVs_PFY]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_CY_PM",
            "expression": [
              " CALCULATE (",
              "    [M_Total Invoice #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_PY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total Invoice #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] - 1 )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_FYTD",
            "expression": " CALCULATE([M_Total Invoice #], doc_post_date_dim[is_current_fiscal_year] = \"Yes\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_CFY",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Total Invoice #],",
              "    FILTER (",
              "        invoice_star,",
              "        invoice_star[fiscal_year_num]",
              "            = MAX ( invoice_star[fiscal_year_num] ) - 1",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_PFY",
            "expression": [
              "CALCULATE (",
              "    [M_Total Invoice #],",
              "    FILTER (",
              "        invoice_star,",
              "        invoice_star[fiscal_year_num]",
              "            = MAX ( invoice_star[fiscal_year_num] ) - 2))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors",
            "expression": [
              " CALCULATE (",
              "    [M_Total_Vendors #],",
              "\tinvoice_star[paid_notpaid] = \"PAID\"",
              "\t)"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_MTD",
            "expression": " TOTALMTD([M_Total_Paid_Vendors], DATESMTD(invoice_star[doc_post_date]))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_CY_PM_FRT",
            "expression": " IF([M_Total_Invoice_CY_PM] < 1000 ,[M_Total_Invoice_CY_PM],IF( [M_Total_Invoice_CY_PM] < 1000000,FORMAT([M_Total_Invoice_CY_PM]/1000, \"###M\"),FORMAT([M_Total_Invoice_CY_PM]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_FYTD_FRT",
            "expression": " IF([M_Total_Invoice_FYTD] < 1000 ,[M_Total_Invoice_FYTD],IF( [M_Total_Invoice_FYTD] < 1000000,FORMAT([M_Total_Invoice_FYTD]/1000, \"###M\"),FORMAT([M_Total_Invoice_FYTD]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_FRT",
            "expression": " IF([M_Total_Paid_Vendors] < 1000 ,[M_Total_Paid_Vendors],IF( [M_Total_Paid_Vendors] < 1000000,FORMAT([M_Total_Paid_Vendors]/1000, \"###M\"),FORMAT([M_Total_Paid_Vendors]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_MTD_FRT",
            "expression": " IF([M_Total_Paid_Vendors_MTD] < 1000 ,[M_Total_Paid_Vendors_MTD],IF( [M_Total_Paid_Vendors_MTD] < 1000000,FORMAT([M_Total_Paid_Vendors_MTD]/1000, \"###M\"),FORMAT([M_Total_Paid_Vendors_MTD]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_CY_CM_FRT",
            "expression": " IF([M_Total_Paid_Vendors_CY_CM] < 1000 ,[M_Total_Paid_Vendors_CY_CM],IF( [M_Total_Paid_Vendors_CY_CM] < 1000000,FORMAT([M_Total_Paid_Vendors_CY_CM]/1000, \"###M\"),FORMAT([M_Total_Paid_Vendors_CY_CM]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_CY_PM_FRT",
            "expression": " IF([M_Total_Paid_Vendors_CY_PM] < 1000 ,[M_Total_Paid_Vendors_CY_PM],IF( [M_Total_Paid_Vendors_CY_PM] < 1000000,FORMAT([M_Total_Paid_Vendors_CY_PM]/1000, \"###M\"),FORMAT([M_Total_Paid_Vendors_CY_PM]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_PY_CM_FRT",
            "expression": " IF([M_Total_Paid_Vendors_PY_CM] < 1000 ,[M_Total_Paid_Vendors_PY_CM],IF( [M_Total_Paid_Vendors_PY_CM] < 1000000,FORMAT([M_Total_Paid_Vendors_PY_CM]/1000, \"###M\"),FORMAT([M_Total_Paid_Vendors_PY_CM]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_Vendors_FYTD_FRT",
            "expression": " IF([M_Total_Paid_Vendors_FYTD] < 1000 ,[M_Total_Paid_Vendors_FYTD],IF( [M_Total_Paid_Vendors_FYTD] < 1000000,FORMAT([M_Total_Paid_Vendors_FYTD]/1000, \"###M\"),FORMAT([M_Total_Paid_Vendors_FYTD]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_FRT",
            "expression": " IF([M_Total_Paid_GUVs] < 1000 ,[M_Total_Paid_GUVs],IF( [M_Total_Paid_GUVs] < 1000000,FORMAT([M_Total_Paid_GUVs]/1000, \"###M\"),FORMAT([M_Total_Paid_GUVs]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_MTD_FRT",
            "expression": " IF([M_Total_Paid_GUVs_MTD] < 1000 ,[M_Total_Paid_GUVs_MTD],IF( [M_Total_Paid_GUVs_MTD] < 1000000,FORMAT([M_Total_Paid_GUVs_MTD]/1000, \"###M\"),FORMAT([M_Total_Paid_GUVs_MTD]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_CY_CM_FRT",
            "expression": " IF([M_Total_Paid_GUVs_CY_CM] < 1000 ,[M_Total_Paid_GUVs_CY_CM],IF( [M_Total_Paid_GUVs_CY_CM] < 1000000,FORMAT([M_Total_Paid_GUVs_CY_CM]/1000, \"###M\"),FORMAT([M_Total_Paid_GUVs_CY_CM]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_CY_PM_FRT",
            "expression": " IF([M_Total_Paid_GUVs_CY_PM] < 1000 ,[M_Total_Paid_GUVs_CY_PM],IF( [M_Total_Paid_GUVs_CY_PM] < 1000000,FORMAT([M_Total_Paid_GUVs_CY_PM]/1000, \"###M\"),FORMAT([M_Total_Paid_GUVs_CY_PM]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Paid_GUVs_PY_CM_FRT",
            "expression": " IF([M_Total_Paid_GUVs_PY_CM] < 1000 ,[M_Total_Paid_GUVs_PY_CM],IF( [M_Total_Paid_GUVs_PY_CM] < 1000000,FORMAT([M_Total_Paid_GUVs_PY_CM]/1000, \"###M\"),FORMAT([M_Total_Paid_GUVs_PY_CM]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_GUVs_FYTD_FRT",
            "expression": " IF([M_Total_GUVs_FYTD] < 1000 ,[M_Total_GUVs_FYTD],IF( [M_Total_GUVs_FYTD] < 1000000,FORMAT([M_Total_GUVs_FYTD]/1000, \"###M\"),FORMAT([M_Total_GUVs_FYTD]/10000000, \"###MM\")))",
            "formatString": "#,0"
          },
          {
            "name": "M_Cha vs PM_FRT (Invoices)",
            "expression": " IF([M_Chg vs PM (Invoices)]>0,FORMAT([M_Chg vs PM (Invoices)]/1000,\"+###M\"),FORMAT([M_Chg vs PM (Invoices)]/1000,\"###M\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PM_FRT (Invoices)",
            "expression": " IF([M_Chg vs PM (Invoices)]>0,FORMAT([M_Chg vs PM (Invoices)]/1000,\"+###M\"),FORMAT([M_Chg vs PM (Invoices)]/1000,\"###M\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs YA_FRT (Vendors)",
            "expression": " IF([M_Chg vs YA (Vendors)]>0,FORMAT([M_Chg vs YA (Vendors)]/1000,\"+###M\"),FORMAT([M_Chg vs YA (Vendors)]/1000,\"###M\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs PM_FRT (GUVs)",
            "expression": " IF([M_Chg vs PM (GUVs)]>0,FORMAT([M_Chg vs PM (GUVs)]/1000,\"+###M\"),FORMAT([M_Chg vs PM (GUVs)]/1000,\"###M\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_Chg vs YA_FRT (GUVs)",
            "expression": " IF([M_Chg vs YA (GUVs)]>0,FORMAT([M_Chg vs YA (GUVs)]/1000,\"+###M\"),FORMAT([M_Chg vs YA (GUVs)]/1000,\"###M\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_Spend",
            "expression": "CALCULATE(SUM(invoice_star[invoice_usd_amt]))",
            "formatString": "0.00"
          },
          {
            "name": "M_Total_Invoice_Spend_MTD",
            "expression": "TOTALMTD([M_Total_Invoice_Spend], DATESMTD(invoice_star[doc_post_date]))",
            "formatString": "0.00"
          },
          {
            "name": "M_Total_Invoice_Spend_CY_CM",
            "expression": "CALCULATE([M_Total_Invoice_Spend],FILTER(doc_post_date_dim,(doc_post_date_dim[calendar_year]=doc_post_date_dim[closed_year]) && (doc_post_date_dim[calendar_month]=doc_post_date_dim[closed_month])))"
          },
          {
            "name": "M_Total_Invoice_Spend_CY_PM",
            "expression": "CALCULATE([M_Total_Invoice_Spend],FILTER(doc_post_date_dim,(doc_post_date_dim[calendar_year]=doc_post_date_dim[closed_year]) && (doc_post_date_dim[calendar_month]=doc_post_date_dim[closed_month]-1)))"
          },
          {
            "name": "M_Total_Invoice_Spend_PY_CM",
            "expression": "CALCULATE([M_Total_Invoice_Spend],FILTER(doc_post_date_dim,(doc_post_date_dim[calendar_year]=doc_post_date_dim[closed_year]-1) && (doc_post_date_dim[calendar_month]=doc_post_date_dim[closed_month])))"
          },
          {
            "name": "M_Total_Invoice_Spend_FYTD",
            "expression": "CALCULATE([M_Total_Invoice_Spend], doc_post_date_dim[is_current_fiscal_year] = \"Yes\")"
          },
          {
            "name": "M_Chg vs PM (Invoice Spend)",
            "expression": "[M_Total_Invoice_Spend_CY_CM] - [M_Total_Invoice_Spend_CY_PM]"
          },
          {
            "name": "M_Chg vs YA (Invoice Spend)",
            "expression": "[M_Total_Invoice_Spend_CY_CM] - [M_Total_Invoice_Spend_PY_CM]"
          },
          {
            "name": "M_Total_Invoice_Spend_FYTD_FRT",
            "expression": "IF([M_Total_Invoice_Spend_FYTD] < 1000 ,[M_Total_Invoice_Spend_FYTD],IF( [M_Total_Invoice_Spend_FYTD] < 1000000,FORMAT([M_Total_Invoice_Spend_FYTD]/1000, \"###M\"),FORMAT([M_Total_Invoice_Spend_FYTD]/10000000, \"###MM\")))"
          },
          {
            "name": "M_Chg vs PM_FRT (Invoice Spend)",
            "expression": "IF([M_Chg vs PM (Invoice Spend)] < 1000 ,[M_Chg vs PM (Invoice Spend)],IF( [M_Chg vs PM (Invoice Spend)] < 1000000,FORMAT([M_Chg vs PM (Invoice Spend)]/1000, \"###M\"),FORMAT([M_Chg vs PM (Invoice Spend)]/10000000, \"###MM\")))"
          },
          {
            "name": "M_Chg vs YA_FRT (Invoice Spend)",
            "expression": "IF([M_Chg vs YA (Invoice Spend)] < 1000 ,[M_Chg vs YA (Invoice Spend)],IF( [M_Chg vs YA (Invoice Spend)] < 1000000,FORMAT([M_Chg vs YA (Invoice Spend)]/1000, \"###M\"),FORMAT([M_Chg vs YA (Invoice Spend)]/10000000, \"###MM\")))"
          },
          {
            "name": "M_Total_Invoice_PY_CM_FRT",
            "expression": "IF([M_Total_Invoice_PY_CM] < 1000 ,[M_Total_Invoice_PY_CM],IF( [M_Total_Invoice_PY_CM] < 1000000,FORMAT([M_Total_Invoice_PY_CM]/1000, \"###M\"),FORMAT([M_Total_Invoice_PY_CM]/10000000, \"###MM\")))"
          },
          {
            "name": "M_Chg vs YM_FRT (Invoices)",
            "expression": "IF([M_Chg vs YA (Invoices)]>0,FORMAT([M_Chg vs YA (Invoices)]/1000,\"+###M\"),FORMAT([M_Chg vs YA (Invoices)]/1000,\"###M\"))"
          },
          {
            "name": "M_Cha vs PM_FRT (Vendors)",
            "expression": " IF([M_Chg vs PM (Vendors)]>0,FORMAT([M_Chg vs PM (Vendors)]/1000,\"+###M\"),FORMAT([M_Chg vs PM (Vendors)]/1000,\"###M\"))"
          },
          {
            "name": "M_Total_GUV's",
            "expression": "DISTINCTCOUNT ( vendor_guv_dim[pg_guv_id])",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Invoice_Spend_CFY",
            "expression": [
              "CALCULATE (",
              "    [M_Total_Invoice_Spend],",
              "    FILTER (",
              "        invoice_star,",
              "        invoice_star[fiscal_year_num]",
              "            = MAX ( invoice_star[fiscal_year_num] ) - 1))"
            ]
          },
          {
            "name": "M_Total_Invoice_Spend_PFY",
            "expression": [
              "CALCULATE (",
              "    [M_Total_Invoice_Spend],",
              "    FILTER (",
              "        invoice_star,",
              "        invoice_star[fiscal_year_num]",
              "            = MAX ( invoice_star[fiscal_year_num] ) - 2))"
            ]
          },
          {
            "name": "M_Chg vs PFY (Invoice Spend)",
            "expression": "[M_Total_Invoice_Spend_CFY]-[M_Total_Invoice_Spend_PFY]"
          },
          {
            "name": "M_PAPER_#",
            "expression": [
              "CALCULATE([M_Total Invoice #],  invoice_star[invoice_channel_group] =\"PAPER\")",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_PDF_#",
            "expression": "CALCULATE([M_Total Invoice #],  invoice_star[invoice_channel_group] =\"PDF\")",
            "formatString": "#,0"
          },
          {
            "name": "M_PAPER %",
            "expression": "[M_PAPER_#]/[M_Total Invoice #]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_PDF%",
            "expression": "[M_PDF_#]/[M_Total Invoice #]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Electronic_USD",
            "expression": [
              " CALCULATE ( [M_Total_Spend USD] , invoice_star[invoice_channel_group] = \"ELECTRONIC\" )",
              "",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_PDF_USD",
            "expression": [
              " calculate([M_Total_Spend USD],invoice_star[invoice_channel_group]=\"PDF\")",
              "",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_Paper_USD",
            "expression": [
              " calculate([M_Total_Spend USD],invoice_star[invoice_channel_group]=\"PAPER\")",
              "",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_Electronic_USD_%",
            "expression": [
              " [M_Electronic_USD]/[M_Total_Spend USD]",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paper_USD_%",
            "expression": [
              "[M_Paper_USD]/[M_Total_Spend USD]",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_PDF_USD_%",
            "expression": [
              " [M_PDF_USD]/[M_Total_Spend USD]",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_invoices_On_Time",
            "expression": " calculate([M_Total Invoice #],FILTER(invoice_star,[pot_status]=\"Paid On Time\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_Paid_Early",
            "expression": " calculate([M_Total Invoice #],FILTER(invoice_star,[pot_status]=\"Paid Early\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_Paid_Late",
            "expression": " calculate([M_Total Invoice #],FILTER(invoice_star,[pot_status]=\"Paid Late\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_POT%",
            "expression": " 1- [M_invoices_Paid_Late]/([M_invoices_On_Time]+[M_invoices_Paid_Early]+[M_invoices_Paid_Late])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_early_%",
            "expression": " [M_invoices_Paid_Early]/([M_invoices_On_Time]+[M_invoices_Paid_Early]+[M_invoices_Paid_Late])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_late_%",
            "expression": " [M_invoices_Paid_Late]/([M_invoices_On_Time]+[M_invoices_Paid_Early]+[M_invoices_Paid_Late])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_USD_On_Time",
            "expression": " calculate([M_Total_Spend USD],FILTER(invoice_star,[pot_status]=\"Paid On Time\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_Paid_Early",
            "expression": " calculate([M_Total_Spend USD],FILTER(invoice_star,[pot_status]=\"Paid Early\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_Paid_Late",
            "expression": " calculate([M_Total_Spend USD],FILTER(invoice_star,[pot_status]=\"Paid Late\"))",
            "formatString": "#,0"
          },
          {
            "name": "M_POT_USD%",
            "expression": " 1- [M_USD_Paid_Late]/([M_USD_On_Time]+[M_USD_Paid_Early]+[M_USD_Paid_Late])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_early_USD%",
            "expression": " [M_USD_Paid_Early]/([M_USD_On_Time]+[M_USD_Paid_Early]+[M_USD_Paid_Late])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_late_USD%",
            "expression": " [M_USD_Paid_Late]/([M_USD_On_Time]+[M_USD_Paid_Early]+[M_USD_Paid_Late])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_POT%_CY_CM",
            "expression": [
              " CALCULATE([M_POT%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year]) ",
              "&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_POT%_CY_PM",
            "expression": [
              " CALCULATE([M_POT%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year]) ",
              "&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))"
            ],
            "formatString": "#,0.0%;-#,0.0%;#,0.0%"
          },
          {
            "name": "M_POT%_Diff_CM_vs_PM",
            "expression": " [M_POT%_CY_CM]-[M_POT%_CY_PM]",
            "formatString": "#,0.0%;-#,0.0%;#,0.0%"
          },
          {
            "name": "M_invoices_On_Time_CY_CM",
            "expression": " CALCULATE([M_invoices_On_Time],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_On_Time_CY_PM",
            "expression": "CALCULATE([M_invoices_On_Time],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_On_Time_Diff_CM_vs_PM",
            "expression": " [M_invoices_On_Time_CY_CM]-[M_invoices_On_Time_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_Paid_Early_CY_CM",
            "expression": " CALCULATE([M_invoices_Paid_Early],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_Paid_Early_CY_PM",
            "expression": "CALCULATE([M_invoices_Paid_Early],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_Paid_Early_Diff_CM_vs_PM",
            "expression": " [M_invoices_Paid_Early_CY_CM]-[M_invoices_Paid_Early_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_Paid_Late_CY_CM",
            "expression": " CALCULATE([M_invoices_Paid_Late],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_Paid_Late_CY_PM",
            "expression": "CALCULATE([M_invoices_Paid_Late],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "#,0"
          },
          {
            "name": "M_invoices_Paid_Late_Diff_CM_vs_PM",
            "expression": " [M_invoices_Paid_Late_CY_CM]-[M_invoices_Paid_Late_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_Paid_early_%_CY_CM",
            "expression": "CALCULATE([M_Paid_early_%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_early_%_CY_PM",
            "expression": "CALCULATE([M_Paid_early_%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_early_%_Diff_CM_vs_PM",
            "expression": " [M_Paid_early_%_CY_CM]-[M_Paid_early_%_CY_PM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_late_%_CY_CM",
            "expression": "CALCULATE([M_Paid_late_%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_late_%_CY_PM",
            "expression": "CALCULATE([M_Paid_late_%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_late_%_Diff_CM_vs_PM",
            "expression": " [M_Paid_late_%_CY_CM]-[M_Paid_late_%_CY_PM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_USD_On_Time_CY_CM",
            "expression": "CALCULATE([M_USD_On_Time],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_On_Time_CY_PM",
            "expression": "CALCULATE([M_USD_On_Time],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_On_Time_Diff_CM_vs_PM",
            "expression": "[M_USD_On_Time_CY_CM]-[M_USD_On_Time_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_Paid_Early_CY_CM",
            "expression": "CALCULATE([M_USD_Paid_Early],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_Paid_Early_CY_PM",
            "expression": "CALCULATE([M_USD_Paid_Early],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_Paid_Early_Diff_CM_vs_PM",
            "expression": " [M_USD_Paid_Early_CY_CM]-[M_USD_Paid_Early_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_Paid_Late_CY_CM",
            "expression": " CALCULATE([M_USD_Paid_Late],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_Paid_Late_CY_PM",
            "expression": "CALCULATE([M_USD_Paid_Late],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "#,0"
          },
          {
            "name": "M_USD_Paid_Late_Diff_CM_vs_PM",
            "expression": " [M_USD_Paid_Late_CY_CM]-[M_USD_Paid_Late_CY_PM]",
            "formatString": "#,0"
          },
          {
            "name": "M_POT_USD%_CY_CM",
            "expression": " CALCULATE([M_POT_USD%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_POT_USD%_CY_PM",
            "expression": " CALCULATE([M_POT_USD%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_POT_USD%_Diff_CM_PM",
            "expression": " [M_POT_USD%_CY_CM]-[M_POT_USD%_CY_PM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_early_USD%_CY_CM",
            "expression": " CALCULATE([M_Paid_early_USD%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_early_USD%_CY_PM",
            "expression": " CALCULATE([M_Paid_early_USD%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_early_USD%_Diff_CM_PM",
            "expression": "[M_Paid_early_USD%_CY_CM]-[M_Paid_early_USD%_CY_PM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_late_USD%_CY_CM",
            "expression": " CALCULATE([M_Paid_late_USD%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_late_USD%_CY_PM",
            "expression": " CALCULATE([M_Paid_late_USD%],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year])&& (clear_date_dim[calendar_month]=clear_date_dim[closed_month]-1)))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Paid_late_USD%_Diff_CM_PM",
            "expression": " [M_Paid_late_USD%_CY_CM]-[M_Paid_late_USD%_CY_PM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_Invoice_#",
            "expression": [
              "",
              "SUMx( invoice_star, invoice_star[invoice_fraction] )"
            ]
          },
          {
            "name": "M_rolling_3m_CY_CM_#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Total_Spend_$",
            "expression": [
              "",
              "SUM ( invoice_star[invoice_usd_amt] )",
              "",
              ""
            ]
          },
          {
            "name": "M_rolling_3m_CY_MTD_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] + 1 )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_rolling_3m_CY_CM_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_rolling_3m_CY_PM_#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month]-1 )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_rolling_3m_CY_PM_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month]-1 )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_rolling_3m_#",
            "expression": [
              "",
              "VAR movingpaid =",
              "    CALCULATE (",
              "        [M_Total_Invoice_#],",
              "        DATESINPERIOD (",
              "            clear_date_dim[DateKey],",
              "            LASTDATE ( PREVIOUSMONTH ( clear_date_dim[DateKey] ) ),",
              "            -3,",
              "            MONTH",
              "        )",
              "    )",
              "VAR movingDenominator =",
              "    CALCULATE (",
              "        CALCULATE (",
              "            COUNTROWS ( VALUES ( clear_date_dim[cal_month_year] ) ),",
              "            invoice_star",
              "        ),",
              "        DATESINPERIOD (",
              "            clear_date_dim[DateKey],",
              "            LASTDATE ( PREVIOUSMONTH ( clear_date_dim[DateKey] ) ),",
              "            -3,",
              "            MONTH",
              "        )",
              "    )",
              "RETURN",
              "    DIVIDE ( movingpaid, movingDenominator )"
            ]
          },
          {
            "name": "M_rolling_3m_$",
            "expression": [
              "",
              "VAR movingpaid =",
              "    CALCULATE (",
              "        [M_Total_Spend_$],",
              "        DATESINPERIOD (",
              "            clear_date_dim[DateKey],",
              "            LASTDATE ( PREVIOUSMONTH ( clear_date_dim[DateKey] ) ),",
              "            -3,",
              "            MONTH",
              "        )",
              "    )",
              "VAR movingDenominator =",
              "    CALCULATE (",
              "        CALCULATE (",
              "            COUNTROWS ( VALUES ( clear_date_dim[cal_month_year] ) ),",
              "            invoice_star",
              "        ),",
              "        DATESINPERIOD (",
              "            clear_date_dim[DateKey],",
              "            LASTDATE ( PREVIOUSMONTH ( clear_date_dim[DateKey] ) ),",
              "            -3,",
              "            MONTH",
              "        )",
              "    )",
              "RETURN",
              "    DIVIDE ( movingpaid, movingDenominator )"
            ]
          },
          {
            "name": "M_rolling_3m_PY_MDT_#",
            "expression": [
              " ",
              "CALCULATE([M_rolling_3m_#],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year]-1) && (clear_date_dim[calendar_month]=clear_date_dim[closed_month]+1)))"
            ]
          },
          {
            "name": "M_rolling_3m_PY_MDT_$",
            "expression": [
              " ",
              "CALCULATE([M_rolling_3m_$],FILTER(clear_date_dim,(clear_date_dim[calendar_year]=clear_date_dim[closed_year]-1) && (clear_date_dim[calendar_month]=clear_date_dim[closed_month]+1)))"
            ]
          },
          {
            "name": "M_rolling_3m_PY_CM_#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] - 1 )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_rolling_3m_PY_CM_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] - 1 )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_rolling_3m_PY_PM_#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] - 1 )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month]-1 )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_rolling_3m_PY_PM_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] - 1 )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month]-1 )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_rolling_3m_CY_MTD_#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_rolling_3m_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] + 1 )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_FI_CY_CM_#",
            "expression": [
              " ",
              "CALCULATE (",
              "    [M_FI_Total_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "           clear_date_dim[calendar_year]  ",
              "              = IF (",
              "                    ( clear_date_dim[closed_month] = 12 ),",
              "                     clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "            && (clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              "))"
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_CY_CM_%",
            "expression": [
              " ",
              "DIVIDE([M_FI_CY_CM_#],",
              "CALCULATE (",
              "    [M_Total Invoice #],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 12 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "            && (clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")),0)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_CY_CM_Spend_USD_#",
            "expression": [
              " ",
              "CALCULATE (",
              "    [M_FI_Total_Spend_USD_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 12 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              "))"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"1\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_FI_CY_CM_Spend_USD_%",
            "expression": [
              " ",
              "CALCULATE ([M_FI_Total_Spend_USD_%],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 12 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              "))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_CY_PM #",
            "expression": [
              " CALCULATE (",
              "    [M_FI_Total_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_CY_PM_%",
            "expression": [
              " ",
              "DIVIDE([M_FI_CY_PM #],",
              "CALCULATE (",
              "    [M_Total Invoice #],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              "),0)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_CY_PM_Spend_USD_#",
            "expression": [
              " CALCULATE (",
              "    [M_FI_Total_Spend_USD_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_FI_CY_PM_Spend_USD_%",
            "expression": [
              " ",
              "DIVIDE([M_FI_CY_PM_Spend_USD_#],",
              "CALCULATE (",
              "    [M_Total_Invoice_Spend],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              "),0)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_Diff_CY_CM_Vs_CY_PM_#",
            "expression": " invoice_star[M_FI_CY_CM_#]-invoice_star[M_FI_CY_PM #]",
            "formatString": "0"
          },
          {
            "name": "M_FI_Diff_CY_CM_Vs_CY_PM_%",
            "expression": " invoice_star[M_FI_CY_CM_%] - invoice_star[M_FI_CY_PM_%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_Diff_CY_CM_Vs_PY_CM_#",
            "expression": " invoice_star[M_FI_CY_CM_#]-invoice_star[M_FI_PY_CM_#]",
            "formatString": "0"
          },
          {
            "name": "M_FI_Diff_CY_CM_Vs_PY_CM_%",
            "expression": " invoice_star[M_FI_CY_CM_%] - invoice_star[M_FI_PY_CM_%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_FYTD_#",
            "expression": " CALCULATE([M_FI_Total_#], clear_date_dim[is_current_fiscal_year] = \"Yes\")",
            "formatString": "0"
          },
          {
            "name": "M_FI_FYTD_%",
            "expression": [
              " ",
              "DIVIDE([M_FI_FYTD_#],",
              "CALCULATE([M_Total Invoice #], clear_date_dim[is_current_fiscal_year] = \"Yes\"))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_non_comp_CY_CM_#",
            "expression": [
              " ",
              "CALCULATE (",
              "    [M_FI_Total_Non_compliant_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "           clear_date_dim[calendar_year]  ",
              "              = IF (",
              "                    ( clear_date_dim[closed_month] = 12 ),",
              "                     clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "            && (clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              "))"
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_non_comp_CY_CM_%",
            "expression": [
              " ",
              "DIVIDE([M_FI_non_comp_CY_CM_#],",
              "CALCULATE (",
              "    [M_FI_Total_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 12 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "            && (clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")),0)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_non_comp_CY_CM_Spend_USD_#",
            "expression": [
              " ",
              "CALCULATE (",
              "    [M_FI_Total_Non_comp_Spend_USD_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "           clear_date_dim[calendar_year]  ",
              "              = IF (",
              "                    ( clear_date_dim[closed_month] = 12 ),",
              "                     clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "            && (clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              "))"
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_non_comp_CY_PM_#",
            "expression": [
              " CALCULATE (",
              "    [M_FI_Total_Non_compliant_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_non_comp_Diff_CY_CM_Vs_CY_PM_#",
            "expression": " invoice_star[M_FI_non_comp_CY_CM_#]-invoice_star[M_FI_non_comp_CY_PM_#]",
            "formatString": "0"
          },
          {
            "name": "M_FI_non_comp_PY_CM_#",
            "expression": [
              " ",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        CALCULATE (",
              "              [M_FI_Total_Non_compliant_#] ,",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[calendar_year]= MAX ( clear_date_dim[closed_year] ) - 1",
              "                    && clear_date_dim[calendar_month] = MAX (clear_date_dim[closed_month] )",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_PreviousFY_#",
            "expression": [
              " ",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        CALCULATE (",
              "             [M_FI_Total_#] ,",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[fiscal_year_int]= MAX ( clear_date_dim[closed_year] ) )",
              "            )",
              "        )",
              "    "
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_non_comp_Diff_CY_CM_Vs_PY_CM_#",
            "expression": " invoice_star[M_FI_non_comp_CY_CM_#]-invoice_star[M_FI_non_comp_PY_CM_#]",
            "formatString": "0"
          },
          {
            "name": "M_FI_PreviousFY-2_#",
            "expression": [
              " ",
              "",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        CALCULATE (",
              "             [M_FI_Total_#] ,",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[fiscal_year_int]= MAX ( clear_date_dim[closed_year] ) - 1)",
              "            )",
              "        )",
              "    "
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_PY_CM_#",
            "expression": [
              " ",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        CALCULATE (",
              "              [M_FI_Total_#] ,",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[calendar_year]= MAX ( clear_date_dim[closed_year] ) - 1",
              "                    && clear_date_dim[calendar_month] = MAX (clear_date_dim[closed_month] )",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_PY_CM_%",
            "expression": [
              " ",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        DIVIDE([M_FI_PY_CM_#],",
              "        CALCULATE (",
              "              [M_Total Invoice #],",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[calendar_year]= MAX ( clear_date_dim[closed_year] ) - 1",
              "                    && clear_date_dim[calendar_month] = MAX (clear_date_dim[closed_month] )",
              "            )",
              "        ),0)",
              "    )"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_Total_#",
            "expression": " CALCULATE([M_Total Invoice #],invoice_star[fi_mm]=\"FI\")",
            "formatString": "0"
          },
          {
            "name": "M_FI_Total_%",
            "expression": " DIVIDE(invoice_star[M_FI_Total_#],invoice_star[M_Total Invoice #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_Total_Comp_#",
            "expression": " CALCULATE([M_FI_Total_#],filter(invoice_star,invoice_star[fi_compliant]=\"compliant\"))",
            "formatString": "0"
          },
          {
            "name": "M_FI_Total_Comp_%",
            "expression": " DIVIDE(invoice_star[M_FI_Total_Comp_#],invoice_star[M_Total Invoice #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_Total_Comp_Spend_USD_#",
            "expression": " CALCULATE([M_FI_Total_Spend_USD_#],filter(invoice_star,invoice_star[fi_compliant]=\"Compliant\"))",
            "formatString": "0"
          },
          {
            "name": "M_FI_Total_Comp_Spend_USD_%",
            "expression": " DIVIDE([M_FI_Total_Comp_Spend_USD_#],[M_FI_Total_Spend_USD_#])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_Total_Non_comp_FYTD_Spend_USD_#",
            "expression": " CALCULATE([M_FI_Total_Non_comp_Spend_USD_#], clear_date_dim[is_current_fiscal_year] = \"Yes\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_FI_Total_Non_comp_Spend_USD_#",
            "expression": " CALCULATE([M_FI_Total_Spend_USD_#],filter(invoice_star,invoice_star[fi_compliant]=\"Non Compliant\"))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_FI_Total_Non_comp_Spend_USD_%",
            "expression": " DIVIDE([M_FI_Total_Non_comp_Spend_USD_#],[M_FI_Total_Spend_USD_#])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_Total_Non_compliant_#",
            "expression": " CALCULATE([M_FI_Total_#],filter(invoice_star,invoice_star[fi_compliant]=\"Non Compliant\"))",
            "formatString": "0"
          },
          {
            "name": "M_FI_Total_Non_compliant_FYTD_#",
            "expression": " CALCULATE([M_FI_Total_Non_compliant_#], clear_date_dim[is_current_fiscal_year] = \"Yes\")",
            "formatString": "0"
          },
          {
            "name": "M_FI_Total_Non-Compliant_%",
            "expression": " DIVIDE(invoice_star[M_FI_Total_Non_compliant_#],invoice_star[M_Total Invoice #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_Total_Spend_USD_#",
            "expression": " CALCULATE([M_Total_Spend USD],FILTER(invoice_star,[fi_mm]=\"FI\"))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "M_FI_Total_Spend_USD_%",
            "expression": " DIVIDE([M_FI_Total_Spend_USD_#],[M_Total_Spend USD])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_MTD_#",
            "expression": [
              " CALCULATE (",
              "    [M_FI_Total_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "           YEAR ( clear_date_dim[cal_date_mmddyyyy] ) = YEAR ( TODAY () )",
              "            && MONTH ( clear_date_dim[cal_date_mmddyyyy] ) = MONTH ( TODAY () )",
              "    )",
              "))"
            ],
            "formatString": "0"
          },
          {
            "name": "M_FI_MTD_%",
            "expression": [
              " DIVIDE(invoice_star[M_FI_MTD_#], CALCULATE (",
              "    invoice_star[M_Total Invoice #],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "           YEAR ( clear_date_dim[cal_date_mmddyyyy] ) = YEAR ( TODAY () )",
              "            && MONTH ( clear_date_dim[cal_date_mmddyyyy] ) = MONTH ( TODAY () )",
              "    )",
              ")),0)"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_FI_MTD_non_comp_#",
            "expression": [
              " CALCULATE (",
              "    [M_FI_Total_Non_compliant_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "       (",
              "           YEAR ( clear_date_dim[cal_date_mmddyyyy] ) = YEAR ( TODAY () )",
              "            && MONTH ( clear_date_dim[cal_date_mmddyyyy] ) = MONTH ( TODAY () )",
              "    )",
              "))"
            ],
            "formatString": "0"
          }
        ]
      },
      {
        "name": "clear_date_dim",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "DateKey",
            "dataType": "dateTime",
            "isKey": true,
            "sourceColumn": "DateKey"
          },
          {
            "name": "date_int",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "date_int"
          },
          {
            "name": "cal_date_mmddyyyy",
            "dataType": "string",
            "sourceColumn": "cal_date_mmddyyyy"
          },
          {
            "name": "cal_date_mmddyy",
            "dataType": "string",
            "sourceColumn": "cal_date_mmddyy"
          },
          {
            "name": "cal_date_ddmmyy",
            "dataType": "string",
            "sourceColumn": "cal_date_ddmmyy"
          },
          {
            "name": "cal_date_mmyyyy",
            "dataType": "string",
            "sourceColumn": "cal_date_mmyyyy"
          },
          {
            "name": "cal_date_short_text",
            "dataType": "string",
            "sourceColumn": "cal_date_short_text"
          },
          {
            "name": "cal_date_long_text",
            "dataType": "string",
            "sourceColumn": "cal_date_long_text"
          },
          {
            "name": "cal_full_date_text_long",
            "dataType": "string",
            "sourceColumn": "cal_full_date_text_long"
          },
          {
            "name": "cal_day_num_of_month",
            "dataType": "int64",
            "sourceColumn": "cal_day_num_of_month"
          },
          {
            "name": "cal_day_name_short",
            "dataType": "string",
            "sourceColumn": "cal_day_name_short"
          },
          {
            "name": "cal_day_name",
            "dataType": "string",
            "sourceColumn": "cal_day_name"
          },
          {
            "name": "cal_year_name",
            "dataType": "string",
            "sourceColumn": "cal_year_name"
          },
          {
            "name": "cal_month_year",
            "dataType": "string",
            "sourceColumn": "cal_month_year",
            "sortByColumn": "sort_calyear_month_int"
          },
          {
            "name": "cal_first_day_of_month",
            "dataType": "dateTime",
            "sourceColumn": "cal_first_day_of_month"
          },
          {
            "name": "cal_last_day_of_month",
            "dataType": "dateTime",
            "sourceColumn": "cal_last_day_of_month"
          },
          {
            "name": "cal_first_day_of_quarter",
            "dataType": "dateTime",
            "sourceColumn": "cal_first_day_of_quarter"
          },
          {
            "name": "cal_last_day_of_quarter",
            "dataType": "dateTime",
            "sourceColumn": "cal_last_day_of_quarter"
          },
          {
            "name": "cal_first_day_of_year",
            "dataType": "dateTime",
            "sourceColumn": "cal_first_day_of_year"
          },
          {
            "name": "cal_last_day_of_year",
            "dataType": "dateTime",
            "sourceColumn": "cal_last_day_of_year"
          },
          {
            "name": "cal_week_num_in_month",
            "dataType": "string",
            "sourceColumn": "cal_week_num_in_month"
          },
          {
            "name": "cal_week_num_in_year",
            "dataType": "string",
            "sourceColumn": "cal_week_num_in_year"
          },
          {
            "name": "cal_day_num_in_year",
            "dataType": "string",
            "sourceColumn": "cal_day_num_in_year"
          },
          {
            "name": "cal_month_name",
            "dataType": "string",
            "sourceColumn": "cal_month_name",
            "sortByColumn": "calendar_month"
          },
          {
            "name": "cal_month_of_quarter",
            "dataType": "string",
            "sourceColumn": "cal_month_of_quarter"
          },
          {
            "name": "cal_quarter_name",
            "dataType": "string",
            "sourceColumn": "cal_quarter_name"
          },
          {
            "name": "fiscal_year",
            "dataType": "string",
            "sourceColumn": "fiscal_year"
          },
          {
            "name": "fiscal_period",
            "dataType": "string",
            "sourceColumn": "fiscal_period"
          },
          {
            "name": "fiscal_period_year",
            "dataType": "string",
            "sourceColumn": "fiscal_period_year"
          },
          {
            "name": "fiscal_year_text",
            "dataType": "string",
            "sourceColumn": "fiscal_year_text"
          },
          {
            "name": "fiscal_year_short_text",
            "dataType": "string",
            "sourceColumn": "fiscal_year_short_text"
          },
          {
            "name": "fiscal_quarter",
            "dataType": "int64",
            "sourceColumn": "fiscal_quarter"
          },
          {
            "name": "fiscal_quarter_name",
            "dataType": "string",
            "sourceColumn": "fiscal_quarter_name"
          },
          {
            "name": "fiscal_quarter_year_text",
            "dataType": "string",
            "sourceColumn": "fiscal_quarter_year_text"
          },
          {
            "name": "fiscal_day_num_of_period",
            "dataType": "int64",
            "sourceColumn": "fiscal_day_num_of_period"
          },
          {
            "name": "fiscal_day_num_of_quarter",
            "dataType": "int64",
            "sourceColumn": "fiscal_day_num_of_quarter"
          },
          {
            "name": "fiscal_day_num_in_year",
            "dataType": "int64",
            "sourceColumn": "fiscal_day_num_in_year"
          },
          {
            "name": "fiscal_first_day_of_year",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_first_day_of_year"
          },
          {
            "name": "fiscal_last_day_of_year",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_last_day_of_year"
          },
          {
            "name": "fiscal_first_day_of_period",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_first_day_of_period"
          },
          {
            "name": "fiscal_last_day_of_period",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_last_day_of_period"
          },
          {
            "name": "fiscal_first_day_of_quarter",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_first_day_of_quarter"
          },
          {
            "name": "fiscal_last_day_of_quarter",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_last_day_of_quarter"
          },
          {
            "name": "todays_date",
            "dataType": "string",
            "sourceColumn": "todays_date"
          },
          {
            "name": "last_closed_month",
            "dataType": "string",
            "sourceColumn": "last_closed_month"
          },
          {
            "name": "current_fiscal_year",
            "dataType": "string",
            "sourceColumn": "current_fiscal_year"
          },
          {
            "name": "is_current_fiscal_year",
            "dataType": "string",
            "sourceColumn": "is_current_fiscal_year"
          },
          {
            "name": "calendar_month",
            "dataType": "int64",
            "sourceColumn": "calendar_month"
          },
          {
            "name": "calendar_year",
            "dataType": "int64",
            "sourceColumn": "calendar_year"
          },
          {
            "name": "fiscal_year_int",
            "dataType": "int64",
            "sourceColumn": "fiscal_year_int"
          },
          {
            "name": "is_current_calendar_year",
            "dataType": "string",
            "sourceColumn": "is_current_calendar_year"
          },
          {
            "name": "closed_month",
            "dataType": "int64",
            "sourceColumn": "closed_month"
          },
          {
            "name": "closed_year",
            "dataType": "int64",
            "sourceColumn": "closed_year"
          },
          {
            "name": "sort_calyear_month_int",
            "dataType": "int64",
            "sourceColumn": "sort_calyear_month_int"
          },
          {
            "name": "working_day",
            "dataType": "int64",
            "sourceColumn": "working_day"
          },
          {
            "name": "fy_type",
            "dataType": "string",
            "sourceColumn": "fy_type"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_date_dim = Source{[Schema=\"baseview\",Item=\"vw_date_dim\"]}[Data]",
                "in",
                "    baseview_vw_date_dim"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "clear_date_hierarchy",
            "levels": [
              {
                "name": "fiscal_year",
                "ordinal": 0,
                "column": "fiscal_year"
              },
              {
                "name": "fiscal_quarter_name",
                "ordinal": 1,
                "column": "fiscal_quarter_name"
              },
              {
                "name": "cal_month_name",
                "ordinal": 2,
                "column": "cal_month_name"
              },
              {
                "name": "DateKey",
                "ordinal": 3,
                "column": "DateKey"
              }
            ]
          }
        ]
      },
      {
        "name": "doc_post_date_dim",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "DateKey",
            "dataType": "dateTime",
            "isKey": true,
            "sourceColumn": "DateKey"
          },
          {
            "name": "date_int",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "date_int"
          },
          {
            "name": "cal_date_mmddyyyy",
            "dataType": "string",
            "sourceColumn": "cal_date_mmddyyyy"
          },
          {
            "name": "cal_date_mmddyy",
            "dataType": "string",
            "sourceColumn": "cal_date_mmddyy"
          },
          {
            "name": "cal_date_ddmmyy",
            "dataType": "string",
            "sourceColumn": "cal_date_ddmmyy"
          },
          {
            "name": "cal_date_mmyyyy",
            "dataType": "string",
            "sourceColumn": "cal_date_mmyyyy"
          },
          {
            "name": "cal_date_short_text",
            "dataType": "string",
            "sourceColumn": "cal_date_short_text"
          },
          {
            "name": "cal_date_long_text",
            "dataType": "string",
            "sourceColumn": "cal_date_long_text"
          },
          {
            "name": "cal_full_date_text_long",
            "dataType": "string",
            "sourceColumn": "cal_full_date_text_long"
          },
          {
            "name": "cal_day_num_of_month",
            "dataType": "int64",
            "sourceColumn": "cal_day_num_of_month"
          },
          {
            "name": "cal_day_name_short",
            "dataType": "string",
            "sourceColumn": "cal_day_name_short"
          },
          {
            "name": "cal_day_name",
            "dataType": "string",
            "sourceColumn": "cal_day_name",
            "sortByColumn": "day_of_week"
          },
          {
            "name": "cal_year_name",
            "dataType": "string",
            "sourceColumn": "cal_year_name"
          },
          {
            "name": "cal_month_year",
            "dataType": "string",
            "sourceColumn": "cal_month_year",
            "sortByColumn": "sort_calyear_month_int"
          },
          {
            "name": "cal_first_day_of_month",
            "dataType": "dateTime",
            "sourceColumn": "cal_first_day_of_month"
          },
          {
            "name": "cal_last_day_of_month",
            "dataType": "dateTime",
            "sourceColumn": "cal_last_day_of_month"
          },
          {
            "name": "cal_first_day_of_quarter",
            "dataType": "dateTime",
            "sourceColumn": "cal_first_day_of_quarter"
          },
          {
            "name": "cal_last_day_of_quarter",
            "dataType": "dateTime",
            "sourceColumn": "cal_last_day_of_quarter"
          },
          {
            "name": "cal_first_day_of_year",
            "dataType": "dateTime",
            "sourceColumn": "cal_first_day_of_year"
          },
          {
            "name": "cal_last_day_of_year",
            "dataType": "dateTime",
            "sourceColumn": "cal_last_day_of_year"
          },
          {
            "name": "cal_week_num_in_month",
            "dataType": "string",
            "sourceColumn": "cal_week_num_in_month"
          },
          {
            "name": "cal_week_num_in_year",
            "dataType": "string",
            "sourceColumn": "cal_week_num_in_year",
            "sortByColumn": "sort_cal_week_num_in_year_int"
          },
          {
            "name": "cal_day_num_in_year",
            "dataType": "string",
            "sourceColumn": "cal_day_num_in_year"
          },
          {
            "name": "cal_month_name",
            "dataType": "string",
            "sourceColumn": "cal_month_name"
          },
          {
            "name": "cal_month_of_quarter",
            "dataType": "string",
            "sourceColumn": "cal_month_of_quarter"
          },
          {
            "name": "cal_quarter_name",
            "dataType": "string",
            "sourceColumn": "cal_quarter_name"
          },
          {
            "name": "fiscal_year",
            "dataType": "string",
            "sourceColumn": "fiscal_year"
          },
          {
            "name": "fiscal_period",
            "dataType": "string",
            "sourceColumn": "fiscal_period"
          },
          {
            "name": "fiscal_period_year",
            "dataType": "string",
            "sourceColumn": "fiscal_period_year"
          },
          {
            "name": "fiscal_year_text",
            "dataType": "string",
            "sourceColumn": "fiscal_year_text"
          },
          {
            "name": "fiscal_year_short_text",
            "dataType": "string",
            "sourceColumn": "fiscal_year_short_text"
          },
          {
            "name": "fiscal_quarter",
            "dataType": "int64",
            "sourceColumn": "fiscal_quarter"
          },
          {
            "name": "fiscal_quarter_name",
            "dataType": "string",
            "sourceColumn": "fiscal_quarter_name"
          },
          {
            "name": "fiscal_quarter_year_text",
            "dataType": "string",
            "sourceColumn": "fiscal_quarter_year_text"
          },
          {
            "name": "fiscal_day_num_of_period",
            "dataType": "int64",
            "sourceColumn": "fiscal_day_num_of_period"
          },
          {
            "name": "fiscal_day_num_of_quarter",
            "dataType": "int64",
            "sourceColumn": "fiscal_day_num_of_quarter"
          },
          {
            "name": "fiscal_day_num_in_year",
            "dataType": "int64",
            "sourceColumn": "fiscal_day_num_in_year"
          },
          {
            "name": "fiscal_first_day_of_year",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_first_day_of_year"
          },
          {
            "name": "fiscal_last_day_of_year",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_last_day_of_year"
          },
          {
            "name": "fiscal_first_day_of_period",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_first_day_of_period"
          },
          {
            "name": "fiscal_last_day_of_period",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_last_day_of_period"
          },
          {
            "name": "fiscal_first_day_of_quarter",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_first_day_of_quarter"
          },
          {
            "name": "fiscal_last_day_of_quarter",
            "dataType": "dateTime",
            "sourceColumn": "fiscal_last_day_of_quarter"
          },
          {
            "name": "todays_date",
            "dataType": "string",
            "sourceColumn": "todays_date"
          },
          {
            "name": "last_closed_month",
            "dataType": "string",
            "sourceColumn": "last_closed_month"
          },
          {
            "name": "current_fiscal_year",
            "dataType": "string",
            "sourceColumn": "current_fiscal_year"
          },
          {
            "name": "is_current_fiscal_year",
            "dataType": "string",
            "sourceColumn": "is_current_fiscal_year"
          },
          {
            "name": "calendar_month",
            "dataType": "int64",
            "sourceColumn": "calendar_month"
          },
          {
            "name": "calendar_year",
            "dataType": "int64",
            "sourceColumn": "calendar_year"
          },
          {
            "name": "is_current_calendar_year",
            "dataType": "string",
            "sourceColumn": "is_current_calendar_year"
          },
          {
            "name": "closed_month",
            "dataType": "int64",
            "sourceColumn": "closed_month"
          },
          {
            "name": "closed_year",
            "dataType": "int64",
            "sourceColumn": "closed_year"
          },
          {
            "name": "sort_calyear_month_int",
            "dataType": "int64",
            "sourceColumn": "sort_calyear_month_int"
          },
          {
            "name": "fiscal_year_int",
            "dataType": "int64",
            "sourceColumn": "fiscal_year_int"
          },
          {
            "name": "working_day",
            "dataType": "int64",
            "sourceColumn": "working_day"
          },
          {
            "name": "fy_type",
            "dataType": "string",
            "sourceColumn": "fy_type"
          },
          {
            "name": "sort_cal_week_num_in_year_int",
            "dataType": "int64",
            "sourceColumn": "sort_cal_week_num_in_year_int",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "day_of_week",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "IF(doc_post_date_dim[cal_day_name_short] = \"MON\", 1,",
              "\tIF(doc_post_date_dim[cal_day_name_short] = \"TUE\" , 2,",
              "\tIF(doc_post_date_dim[cal_day_name_short] = \"WED\" , 3,",
              "\tIF(doc_post_date_dim[cal_day_name_short] = \"THU\" , 4,",
              "\tIF(doc_post_date_dim[cal_day_name_short] = \"FRI\" , 5,",
              "\tIF(doc_post_date_dim[cal_day_name_short] = \"SAT\" , 6, 7))))))",
              "\t"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_date_dim = Source{[Schema=\"baseview\",Item=\"vw_date_dim\"]}[Data]",
                "in",
                "    baseview_vw_date_dim"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "doc_post_hierarchy",
            "levels": [
              {
                "name": "fiscal_year",
                "ordinal": 0,
                "column": "fiscal_year"
              },
              {
                "name": "fiscal_quarter_name",
                "ordinal": 1,
                "column": "fiscal_quarter_name"
              },
              {
                "name": "cal_month_name",
                "ordinal": 2,
                "column": "cal_month_name"
              },
              {
                "name": "DateKey",
                "ordinal": 3,
                "column": "DateKey"
              }
            ]
          }
        ]
      },
      {
        "name": "po_star",
        "columns": [
          {
            "name": "source_system_code",
            "dataType": "string",
            "sourceColumn": "source_system_code"
          },
          {
            "name": "purchase_doc_num",
            "dataType": "string",
            "sourceColumn": "purchase_doc_num"
          },
          {
            "name": "purchase_doc_line_num",
            "dataType": "int64",
            "sourceColumn": "purchase_doc_line_num"
          },
          {
            "name": "company_code",
            "dataType": "string",
            "sourceColumn": "company_code"
          },
          {
            "name": "gr_qty",
            "dataType": "double",
            "sourceColumn": "gr_qty"
          },
          {
            "name": "invoice_qty",
            "dataType": "double",
            "sourceColumn": "invoice_qty"
          },
          {
            "name": "po_qty",
            "dataType": "double",
            "sourceColumn": "po_qty"
          },
          {
            "name": "net_price_rate",
            "dataType": "double",
            "sourceColumn": "net_price_rate"
          },
          {
            "name": "price_unit_factor",
            "dataType": "double",
            "sourceColumn": "price_unit_factor"
          },
          {
            "name": "gross_order_amt",
            "dataType": "double",
            "sourceColumn": "gross_order_amt"
          },
          {
            "name": "gross_order_amt_mm",
            "dataType": "double",
            "sourceColumn": "gross_order_amt_mm"
          },
          {
            "name": "material_group_code",
            "dataType": "string",
            "sourceColumn": "material_group_code"
          },
          {
            "name": "cal_year_month",
            "dataType": "string",
            "sourceColumn": "cal_year_month"
          },
          {
            "name": "cal_year_month_disp",
            "dataType": "string",
            "sourceColumn": "cal_year_month_disp"
          },
          {
            "name": "purchase_doc_item_desc",
            "dataType": "string",
            "sourceColumn": "purchase_doc_item_desc"
          },
          {
            "name": "wbs_element_id",
            "dataType": "string",
            "sourceColumn": "wbs_element_id"
          },
          {
            "name": "internal_order_id",
            "dataType": "string",
            "sourceColumn": "internal_order_id"
          },
          {
            "name": "pref_manfctr_id",
            "dataType": "string",
            "sourceColumn": "pref_manfctr_id"
          },
          {
            "name": "manfctr_part_id",
            "dataType": "string",
            "sourceColumn": "manfctr_part_id"
          },
          {
            "name": "pref_manfctr_name",
            "dataType": "string",
            "sourceColumn": "pref_manfctr_name"
          },
          {
            "name": "vendor_master_object_cap_id",
            "dataType": "string",
            "sourceColumn": "vendor_master_object_cap_id"
          },
          {
            "name": "plant_code",
            "dataType": "string",
            "sourceColumn": "plant_code"
          },
          {
            "name": "doc_curr_code",
            "dataType": "string",
            "sourceColumn": "doc_curr_code"
          },
          {
            "name": "fiscal_year_num",
            "dataType": "string",
            "sourceColumn": "fiscal_year_num"
          },
          {
            "name": "order_uom",
            "dataType": "string",
            "sourceColumn": "order_uom"
          },
          {
            "name": "req_track_num",
            "dataType": "string",
            "sourceColumn": "req_track_num"
          },
          {
            "name": "order_acknwlg_num",
            "dataType": "string",
            "sourceColumn": "order_acknwlg_num"
          },
          {
            "name": "purchase_group_code",
            "dataType": "string",
            "sourceColumn": "purchase_group_code"
          },
          {
            "name": "create_by_user_name",
            "dataType": "string",
            "sourceColumn": "create_by_user_name"
          },
          {
            "name": "delete_purchase_code",
            "dataType": "string",
            "sourceColumn": "delete_purchase_code"
          },
          {
            "name": "purchase_vendor_id",
            "dataType": "string",
            "sourceColumn": "purchase_vendor_id"
          },
          {
            "name": "purchase_vendor_company",
            "dataType": "string",
            "sourceColumn": "purchase_vendor_company"
          },
          {
            "name": "purchase_req_num",
            "dataType": "string",
            "sourceColumn": "purchase_req_num"
          },
          {
            "name": "create_date",
            "dataType": "dateTime",
            "sourceColumn": "create_date"
          },
          {
            "name": "acct_assign_categ_code",
            "dataType": "string",
            "sourceColumn": "acct_assign_categ_code"
          },
          {
            "name": "profit_center_code",
            "dataType": "string",
            "sourceColumn": "profit_center_code"
          },
          {
            "name": "purchase_doc_type_code",
            "dataType": "string",
            "sourceColumn": "purchase_doc_type_code"
          },
          {
            "name": "purchase_org_id",
            "dataType": "string",
            "sourceColumn": "purchase_org_id"
          },
          {
            "name": "material_id",
            "dataType": "string",
            "sourceColumn": "material_id"
          },
          {
            "name": "material_id_disp",
            "dataType": "string",
            "sourceColumn": "material_id_disp"
          },
          {
            "name": "gl_account_id",
            "dataType": "string",
            "sourceColumn": "gl_account_id"
          },
          {
            "name": "item_delivery_date",
            "dataType": "dateTime",
            "sourceColumn": "item_delivery_date"
          },
          {
            "name": "cost_center_code",
            "dataType": "string",
            "sourceColumn": "cost_center_code"
          },
          {
            "name": "del_complete_flag",
            "dataType": "boolean",
            "sourceColumn": "del_complete_flag"
          },
          {
            "name": "valid_start_date",
            "dataType": "dateTime",
            "sourceColumn": "valid_start_date"
          },
          {
            "name": "item_categ_code",
            "dataType": "string",
            "sourceColumn": "item_categ_code"
          },
          {
            "name": "payment_term_code",
            "dataType": "string",
            "sourceColumn": "payment_term_code"
          },
          {
            "name": "order_price_uom",
            "dataType": "string",
            "sourceColumn": "order_price_uom"
          },
          {
            "name": "po_coupa_contract_id",
            "dataType": "string",
            "sourceColumn": "po_coupa_contract_id"
          },
          {
            "name": "valid_end_date",
            "dataType": "dateTime",
            "sourceColumn": "valid_end_date"
          },
          {
            "name": "gr_flag",
            "dataType": "boolean",
            "sourceColumn": "gr_flag"
          },
          {
            "name": "gr_nonval_flag",
            "dataType": "boolean",
            "sourceColumn": "gr_nonval_flag"
          },
          {
            "name": "invoice_flag",
            "dataType": "boolean",
            "sourceColumn": "invoice_flag"
          },
          {
            "name": "final_invoice_flag",
            "dataType": "boolean",
            "sourceColumn": "final_invoice_flag"
          },
          {
            "name": "po_usd_amt",
            "dataType": "double",
            "sourceColumn": "po_usd_amt"
          },
          {
            "name": "po_usd_amt_mm",
            "dataType": "double",
            "sourceColumn": "po_usd_amt_mm"
          },
          {
            "name": "spend_pool_lkp_code",
            "dataType": "string",
            "sourceColumn": "spend_pool_lkp_code"
          },
          {
            "name": "channel_name",
            "dataType": "string",
            "sourceColumn": "channel_name"
          },
          {
            "name": "purch_doc_line_key",
            "dataType": "string",
            "sourceColumn": "purch_doc_line_key"
          },
          {
            "name": "po_requisitioner_requester",
            "dataType": "string",
            "sourceColumn": "po_requisitioner_requester"
          },
          {
            "name": "po_sa",
            "dataType": "string",
            "sourceColumn": "po_sa"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_po_star = Source{[Schema=\"baseview\",Item=\"vw_po_star\"]}[Data]",
                "in",
                "    baseview_vw_po_star"
              ]
            }
          }
        ]
      },
      {
        "name": "purchase_org_dim",
        "columns": [
          {
            "name": "purchase_org_id",
            "dataType": "string",
            "sourceColumn": "purchase_org_id"
          },
          {
            "name": "purchase_org_desc",
            "dataType": "string",
            "sourceColumn": "purchase_org_desc"
          },
          {
            "name": "purchase_org_id_and_desc",
            "dataType": "string",
            "sourceColumn": "purchase_org_id_and_desc"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_purchase_org_dim = Source{[Schema=\"baseview\",Item=\"vw_purchase_org_dim\"]}[Data]",
                "in",
                "    baseview_vw_purchase_org_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "vendor_guv_dim",
        "columns": [
          {
            "name": "vendor_id",
            "dataType": "string",
            "sourceColumn": "vendor_id"
          },
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "vendor_name",
            "dataType": "string",
            "sourceColumn": "vendor_name"
          },
          {
            "name": "vendor_id_and_name",
            "dataType": "string",
            "sourceColumn": "vendor_id_and_name"
          },
          {
            "name": "vendor_long_name",
            "dataType": "string",
            "sourceColumn": "vendor_long_name"
          },
          {
            "name": "pg_guv_id",
            "dataType": "string",
            "sourceColumn": "pg_guv_id"
          },
          {
            "name": "pg_guv_name",
            "dataType": "string",
            "sourceColumn": "pg_guv_name"
          },
          {
            "name": "pg_duns_num",
            "dataType": "int64",
            "sourceColumn": "pg_duns_num"
          },
          {
            "name": "name_2_1",
            "dataType": "string",
            "sourceColumn": "name_2_1"
          },
          {
            "name": "name_3_1",
            "dataType": "string",
            "sourceColumn": "name_3_1"
          },
          {
            "name": "name_4",
            "dataType": "string",
            "sourceColumn": "name_4"
          },
          {
            "name": "city_name",
            "dataType": "string",
            "sourceColumn": "city_name"
          },
          {
            "name": "district",
            "dataType": "string",
            "sourceColumn": "district"
          },
          {
            "name": "po_box",
            "dataType": "string",
            "sourceColumn": "po_box"
          },
          {
            "name": "p_o_box_postal_code",
            "dataType": "string",
            "sourceColumn": "p_o_box_postal_code"
          },
          {
            "name": "postal_code",
            "dataType": "string",
            "sourceColumn": "postal_code"
          },
          {
            "name": "region_code",
            "dataType": "string",
            "sourceColumn": "region_code"
          },
          {
            "name": "house_number_and_street",
            "dataType": "string",
            "sourceColumn": "house_number_and_street"
          },
          {
            "name": "search_term_for_matchcode_search_1",
            "dataType": "string",
            "sourceColumn": "search_term_for_matchcode_search_1"
          },
          {
            "name": "authorization_group",
            "dataType": "string",
            "sourceColumn": "authorization_group"
          },
          {
            "name": "vendor_account_group",
            "dataType": "string",
            "sourceColumn": "vendor_account_group"
          },
          {
            "name": "alt_payee_id",
            "dataType": "string",
            "sourceColumn": "alt_payee_id"
          },
          {
            "name": "central_del_flag",
            "dataType": "string",
            "sourceColumn": "central_del_flag"
          },
          {
            "name": "central_post_blok_flag",
            "dataType": "string",
            "sourceColumn": "central_post_blok_flag"
          },
          {
            "name": "central_purch_block_flag",
            "dataType": "string",
            "sourceColumn": "central_purch_block_flag"
          },
          {
            "name": "tax_1_id",
            "dataType": "string",
            "sourceColumn": "tax_1_id"
          },
          {
            "name": "tax_2_id",
            "dataType": "string",
            "sourceColumn": "tax_2_id"
          },
          {
            "name": "first_telephone_number",
            "dataType": "string",
            "sourceColumn": "first_telephone_number"
          },
          {
            "name": "second_telephone_number",
            "dataType": "string",
            "sourceColumn": "second_telephone_number"
          },
          {
            "name": "fax_number",
            "dataType": "string",
            "sourceColumn": "fax_number"
          },
          {
            "name": "vat_reg_num",
            "dataType": "string",
            "sourceColumn": "vat_reg_num"
          },
          {
            "name": "factory_calendar_key",
            "dataType": "string",
            "sourceColumn": "factory_calendar_key"
          },
          {
            "name": "tax_jur_code",
            "dataType": "string",
            "sourceColumn": "tax_jur_code"
          },
          {
            "name": "paymt_block_flag",
            "dataType": "string",
            "sourceColumn": "paymt_block_flag"
          },
          {
            "name": "standard_carrier_access_code",
            "dataType": "string",
            "sourceColumn": "standard_carrier_access_code"
          },
          {
            "name": "tax_type",
            "dataType": "string",
            "sourceColumn": "tax_type"
          },
          {
            "name": "tax_number_type",
            "dataType": "string",
            "sourceColumn": "tax_number_type"
          },
          {
            "name": "tax_3_id",
            "dataType": "string",
            "sourceColumn": "tax_3_id"
          },
          {
            "name": "tax_4_id",
            "dataType": "string",
            "sourceColumn": "tax_4_id"
          },
          {
            "name": "tax_5_id",
            "dataType": "string",
            "sourceColumn": "tax_5_id"
          },
          {
            "name": "pg_guv_id_and_name",
            "dataType": "string",
            "sourceColumn": "pg_guv_id_and_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_vendor_guv_dim = Source{[Schema=\"baseview\",Item=\"vw_vendor_guv_dim\"]}[Data]",
                "in",
                "    baseview_vw_vendor_guv_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "purchase_group_dim",
        "columns": [
          {
            "name": "purchase_group_id",
            "dataType": "string",
            "sourceColumn": "purchase_group_id"
          },
          {
            "name": "purchase_group_desc",
            "dataType": "string",
            "sourceColumn": "purchase_group_desc"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_purchase_group_dim = Source{[Schema=\"baseview\",Item=\"vw_purchase_group_dim\"]}[Data]",
                "in",
                "    baseview_vw_purchase_group_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "bot_agent_pypestream",
        "columns": [
          {
            "name": "case_id",
            "dataType": "string",
            "sourceColumn": "case_id"
          },
          {
            "name": "agent_id",
            "dataType": "string",
            "sourceColumn": "agent_id"
          },
          {
            "name": "agent",
            "dataType": "string",
            "sourceColumn": "agent"
          },
          {
            "name": "request_date_time",
            "dataType": "string",
            "sourceColumn": "request_date_time"
          },
          {
            "name": "request_date",
            "dataType": "dateTime",
            "sourceColumn": "request_date"
          },
          {
            "name": "closed_date_time",
            "dataType": "dateTime",
            "sourceColumn": "closed_date_time"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date"
          },
          {
            "name": "pype_name",
            "dataType": "string",
            "sourceColumn": "pype_name"
          },
          {
            "name": "stream",
            "dataType": "string",
            "sourceColumn": "stream"
          },
          {
            "name": "created_by",
            "dataType": "string",
            "sourceColumn": "created_by"
          },
          {
            "name": "consumer_msg_count",
            "dataType": "int64",
            "sourceColumn": "consumer_msg_count"
          },
          {
            "name": "agent_msg_count",
            "dataType": "int64",
            "sourceColumn": "agent_msg_count"
          },
          {
            "name": "bot_msg_count",
            "dataType": "int64",
            "sourceColumn": "bot_msg_count"
          },
          {
            "name": "end_comment",
            "dataType": "string",
            "sourceColumn": "end_comment"
          },
          {
            "name": "a_assign_datetime",
            "dataType": "dateTime",
            "sourceColumn": "a_assign_datetime"
          },
          {
            "name": "a_response_datetime",
            "dataType": "dateTime",
            "sourceColumn": "a_response_datetime"
          },
          {
            "name": "Agent_end_comment",
            "dataType": "string",
            "sourceColumn": "Agent_end_comment"
          },
          {
            "name": "Agent_end_tags",
            "dataType": "string",
            "sourceColumn": "Agent_end_tags"
          },
          {
            "name": "transfer",
            "dataType": "string",
            "sourceColumn": "transfer"
          },
          {
            "name": "skill",
            "dataType": "string",
            "sourceColumn": "skill"
          },
          {
            "name": "a_frt_sec",
            "dataType": "double",
            "sourceColumn": "a_frt_sec"
          },
          {
            "name": "a_chat_length_min",
            "dataType": "double",
            "sourceColumn": "a_chat_length_min"
          },
          {
            "name": "originating_side",
            "dataType": "string",
            "sourceColumn": "originating_side"
          },
          {
            "name": "bot_id",
            "dataType": "string",
            "sourceColumn": "bot_id"
          },
          {
            "name": "bot_start_time",
            "dataType": "dateTime",
            "sourceColumn": "bot_start_time"
          },
          {
            "name": "bot_end_time",
            "dataType": "dateTime",
            "sourceColumn": "bot_end_time"
          },
          {
            "name": "bot_num_nodes",
            "dataType": "int64",
            "sourceColumn": "bot_num_nodes"
          },
          {
            "name": "bot_convo_tags",
            "dataType": "string",
            "sourceColumn": "bot_convo_tags"
          },
          {
            "name": "bot_kill_reason",
            "dataType": "string",
            "sourceColumn": "bot_kill_reason"
          },
          {
            "name": "bot_user_traversal",
            "dataType": "string",
            "sourceColumn": "bot_user_traversal"
          },
          {
            "name": "survey_bot_start_time",
            "dataType": "dateTime",
            "sourceColumn": "survey_bot_start_time"
          },
          {
            "name": "survey_bot_end_time",
            "dataType": "dateTime",
            "sourceColumn": "survey_bot_end_time"
          },
          {
            "name": "survey_bot_num_nodes",
            "dataType": "int64",
            "sourceColumn": "survey_bot_num_nodes"
          },
          {
            "name": "survey_bot_convo_tags",
            "dataType": "string",
            "sourceColumn": "survey_bot_convo_tags"
          },
          {
            "name": "survey_bot_kill_reason",
            "dataType": "string",
            "sourceColumn": "survey_bot_kill_reason"
          },
          {
            "name": "survey_bot_user_traversal",
            "dataType": "string",
            "sourceColumn": "survey_bot_user_traversal"
          },
          {
            "name": "RATING_PYPESTREAM",
            "dataType": "string",
            "sourceColumn": "RATING_PYPESTREAM"
          },
          {
            "name": "request_date_key",
            "dataType": "int64",
            "sourceColumn": "request_date_key"
          },
          {
            "name": "closed_date_key",
            "dataType": "int64",
            "sourceColumn": "closed_date_key"
          },
          {
            "type": "calculated",
            "name": "a_assign_datetime_hour",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "HOUR(bot_agent_pypestream[a_assign_datetime])",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "Previous_workday",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR latest_day=(bot_agent_pypestream[request_date])",
              "VAR WD1=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-1)",
              "VAR WD2=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-2)",
              "VAR WD3=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-3)",
              "VAR R1D=latest_day-1",
              "VAR R2D=latest_day-2",
              "VAR R3D=latest_day-3",
              "RETURN",
              "IF(WD1=1,R1D,IF(WD2=1,R2D,IF(WD3=1,R3D)))",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "technology",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "\"Pypestream\""
          },
          {
            "name": "persona",
            "dataType": "string",
            "sourceColumn": "persona"
          },
          {
            "name": "email_requestor",
            "dataType": "string",
            "sourceColumn": "email"
          },
          {
            "name": "verbatim",
            "dataType": "string",
            "sourceColumn": "rating_comment"
          },
          {
            "type": "calculated",
            "name": "GMT+2",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " IF(bot_agent_pypestream[a_assign_datetime] = BLANK(), BLANK(), HOUR(bot_agent_pypestream[a_assign_datetime] +2/24)",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "GMT+8",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " IF(bot_agent_pypestream[a_assign_datetime] = BLANK(), BLANK(), HOUR(bot_agent_pypestream[a_assign_datetime] +8/24)",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "GMT-6",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " IF(bot_agent_pypestream[a_assign_datetime] = BLANK(), BLANK(), HOUR(bot_agent_pypestream[a_assign_datetime] -6/24)",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "chats vs bots",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF ( bot_agent_pypestream[transfer] = BLANK (), \"Bots\", \"Chats\" )"
            ]
          },
          {
            "name": "bot_abandoned",
            "dataType": "int64",
            "sourceColumn": "bot_abandoned"
          },
          {
            "name": "service_center",
            "dataType": "string",
            "sourceColumn": "service_center"
          },
          {
            "name": "group_service_center",
            "dataType": "string",
            "sourceColumn": "group_service_center"
          },
          {
            "name": "agent_status",
            "dataType": "string",
            "sourceColumn": "agent_status"
          },
          {
            "name": "agent_region",
            "dataType": "string",
            "sourceColumn": "agent_region"
          },
          {
            "type": "calculated",
            "name": "missed_chats",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (",
              "    bot_agent_pypestream[stream] = \"PG.MFAPortalApps\"",
              "        && RIGHT ( bot_agent_pypestream[bot_user_traversal], 4 ) = \"8002\"",
              "        && bot_agent_pypestream[agent] = BLANK ()",
              "        && (",
              "            bot_agent_pypestream[a_frt_sec] = 0",
              "                || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "        ),",
              "    1,",
              "    IF (",
              "        bot_agent_pypestream[stream] = \"PG.MFAPortalApps\"",
              "            && RIGHT ( bot_agent_pypestream[bot_user_traversal], 4 ) = \"8002\"",
              "            && bot_agent_pypestream[agent] <> BLANK ()",
              "            && (",
              "                bot_agent_pypestream[a_frt_sec] = 0",
              "                    || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "            ),",
              "        1,",
              "        IF (",
              "            bot_agent_pypestream[stream]",
              "                IN { \"PG.PANLU\", \"Coupa Chat\", \"PG.PANLUSP\", \"PG.PANLUST\" }",
              "                && RIGHT ( bot_agent_pypestream[bot_user_traversal], 4 ) = \"3000\"",
              "                && bot_agent_pypestream[agent] = BLANK ()",
              "                && (",
              "                    bot_agent_pypestream[a_frt_sec] = 0",
              "                        || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                ),",
              "            1,",
              "            IF (",
              "                bot_agent_pypestream[stream]",
              "                    IN { \"PG.PANLU\", \"Coupa Chat\", \"PG.PANLUSP\", \"PG.PANLUST\" }",
              "                    && RIGHT ( bot_agent_pypestream[bot_user_traversal], 4 ) = \"3000\"",
              "                    && bot_agent_pypestream[agent] <> BLANK ()",
              "                    && (",
              "                        bot_agent_pypestream[a_frt_sec] = 0",
              "                            || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                    ),",
              "                1,",
              "                IF (",
              "                    bot_agent_pypestream[stream] = \"PG.AravoBot\"",
              "                        && RIGHT ( bot_agent_pypestream[bot_user_traversal], 3 ) IN { \"999\", \"600\", \"653\" }",
              "                        && bot_agent_pypestream[agent] = BLANK ()",
              "                        && (",
              "                            bot_agent_pypestream[a_frt_sec] = 0",
              "                                || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                        ),",
              "                    1,",
              "                    IF (",
              "                        bot_agent_pypestream[stream] = \"PG.AravoBot\"",
              "                            && RIGHT ( bot_agent_pypestream[bot_user_traversal], 3 ) IN { \"999\", \"600\", \"653\" }",
              "                            && bot_agent_pypestream[agent] <> BLANK ()",
              "                            && (",
              "                                bot_agent_pypestream[a_frt_sec] = 0",
              "                                    || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                            ),",
              "                        1,",
              "                        IF (",
              "                            bot_agent_pypestream[stream] = \"P2P Portal\"",
              "                                && RIGHT ( bot_agent_pypestream[bot_user_traversal], 3 ) IN { \"999\", \"998\" }",
              "                                && bot_agent_pypestream[agent] = BLANK ()",
              "                                && (",
              "                                    bot_agent_pypestream[a_frt_sec] = 0",
              "                                        || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                                ),",
              "                            1,",
              "                            IF (",
              "                                bot_agent_pypestream[stream] = \"P2P Portal\"",
              "                                    && RIGHT ( bot_agent_pypestream[bot_user_traversal], 3 ) IN { \"999\", \"998\" }",
              "                                    && bot_agent_pypestream[agent] <> BLANK ()",
              "                                    && (",
              "                                        bot_agent_pypestream[a_frt_sec] = 0",
              "                                            || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                                    ),",
              "                                1,",
              "                                IF (",
              "                                    bot_agent_pypestream[stream] IN { \"CAP\", \"PTU\", \"SBM\", \"PGEtools\", \"Coupa PT\" }",
              "                                        && RIGHT ( bot_agent_pypestream[bot_user_traversal], 3 ) = \"999\"",
              "                                        && bot_agent_pypestream[agent] = BLANK ()",
              "                                        && (",
              "                                            bot_agent_pypestream[a_frt_sec] = 0",
              "                                                || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                                        ),",
              "                                    1,",
              "                                    IF (",
              "                                        bot_agent_pypestream[stream] IN { \"CAP\", \"PTU\", \"SBM\", \"PGEtools\", \"Coupa PT\" }",
              "                                            && RIGHT ( bot_agent_pypestream[bot_user_traversal], 3 ) = \"999\"",
              "                                            && bot_agent_pypestream[agent] <> BLANK ()",
              "                                            && (",
              "                                                bot_agent_pypestream[a_frt_sec] = 0",
              "                                                    || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                                            ),",
              "                                        1,",
              "                                        IF (",
              "                                            bot_agent_pypestream[transfer] = \"bot to agent\"",
              "                                                && bot_agent_pypestream[agent] = BLANK ()",
              "                                                && (",
              "                                                    bot_agent_pypestream[a_frt_sec] = 0",
              "                                                        || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                                                ),",
              "                                            1,",
              "                                            IF (",
              "                                                bot_agent_pypestream[transfer] = \"bot to agent\"",
              "                                                    && bot_agent_pypestream[agent] <> BLANK ()",
              "                                                    && (",
              "                                                        bot_agent_pypestream[a_frt_sec] = 0",
              "                                                            || bot_agent_pypestream[a_frt_sec] = BLANK ()",
              "                                                    ),",
              "                                                1,",
              "                                                0",
              "                                            )",
              "                                        )",
              "                                    )",
              "                                )",
              "                            )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "agent_email",
            "dataType": "string",
            "sourceColumn": "agent_email"
          },
          {
            "name": "service_line",
            "dataType": "string",
            "sourceColumn": "service_line"
          },
          {
            "name": "a_wait_time_sec",
            "dataType": "double",
            "sourceColumn": "a_wait_time_sec"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_bot_agent_pypestream = Source{[Schema=\"baseview\",Item=\"vw_bot_agent_pypestream\"]}[Data]",
                "in",
                "    baseview_vw_bot_agent_pypestream"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "M_Interactions_Pypestream #",
            "expression": "distinctcount('bot_agent_pypestream'[case_id])",
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Pypestream_Feedback #",
            "expression": "[M_Interactions_Pypestream #]('bot_agent_pypestream'[RATING_PYPESTREAM]<>\"NO FEEDBACK\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Pypestream_Feedback %",
            "expression": "DIVIDE([M_Interactions_Pypestream_Feedback #],[M_Interactions_Pypestream #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Promoters_Pyperstream #",
            "expression": "[M_Interactions_Pypestream #]('bot_agent_pypestream'[RATING_PYPESTREAM]=\"HAPPY\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Detractors_Pypestream #",
            "expression": "[M_Interactions_Pypestream #]('bot_agent_pypestream'[RATING_PYPESTREAM]=\"UNHAPPY\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Pypestream_NPS %",
            "expression": "DIVIDE(([M_Promoters_Pyperstream #]-[M_Detractors_Pypestream #]),[M_Interactions_Pypestream_Feedback #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Interactions_Pypestream_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Pypestream #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Pypestream_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Interactions_Pypestream #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Pypestream_LY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Pypestream #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]-1",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_Interactions_Pypestream#",
            "expression": "TOTALMTD([M_Interactions_Pypestream #],DATESMTD('bot_agent_pypestream'[request_date]))",
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Pypestream_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Pypestream #],",
              "    FILTER (",
              "        bot_agent_pypestream,",
              "        'bot_agent_pypestream'[request_date]",
              "            = MAX ( 'bot_agent_pypestream'[request_date] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Interactions_Pypestream_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Pypestream #],",
              "    FILTER (",
              "        bot_agent_pypestream,",
              "        'bot_agent_pypestream'[request_date]",
              "            = MAX ( 'bot_agent_pypestream'[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_PickUp_Time",
            "expression": [
              " CALCULATE(AVERAGEX(bot_agent_pypestream,datediff( bot_agent_pypestream[a_assign_datetime], bot_agent_pypestream[a_response_datetime],MINUTE)),bot_agent_pypestream[a_assign_datetime]<>BLANK())",
              ""
            ],
            "formatString": "0.0"
          },
          {
            "name": "Bot_independence_%",
            "expression": [
              " CALCULATE([M_Interactions_Pypestream #], ",
              "\t\tbot_agent_pypestream[transfer]=BLANK()) / [M_Interactions_Pypestream #]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Chat_on_spot",
            "expression": [
              " [M_Interactions_Pypestream #]- CALCULATE ([M_Interactions_Pypestream #], ",
              "\tbot_agent_pypestream[transfer] = \"agent_to_agent\")"
            ]
          },
          {
            "name": "M_chat_on_spot_%",
            "expression": " [M_Chat_on_spot] / [M_Interactions_Pypestream #] ",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Avg handling time_pypestream #",
            "expression": [
              "",
              "    CALCULATE (",
              "        AVERAGEX(bot_agent_pypestream,",
              "            DATEDIFF( bot_agent_pypestream[a_assign_datetime],",
              "                bot_agent_pypestream[closed_date_time],MINUTE)",
              "            ),bot_agent_pypestream[a_assign_datetime]<>BLANK(), bot_agent_pypestream[a_assign_datetime]<> DATE(1970,1,1)",
              "        )"
            ],
            "formatString": "0.0"
          },
          {
            "name": "M_chat_on_spot_CY_PM %",
            "expression": [
              " ",
              "CALCULATE( [M_chat_on_spot_%] ,",
              "\tFILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_chat_on_spot_CY_CM %",
            "expression": [
              " ",
              "CALCULATE( [M_chat_on_spot_%] ,",
              "FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Bot_independence_%_CY_CM",
            "expression": [
              "",
              "CALCULATE( [Bot_independence_%],",
              " FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Bot_independence_%_CY_PM",
            "expression": [
              "",
              "CALCULATE( [Bot_independence_%],",
              " FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha VS PM % (bot_independence)",
            "expression": " [Bot_independence_%_CY_CM] -  [Bot_independence_%_CY_PM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Avg_handeling_time_pype_CY_CM",
            "expression": [
              "",
              "CALCULATE( [Avg handling time_pypestream #],",
              " FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0"
          },
          {
            "name": "Avg_handeling_time_pype_CY_PM",
            "expression": [
              "",
              "CALCULATE( [Avg handling time_pypestream #],",
              "FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0"
          },
          {
            "name": "M_Cha VS PM (handeling_time_pype)",
            "expression": " [Avg_handeling_time_pype_CY_CM] - [Avg_handeling_time_pype_CY_PM]",
            "formatString": "0.0"
          },
          {
            "name": "M_PickUp_Time_CY_PM #",
            "expression": [
              "",
              "CALCULATE( [M_PickUp_Time] ,",
              " \tFILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0"
          },
          {
            "name": "M_PickUp_Time_CY_CM #",
            "expression": [
              "",
              "CALCULATE( [M_PickUp_Time],",
              " \tFILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0"
          },
          {
            "name": "M_Cha VS PM (PickUp Time) #",
            "expression": " [M_PickUp_Time_CY_CM #] - [M_PickUp_Time_CY_PM #]",
            "formatString": "0.0"
          },
          {
            "name": "M_PickUp_Time_Today #",
            "expression": " CALCULATE([M_PickUp_Time],FILTER(bot_agent_pypestream,'bot_agent_pypestream'[request_date]=MAX('bot_agent_pypestream'[request_date])))",
            "formatString": "0.0"
          },
          {
            "name": "M_PickUp_time_Yday #",
            "expression": [
              "",
              "CALCULATE([M_PickUp_Time],",
              "\tFILTER(bot_agent_pypestream , bot_agent_pypestream[request_date]=MAX(bot_agent_pypestream[Previous_workday])",
              "\t))"
            ],
            "formatString": "0.0"
          },
          {
            "name": "M_Cha_vs_PD_Pypestream (interactions) #",
            "expression": " [M_Interactions_Pypestream_Today #] - [M_Interactions_Pypestream_Yday #]"
          },
          {
            "name": "M_Cha_vs_PM_Pypestream (interactions) #",
            "expression": " [M_Interactions_Pypestream_CY_CM #] - [M_Interactions_Pypestream_CY_PM #]"
          },
          {
            "name": "M_Cha VS PM (SLA) %",
            "expression": " [M_chat_on_spot_CY_CM %] - [M_chat_on_spot_CY_PM %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_Pypestream_Today %",
            "expression": "CALCULATE([M_Pypestream_NPS %],FILTER(bot_agent_pypestream,bot_agent_pypestream[request_date] = MAX(bot_agent_pypestream[request_date])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_Pypestream_Yday %",
            "expression": [
              "",
              "CALCULATE([M_Pypestream_NPS %],",
              "\tFILTER(bot_agent_pypestream , bot_agent_pypestream[request_date]=MAX(bot_agent_pypestream[Previous_workday])",
              "\t))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_Pypestream_CY_CM %",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Pypestream_NPS %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_Pypestream_CY_PM %",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Pypestream_NPS %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_vs_PD_Pypestream % (NPS)",
            "expression": " [M_NPS_Pypestream_Today %] - [M_NPS_Pypestream_Yday %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_vs_PM_Pypestream % (NPS)",
            "expression": " [M_NPS_Pypestream_CY_CM %] - [M_NPS_Pypestream_CY_PM %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_MTD_NPS_Pypestream %",
            "expression": "TOTALMTD([M_Pypestream_NPS %],DATESMTD('bot_agent_pypestream'[request_date]))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha VS PM (chat_on_spot) %",
            "expression": "[M_chat_on_spot_CY_CM %] - [M_chat_on_spot_CY_PM %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Neutral_Pyperstream #",
            "expression": "[M_Interactions_Pypestream #]('bot_agent_pypestream'[RATING_PYPESTREAM]=\"NEUTRAL\")"
          },
          {
            "name": "M_MTD_Promoters_Pypestream#",
            "expression": "TOTALMTD([M_Promoters_Pyperstream #],DATESMTD('bot_agent_pypestream'[request_date]))"
          },
          {
            "name": "M_MTD_Detractors_Pypestream#",
            "expression": "TOTALMTD([M_Detractors_Pypestream #],DATESMTD('bot_agent_pypestream'[request_date]))"
          },
          {
            "name": "M_MTD_Feedback_Pypestream#",
            "expression": "TOTALMTD([M_Interactions_Pypestream_Feedback #],DATESMTD('bot_agent_pypestream'[request_date]))"
          },
          {
            "name": "M_Promoters_Pypestream_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_Pyperstream #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_Pypestream_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Pypestream_Feedback #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_Pypestream_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_Pypestream #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_Pypestream_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Interactions_Pypestream_Feedback #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_Pypestream_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Promoters_Pyperstream #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_Pypestream_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Detractors_Pypestream #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_Pypestream_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_Pyperstream #],",
              "    FILTER (",
              "        bot_agent_pypestream,",
              "        'bot_agent_pypestream'[request_date]",
              "            = MAX ( 'bot_agent_pypestream'[request_date] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_Pypestream_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_Pypestream #],",
              "    FILTER (",
              "        bot_agent_pypestream,",
              "        'bot_agent_pypestream'[request_date]",
              "            = MAX ( 'bot_agent_pypestream'[request_date] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_Pypestream_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Pypestream_Feedback #],",
              "    FILTER (",
              "        bot_agent_pypestream,",
              "        'bot_agent_pypestream'[request_date]",
              "            = MAX ( 'bot_agent_pypestream'[request_date] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_Pypestream_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_Pyperstream #],",
              "    FILTER (",
              "        bot_agent_pypestream,",
              "        'bot_agent_pypestream'[request_date]",
              "            = MAX ( 'bot_agent_pypestream'[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_Pypestream_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_Pypestream #],",
              "    FILTER (",
              "        bot_agent_pypestream,",
              "        'bot_agent_pypestream'[request_date]",
              "            = MAX ( 'bot_agent_pypestream'[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_Pypestream_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Pypestream_Feedback #],",
              "    FILTER (",
              "        bot_agent_pypestream,",
              "        'bot_agent_pypestream'[request_date]",
              "            = MAX ( 'bot_agent_pypestream'[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "Agent to Agent",
            "expression": " CALCULATE ([M_Interactions_Pypestream #], bot_agent_pypestream[transfer] = \"agent_to_agent\") "
          },
          {
            "name": "Agent_to_Agent_CY_CM",
            "expression": [
              " ",
              "\t\tCALCULATE (",
              "\t\t    [Agent to Agent],",
              "\t\t    FILTER (",
              "\t\t        doc_post_date_dim,",
              "\t\t        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "\t\t            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "\t\t    )",
              "\t\t)"
            ]
          },
          {
            "name": "Agent_to_Agent_CY_PM",
            "expression": [
              " ",
              "CALCULATE (",
              "   [Agent to Agent],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "Cha VS PM (Agent to Agent)",
            "expression": " [Agent_to_Agent_CY_CM] - [Agent_to_Agent_CY_PM]"
          },
          {
            "name": "Vertical writing",
            "expression": " UNICHAR(9650)"
          },
          {
            "name": "M_Interactions_Pype_Feedback%_CY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Pypestream_Feedback %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "smart_text_latest_date_available_Pypestream",
            "expression": [
              "",
              "FORMAT ( MAX ( bot_agent_pypestream[request_date] ), \"mm/dd/yyyy\" )"
            ]
          },
          {
            "name": "smart_text_PypeNPS_PDdiff",
            "expression": [
              "",
              "IF (",
              "    ( bot_agent_pypestream[M_Cha_vs_PD_Pypestream % (NPS)] ) < 0,",
              "    \"decrease\",",
              "    IF (",
              "        ( bot_agent_pypestream[M_Cha_vs_PD_Pypestream % (NPS)] ) = 0,",
              "        \"flat\",",
              "        \"increase\"",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text_PypeNPS_PMdiff",
            "expression": [
              "",
              "IF (",
              "    ( bot_agent_pypestream[M_Cha_vs_PM_Pypestream % (NPS)] ) < 0,",
              "    \"decrease\",",
              "    IF (",
              "        ( bot_agent_pypestream[M_Cha_vs_PM_Pypestream % (NPS)] ) = 0,",
              "        \"flat\",",
              "        \"increase\"",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text1_Pype",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), ( MAX ( doc_post_date_dim[closed_month] ) - 1 ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text10_Pype",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), MAX ( doc_post_date_dim[closed_month] ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text13_Pype",
            "expression": [
              "",
              "FORMAT ( TODAY (), \"MMMM\" )"
            ]
          },
          {
            "name": "Rows_count_Pype",
            "expression": [
              "",
              "COUNTROWS(SUMMARIZE(bot_agent_pypestream, bot_agent_pypestream[case_id], bot_agent_pypestream[agent], bot_agent_pypestream[bot_id], bot_agent_pypestream[created_by], bot_agent_pypestream[email_requestor],bot_agent_pypestream[pype_name], bot_agent_pypestream[RATING_PYPESTREAM],bot_agent_pypestream[verbatim], bot_agent_pypestream[transfer], bot_agent_pypestream[technology], bot_agent_pypestream[survey_bot_start_time], bot_agent_pypestream[survey_bot_end_time], bot_agent_pypestream[stream], bot_agent_pypestream[request_date_time], bot_agent_pypestream[persona], bot_agent_pypestream[originating_side], bot_agent_pypestream[end_comment], bot_agent_pypestream[closed_date_time], bot_agent_pypestream[chats vs bots], bot_agent_pypestream[bot_start_time], bot_agent_pypestream[bot_kill_reason], bot_agent_pypestream[bot_end_time], bot_agent_pypestream[Agent_end_tags], bot_agent_pypestream[Agent_end_comment], bot_agent_pypestream[a_response_datetime], bot_agent_pypestream[a_assign_datetime], bot_agent_pypestream[bot_user_traversal]))"
            ]
          },
          {
            "name": "smart_text_CY_CM_Pype",
            "expression": [
              " format(date(max(doc_post_date_dim[closed_year]),max(doc_post_date_dim[closed_month]),1),\"MMMM\")",
              "",
              ""
            ]
          },
          {
            "name": "M_Interactions_Pype_Feedback%_CY_PM",
            "expression": [
              " ",
              "CALCULATE( [M_Interactions_Pypestream_Feedback %], ",
              "FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_Interactions_Feedback %_vs_PM",
            "expression": [
              " [M_Interactions_Pype_Feedback%_CY_CM]- [M_Interactions_Pype_Feedback%_CY_PM]",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Missed_Chats_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [missed chats],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0"
          },
          {
            "name": "M_Missed_Chats_CY_PM",
            "expression": [
              "",
              "CALCULATE (",
              "  [missed chats],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")",
              ""
            ],
            "formatString": "0"
          },
          {
            "name": "M_Cha VS PM (missed chats) #",
            "expression": " [M_Missed_Chats_CY_CM #] - [M_Missed_Chats_CY_PM]",
            "formatString": "0"
          },
          {
            "name": "missed chats",
            "expression": " CALCULATE(DISTINCTCOUNT( bot_agent_pypestream[case_id]) , bot_agent_pypestream[missed_chats] = 1) "
          }
        ]
      },
      {
        "name": "people_dim",
        "columns": [
          {
            "name": "tnumber",
            "dataType": "string",
            "sourceColumn": "tnumber"
          },
          {
            "name": "manager_tnumber",
            "dataType": "string",
            "sourceColumn": "manager_tnumber"
          },
          {
            "name": "first_name",
            "dataType": "string",
            "sourceColumn": "first_name"
          },
          {
            "name": "last_name",
            "dataType": "string",
            "sourceColumn": "last_name"
          },
          {
            "name": "common_name",
            "dataType": "string",
            "sourceColumn": "common_name"
          },
          {
            "name": "short_name",
            "dataType": "string",
            "sourceColumn": "short_name"
          },
          {
            "name": "email",
            "dataType": "string",
            "sourceColumn": "email"
          },
          {
            "name": "job_title",
            "dataType": "string",
            "sourceColumn": "job_title"
          },
          {
            "name": "site_id",
            "dataType": "string",
            "sourceColumn": "site_id"
          },
          {
            "name": "region_code",
            "dataType": "string",
            "sourceColumn": "region_code"
          },
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "employee_status",
            "dataType": "int64",
            "sourceColumn": "employee_status"
          },
          {
            "name": "building",
            "dataType": "string",
            "sourceColumn": "building"
          },
          {
            "name": "room_num",
            "dataType": "string",
            "sourceColumn": "room_num"
          },
          {
            "name": "funcion_hour",
            "dataType": "string",
            "sourceColumn": "funcion_hour"
          },
          {
            "name": "organization_name",
            "dataType": "string",
            "sourceColumn": "organization_name"
          },
          {
            "name": "employee_type",
            "dataType": "string",
            "sourceColumn": "employee_type"
          },
          {
            "name": "company_name",
            "dataType": "string",
            "sourceColumn": "company_name"
          },
          {
            "name": "company_id",
            "dataType": "int64",
            "sourceColumn": "company_id"
          },
          {
            "name": "cost_center",
            "dataType": "string",
            "sourceColumn": "cost_center"
          },
          {
            "name": "function_name",
            "dataType": "string",
            "sourceColumn": "function_name"
          },
          {
            "name": "buyer_flag",
            "dataType": "boolean",
            "sourceColumn": "buyer_flag"
          },
          {
            "name": "m_gbs_center",
            "dataType": "string",
            "sourceColumn": "m_gbs_center"
          },
          {
            "name": "scorecard_region",
            "dataType": "string",
            "sourceColumn": "scorecard_region"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_people_dim = Source{[Schema=\"baseview\",Item=\"vw_people_dim\"]}[Data]",
                "in",
                "    baseview_vw_people_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "nps_rate_my_experience",
        "columns": [
          {
            "name": "rating_timestamp",
            "dataType": "dateTime",
            "sourceColumn": "rating_timestamp"
          },
          {
            "name": "rating_timestamp_key",
            "dataType": "int64",
            "sourceColumn": "rating_timestamp_key"
          },
          {
            "name": "rating_custom",
            "dataType": "string",
            "sourceColumn": "rating_custom"
          },
          {
            "name": "rating_smile",
            "dataType": "string",
            "sourceColumn": "rating_smile"
          },
          {
            "name": "experience_id",
            "dataType": "string",
            "sourceColumn": "experience_id"
          },
          {
            "name": "experience_description",
            "dataType": "string",
            "sourceColumn": "experience_description"
          },
          {
            "name": "experience_owner",
            "dataType": "string",
            "sourceColumn": "experience_owner"
          },
          {
            "name": "experience_created_at",
            "dataType": "dateTime",
            "sourceColumn": "experience_created_at"
          },
          {
            "name": "experience_updated_at",
            "dataType": "dateTime",
            "sourceColumn": "experience_updated_at"
          },
          {
            "name": "experience_deleted_at",
            "dataType": "dateTime",
            "sourceColumn": "experience_deleted_at"
          },
          {
            "name": "service_line_id",
            "dataType": "string",
            "sourceColumn": "service_line_id"
          },
          {
            "name": "service_line_name",
            "dataType": "string",
            "sourceColumn": "service_line_name"
          },
          {
            "name": "created_by_employee_type",
            "dataType": "string",
            "sourceColumn": "created_by_employee_type"
          },
          {
            "name": "persona",
            "dataType": "string",
            "sourceColumn": "persona"
          },
          {
            "type": "calculated",
            "name": "rating",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " IF(nps_rate_my_experience[rating_smile] = \"0\", \"Unhappy\",",
              "\tIF(nps_rate_my_experience[rating_smile] = \"1\", \"Neutral\",",
              "\tIF(nps_rate_my_experience[rating_smile] = \"2\", \"Happy\", \"No Feedback\")",
              "\t)",
              ") "
            ]
          },
          {
            "type": "calculated",
            "name": "Previous_workday",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR latest_day=([datekey])",
              "VAR WD1=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-1)",
              "VAR WD2=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-2)",
              "VAR WD3=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-3)",
              "VAR R1D=latest_day-1",
              "VAR R2D=latest_day-2",
              "VAR R3D=latest_day-3",
              "RETURN",
              "IF(WD1=1,R1D,IF(WD2=1,R2D,IF(WD3=1,R3D)))",
              "",
              ""
            ]
          },
          {
            "name": "datekey",
            "dataType": "dateTime",
            "sourceColumn": "datekey"
          },
          {
            "type": "calculated",
            "name": "technology",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "\"Rate my Experience\""
          },
          {
            "name": "case_id",
            "dataType": "string",
            "sourceColumn": "rating_id"
          },
          {
            "name": "verbatim",
            "dataType": "string",
            "sourceColumn": "rating_comment"
          },
          {
            "name": "email_requestor",
            "dataType": "string",
            "sourceColumn": "rating_shortname"
          },
          {
            "type": "calculated",
            "name": "service_line",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (",
              "    nps_rate_my_experience[service_line_name] = \"Source Plan Pay Operations\",",
              "    \"SPPO\",",
              "    IF (",
              "        nps_rate_my_experience[service_line_name] = \"Record to Report\",",
              "        \"R2R\",",
              "        IF (",
              "            nps_rate_my_experience[service_line_name] = \"BP&A, Budget Mgmt, Financial & TDC Rprt\",",
              "            \"BPA\",",
              "            IF (",
              "                nps_rate_my_experience[service_line_name] = \"Banking Services\",",
              "                \"Banking\",",
              "                IF (",
              "                    nps_rate_my_experience[service_line_name] = \"Accounts Receivable\",",
              "                    \"AR\",",
              "                    IF (",
              "                        nps_rate_my_experience[service_line_name] = \"Product Supply Finance One\",",
              "                        \"Product Supply Finance One\",",
              "                        IF ( ",
              "                        \tnps_rate_my_experience[service_line_name] = \"Business Planning & Analysis, incl. Budget Mgmt, Financial & TDC Reporting\",",
              "           \t\t \"BPA\",",
              "                      \t \"Other\"",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "agent_gbs",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "\"Not Assigned\""
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_rate_my_experience = Source{[Schema=\"baseview\",Item=\"vw_nps_rate_my_experience\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(baseview_vw_nps_rate_my_experience, \"rating_timestamp\", \"rating_timestamp - Copy\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Duplicated Column\",{{\"rating_timestamp - Copy\", \"datekey\"}}),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"rating_id\", \"rating_timestamp\", \"datekey\", \"rating_timestamp_key\", \"rating_custom\", \"rating_smile\", \"rating_comment\", \"rating_shortname\", \"created_by_employee_type\", \"persona\", \"experience_id\", \"experience_description\", \"experience_owner\", \"experience_created_at\", \"experience_updated_at\", \"experience_deleted_at\", \"service_line_id\", \"service_line_name\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Reordered Columns\",{{\"datekey\", type date}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "M_Interactions_RME #",
            "expression": " DISTINCTCOUNT(nps_rate_my_experience[case_id])"
          },
          {
            "name": "M_MTD_Interactions_RME#",
            "expression": "TOTALMTD([M_Interactions_RME #],DATESMTD(nps_rate_my_experience[datekey]))"
          },
          {
            "name": "M_Interactions_RME_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Interactions_RME #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_RME #",
            "expression": "[M_Interactions_RME #](nps_rate_my_experience[rating]=\"Happy\")"
          },
          {
            "name": "M_Detractors_RME #",
            "expression": "[M_Interactions_RME #](nps_rate_my_experience[rating]=\"UNHAPPY\")"
          },
          {
            "name": "M_Interactions_RME_Feedback #",
            "expression": "[M_Interactions_RME #](nps_rate_my_experience[rating]<>\"NO FEEDBACK\")"
          },
          {
            "name": "M_Interactions_RME_Feedback %",
            "expression": "DIVIDE([M_Interactions_RME_Feedback #],[M_Interactions_RME #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Interactions_RME_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_RME #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_RME_NPS %",
            "expression": "DIVIDE(([M_Promoters_RME #]-[M_Detractors_RME #]),[M_Interactions_RME_Feedback #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Interactions_RME_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_RME #],",
              "    FILTER (",
              "        nps_rate_my_experience,",
              "        'nps_rate_my_experience'[datekey] = MAX ( 'nps_rate_my_experience'[datekey] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Interactions_RME_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_RME #],",
              "    FILTER (",
              "        nps_rate_my_experience,",
              "        nps_rate_my_experience[datekey]",
              "            = MAX ( nps_rate_my_experience[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_NPS_RME_Yday %",
            "expression": [
              " ",
              "CALCULATE( [M_RME_NPS %],",
              "\tFILTER(nps_rate_my_experience, ",
              "\t\tnps_rate_my_experience[datekey] = MAX(nps_rate_my_experience[Previous_workday]",
              "\t\t)",
              "\t))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_RME_Today %",
            "expression": " CALCULATE([M_RME_NPS %],FILTER(nps_rate_my_experience,nps_rate_my_experience[datekey] = MAX(nps_rate_my_experience[datekey])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_RME_CY_CM %",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_RME_NPS %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_RME_CY_PM %",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_RME_NPS %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_MTD_NPS_RME %",
            "expression": "TOTALMTD([M_RME_NPS %],DATESMTD(nps_rate_my_experience[datekey]))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Neutral_RME #",
            "expression": [
              "[M_Interactions_RME #](nps_rate_my_experience[rating]=\"Neutral\")",
              ""
            ]
          },
          {
            "name": "M_MTD_Promoters_RME#",
            "expression": "TOTALMTD([M_Promoters_RME #],DATESMTD(nps_rate_my_experience[datekey]))"
          },
          {
            "name": "M_MTD_Feedback_RME#",
            "expression": "TOTALMTD([M_Interactions_RME_Feedback #],DATESMTD(nps_rate_my_experience[datekey]))"
          },
          {
            "name": "M_MTD_Detractors_RME#",
            "expression": "TOTALMTD([M_Detractors_RME #],DATESMTD(nps_rate_my_experience[datekey]))"
          },
          {
            "name": "M_Promoters_RME_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_RME #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_RME_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_RME_Feedback #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_RME_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_RME #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_RME_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Interactions_RME_Feedback #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_RME_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Promoters_RME #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_RME_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Detractors_RME #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_RME_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_RME #],",
              "    FILTER (",
              "        nps_rate_my_experience,",
              "        'nps_rate_my_experience'[datekey] = MAX ( 'nps_rate_my_experience'[datekey] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_RME_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_RME #],",
              "    FILTER (",
              "        nps_rate_my_experience,",
              "        'nps_rate_my_experience'[datekey] = MAX ( 'nps_rate_my_experience'[datekey] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_RME_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_RME_Feedback #],",
              "    FILTER (",
              "        nps_rate_my_experience,",
              "        'nps_rate_my_experience'[datekey] = MAX ( 'nps_rate_my_experience'[datekey] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_RME_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_RME #],",
              "    FILTER (",
              "        nps_rate_my_experience,",
              "        nps_rate_my_experience[datekey]",
              "            = MAX ( nps_rate_my_experience[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_RME_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_RME #],",
              "    FILTER (",
              "        nps_rate_my_experience,",
              "        nps_rate_my_experience[datekey]",
              "            = MAX ( nps_rate_my_experience[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_RME_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_RME_Feedback #],",
              "    FILTER (",
              "        nps_rate_my_experience,",
              "        nps_rate_my_experience[datekey]",
              "            = MAX ( nps_rate_my_experience[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "Cha_vs_PD_RME_NPS %",
            "expression": " [M_NPS_RME_Today %]-[M_NPS_RME_Yday %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Cha_vs_PM_RME_NPS %",
            "expression": " [M_NPS_RME_CY_CM %]-[M_NPS_RME_CY_PM %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Neutral_RME_CY_CM",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Neutral_RME #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text_latest_date_available_RME",
            "expression": [
              "",
              "FORMAT ( MAX ( nps_rate_my_experience[datekey] ), \"mm/dd/yyyy\" )"
            ]
          },
          {
            "name": "smart_text_RME NPS_PDdiff",
            "expression": [
              "",
              "IF (",
              "    ( nps_rate_my_experience[Cha_vs_PD_RME_NPS %] ) < 0,",
              "    \"decrease\",",
              "    IF ( ( nps_rate_my_experience[Cha_vs_PD_RME_NPS %] ) = 0, \"flat\", \"increase\" )",
              ")"
            ]
          },
          {
            "name": "smart_text_RME_NPS_PMdiff",
            "expression": [
              "",
              "IF (",
              "    ( nps_rate_my_experience[Cha_vs_PM_RME_NPS %] ) < 0,",
              "    \"decrease\",",
              "    IF ( ( nps_rate_my_experience[Cha_vs_PM_RME_NPS %] ) = 0, \"flat\", \"increase\" )",
              ")"
            ]
          },
          {
            "name": "smart_text1_RME",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), ( MAX ( doc_post_date_dim[closed_month] ) - 1 ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text10_RME",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), MAX ( doc_post_date_dim[closed_month] ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text13_RME",
            "expression": [
              "",
              "FORMAT ( TODAY (), \"MMMM\" )"
            ]
          },
          {
            "name": "Rows_count_RME",
            "expression": [
              "",
              "COUNTROWS(SUMMARIZE(nps_rate_my_experience,nps_rate_my_experience[case_id],nps_rate_my_experience[created_by_employee_type],nps_rate_my_experience[datekey],nps_rate_my_experience[email_requestor],nps_rate_my_experience[experience_created_at],nps_rate_my_experience[experience_deleted_at],nps_rate_my_experience[experience_description],nps_rate_my_experience[experience_id],nps_rate_my_experience[experience_owner],nps_rate_my_experience[experience_updated_at],nps_rate_my_experience[persona],nps_rate_my_experience[rating],nps_rate_my_experience[rating_custom],nps_rate_my_experience[rating_smile],nps_rate_my_experience[verbatim],nps_rate_my_experience[technology],nps_rate_my_experience[service_line_name]))"
            ]
          },
          {
            "name": "smart_text_CY_CM_RME",
            "expression": [
              " format(date(max(doc_post_date_dim[closed_year]),max(doc_post_date_dim[closed_month]),1),\"MMMM\")",
              "",
              ""
            ]
          }
        ]
      },
      {
        "name": "nps_buyer_dashboard_ratings",
        "columns": [
          {
            "name": "date_time",
            "dataType": "dateTime",
            "sourceColumn": "date_time"
          },
          {
            "name": "date_time_key",
            "dataType": "int64",
            "sourceColumn": "date_time_key"
          },
          {
            "name": "page",
            "dataType": "string",
            "sourceColumn": "page"
          },
          {
            "name": "feedback",
            "dataType": "int64",
            "sourceColumn": "feedback"
          },
          {
            "name": "created_by_employee_type",
            "dataType": "string",
            "sourceColumn": "created_by_employee_type"
          },
          {
            "name": "persona",
            "dataType": "string",
            "sourceColumn": "persona"
          },
          {
            "type": "calculated",
            "name": "rating",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " IF(nps_buyer_dashboard_ratings[feedback] = 1,\"Happy\",",
              "\tIF(nps_buyer_dashboard_ratings[feedback] = 2, \"Neutral\",",
              "\tIF(nps_buyer_dashboard_ratings[feedback] = 3, \"Unhappy\", \"No Feedback\")",
              "\t)",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Previous_workday",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR latest_day=(nps_buyer_dashboard_ratings[date_time_only])",
              "VAR WD1=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-1)",
              "VAR WD2=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-2)",
              "VAR WD3=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-3)",
              "VAR R1D=latest_day-1",
              "VAR R2D=latest_day-2",
              "VAR R3D=latest_day-3",
              "RETURN",
              "IF(WD1=1,R1D,IF(WD2=1,R2D,IF(WD3=1,R3D)))",
              "",
              ""
            ]
          },
          {
            "name": "date_time_only",
            "dataType": "dateTime",
            "sourceColumn": "date_time_only"
          },
          {
            "type": "calculated",
            "name": "technology",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "\"Buyers Dashboards\""
          },
          {
            "name": "case_id",
            "dataType": "string",
            "sourceColumn": "title"
          },
          {
            "name": "email_requestor",
            "dataType": "string",
            "sourceColumn": "user"
          },
          {
            "name": "verbatim",
            "dataType": "string",
            "sourceColumn": "comments"
          },
          {
            "type": "calculated",
            "name": "service_line",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " \"SPPO\""
          },
          {
            "type": "calculated",
            "name": "agent_gbs",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "\"Not Assigned\""
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_buyer_dashboard_ratings = Source{[Schema=\"baseview\",Item=\"vw_nps_buyer_dashboard_ratings\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(baseview_vw_nps_buyer_dashboard_ratings, \"date_time\", \"date_time - Copy\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Duplicated Column\",{{\"date_time - Copy\", \"date_time_only\"}}),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"title\", \"date_time\", \"date_time_only\", \"date_time_key\", \"user\", \"created_by_employee_type\", \"persona\", \"page\", \"feedback\", \"comments\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Reordered Columns\",{{\"date_time_only\", type date}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "M_Interactions_BD #",
            "expression": " DISTINCTCOUNT(nps_buyer_dashboard_ratings[case_id])"
          },
          {
            "name": "M_MTD_Interactions_BD#",
            "expression": "TOTALMTD([M_Interactions_BD #], DATESMTD('nps_buyer_dashboard_ratings'[date_time_only]))"
          },
          {
            "name": "M_Interactions_BD_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Interactions_BD #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_BD #",
            "expression": "[M_Interactions_BD #](nps_buyer_dashboard_ratings[rating]=\"HAPPY\")"
          },
          {
            "name": "M_Detractors_BD #",
            "expression": "[M_Interactions_BD #] (nps_buyer_dashboard_ratings[rating]=\"UNHAPPY\")"
          },
          {
            "name": "M_Interactions_BD_Feedback #",
            "expression": "[M_Interactions_BD #](nps_buyer_dashboard_ratings[rating]<>\"NO FEEDBACK\")"
          },
          {
            "name": "M_Interactions_BD_Feedback %",
            "expression": "DIVIDE([M_Interactions_BD_Feedback #],[M_Interactions_BD #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Interactions_BD_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_BD #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_BD_NPS %",
            "expression": "DIVIDE(([M_Promoters_BD #]-[M_Detractors_BD #]),[M_Interactions_BD_Feedback #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Interactions_BD_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_BD #],",
              "    FILTER (",
              "        nps_buyer_dashboard_ratings,",
              "        nps_buyer_dashboard_ratings[date_time_only]",
              "            = MAX ( ( nps_buyer_dashboard_ratings[date_time_only] ) )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Interactions_BD_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_BD #],",
              "    FILTER (",
              "        nps_buyer_dashboard_ratings,",
              "        nps_buyer_dashboard_ratings[date_time_only]",
              "            = MAX ( nps_buyer_dashboard_ratings[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_NPS_BD_Yday %",
            "expression": [
              " ",
              "CALCULATE([M_BD_NPS %],",
              "\tFILTER(nps_buyer_dashboard_ratings , ",
              "\t\tnps_buyer_dashboard_ratings[date_time_only] = MAX(nps_buyer_dashboard_ratings[Previous_workday]",
              "\t\t)",
              "\t))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_vs_PD_BD # (interactions)",
            "expression": " [M_Interactions_BD_Today #] - [M_Interactions_BD_Yday #]"
          },
          {
            "name": "M_Cha_vs_PM_BD (interactions) #",
            "expression": " [M_Interactions_BD_CY_CM #] - [M_Interactions_BD_CY_PM #]"
          },
          {
            "name": "M_NPS_BD_Today %",
            "expression": "CALCULATE([M_BD_NPS %],FILTER(nps_buyer_dashboard_ratings,nps_buyer_dashboard_ratings[date_time_only]=MAX(nps_buyer_dashboard_ratings[date_time_only])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_BD_CY_CM %",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_BD_NPS %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_BD_CY_PM %",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_BD_NPS %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_vs_PD_BD % (NPS)",
            "expression": " [M_NPS_BD_Today %] - [M_NPS_BD_Yday %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_vs_PM_BD % (NPS)",
            "expression": " [M_NPS_BD_CY_CM %] - [M_NPS_BD_CY_PM %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_MTD_NPS_BD %",
            "expression": "TOTALMTD([M_BD_NPS %], DATESMTD('service_now_fpss_data'[request_date]))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Neutral_BD #",
            "expression": "[M_Interactions_BD #](nps_buyer_dashboard_ratings[rating]=\"NEUTRAL\")"
          },
          {
            "name": "M_MTD_Promoters_BD#",
            "expression": "TOTALMTD([M_Promoters_BD #], DATESMTD('nps_buyer_dashboard_ratings'[date_time_only]))"
          },
          {
            "name": "M_MTD_Detractors_BD#",
            "expression": "TOTALMTD([M_Detractors_BD #], DATESMTD('nps_buyer_dashboard_ratings'[date_time_only]))"
          },
          {
            "name": "M_MTD_Feedback_BD#",
            "expression": "TOTALMTD([M_Interactions_BD_Feedback #], DATESMTD('nps_buyer_dashboard_ratings'[date_time_only]))"
          },
          {
            "name": "M_Promoters_BD_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_BD #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_BD_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_BD #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback _BD_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "\t[M_Interactions_BD_Feedback #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_BD_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Interactions_BD_Feedback #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_BD_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Promoters_BD #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_BD_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Detractors_BD #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_BD_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_BD #],",
              "    FILTER (",
              "        nps_buyer_dashboard_ratings,",
              "        nps_buyer_dashboard_ratings[date_time_only]",
              "            = MAX ( ( nps_buyer_dashboard_ratings[date_time_only] ) )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_BD_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_BD #],",
              "    FILTER (",
              "        nps_buyer_dashboard_ratings,",
              "        nps_buyer_dashboard_ratings[date_time_only]",
              "            = MAX ( ( nps_buyer_dashboard_ratings[date_time_only] ) )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback _BD_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_BD_Feedback #],",
              "    FILTER (",
              "        nps_buyer_dashboard_ratings,",
              "        nps_buyer_dashboard_ratings[date_time_only]",
              "            = MAX ( ( nps_buyer_dashboard_ratings[date_time_only] ) )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_BD_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_BD #],",
              "    FILTER (",
              "        nps_buyer_dashboard_ratings,",
              "        nps_buyer_dashboard_ratings[date_time_only]",
              "            = MAX ( nps_buyer_dashboard_ratings[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_BD_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_BD #],",
              "    FILTER (",
              "        nps_buyer_dashboard_ratings,",
              "        nps_buyer_dashboard_ratings[date_time_only]",
              "            = MAX ( nps_buyer_dashboard_ratings[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_BD_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_BD_Feedback #],",
              "    FILTER (",
              "        nps_buyer_dashboard_ratings,",
              "        nps_buyer_dashboard_ratings[date_time_only]",
              "            = MAX ( nps_buyer_dashboard_ratings[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Neutral_BD_CY_CM",
            "expression": [
              " CALCULATE (",
              "    [M_Neutral_BD #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "Rows_count_BD",
            "expression": [
              "",
              "COUNTROWS(SUMMARIZE(nps_buyer_dashboard_ratings, nps_buyer_dashboard_ratings[case_id],nps_buyer_dashboard_ratings[created_by_employee_type],nps_buyer_dashboard_ratings[date_time],nps_buyer_dashboard_ratings[email_requestor],nps_buyer_dashboard_ratings[persona],nps_buyer_dashboard_ratings[page],nps_buyer_dashboard_ratings[rating],nps_buyer_dashboard_ratings[technology],nps_buyer_dashboard_ratings[verbatim],nps_buyer_dashboard_ratings[service_line]))"
            ]
          },
          {
            "name": "smart_text_BD NPS_PDdiff",
            "expression": [
              "",
              "IF (",
              "    ( nps_buyer_dashboard_ratings[M_Cha_vs_PD_BD % (NPS)] ) < 0,",
              "    \"decrease\",",
              "    IF (",
              "        ( nps_buyer_dashboard_ratings[M_Cha_vs_PD_BD % (NPS)] ) = 0,",
              "        \"flat\",",
              "        \"increase\"",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text_BD_NPS_PMdiff",
            "expression": [
              "",
              "IF (",
              "    ( nps_buyer_dashboard_ratings[M_Cha_vs_PM_BD % (NPS)] ) < 0,",
              "    \"decrease\",",
              "    IF (",
              "        ( nps_buyer_dashboard_ratings[M_Cha_vs_PM_BD % (NPS)] ) = 0,",
              "        \"flat\",",
              "        \"increase\"",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text_latest_date_availableBD",
            "expression": [
              "",
              "FORMAT ( MAX ( nps_buyer_dashboard_ratings[date_time] ), \"mm/dd/yyyy\" )"
            ]
          },
          {
            "name": "smart_text1_BD",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), ( MAX ( doc_post_date_dim[closed_month] ) - 1 ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text10_BD",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), MAX ( doc_post_date_dim[closed_month] ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text13_BD",
            "expression": [
              "",
              "FORMAT ( TODAY (), \"MMMM\" )"
            ]
          },
          {
            "name": "smart_text_CY_CM_BD",
            "expression": [
              " format(date(max(doc_post_date_dim[closed_year]),max(doc_post_date_dim[closed_month]),1),\"MMMM\")",
              ""
            ]
          }
        ]
      },
      {
        "name": "vw_nps_technology",
        "columns": [
          {
            "name": "technology_nps",
            "dataType": "string",
            "sourceColumn": "technology_nps"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_technology = Source{[Schema=\"baseview\",Item=\"vw_nps_technology\"]}[Data]",
                "in",
                "    baseview_vw_nps_technology"
              ]
            }
          }
        ]
      },
      {
        "name": "nps_service_line",
        "columns": [
          {
            "name": "service_name",
            "dataType": "string",
            "sourceColumn": "service_name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_line = Source{[Schema=\"baseview\",Item=\"vw_nps_service_line\"]}[Data]",
                "in",
                "    baseview_vw_nps_service_line"
              ]
            }
          }
        ]
      },
      {
        "name": "nps_filter_dim",
        "columns": [
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "scorecard_region",
            "dataType": "string",
            "sourceColumn": "scorecard_region"
          },
          {
            "name": "service_center",
            "dataType": "string",
            "sourceColumn": "service_center"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_filter_dim = Source{[Schema=\"baseview\",Item=\"vw_nps_filter_dim\"]}[Data]",
                "in",
                "    baseview_vw_nps_filter_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "nps_filter_persona",
        "columns": [
          {
            "name": "persona",
            "dataType": "string",
            "sourceColumn": "persona"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_filter_persona = Source{[Schema=\"baseview\",Item=\"vw_nps_filter_persona\"]}[Data]",
                "in",
                "    baseview_vw_nps_filter_persona"
              ]
            }
          }
        ]
      },
      {
        "name": "measure_switch_dim",
        "columns": [
          {
            "name": "index",
            "dataType": "int64",
            "sourceColumn": "index"
          },
          {
            "name": "measure",
            "dataType": "string",
            "sourceColumn": "measure"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_measure_dim = Source{[Schema=\"baseview\",Item=\"vw_measure_dim\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(baseview_vw_measure_dim,{{\"index\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ]
      },
      {
        "name": "autopost_error",
        "columns": [
          {
            "name": "ERRORCODE",
            "dataType": "string",
            "sourceColumn": "ERRORCODE"
          },
          {
            "name": "ERRORDESC",
            "dataType": "string",
            "sourceColumn": "ERRORDESC"
          },
          {
            "name": "REFNR",
            "dataType": "string",
            "sourceColumn": "REFNR"
          },
          {
            "name": "acct_doc_key",
            "dataType": "string",
            "sourceColumn": "acct_doc_key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_Autopost_Error = Source{[Schema=\"baseview\",Item=\"vw_Autopost_Error\"]}[Data]",
                "in",
                "    baseview_vw_Autopost_Error"
              ]
            }
          }
        ]
      },
      {
        "name": "doc_key_dim",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "acct_doc_key",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "autopost_error[acct_doc_key]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(autopost_error,'autopost_error'[acct_doc_key])"
            }
          }
        ]
      },
      {
        "name": "ZFIX_T02_T03_combined",
        "columns": [
          {
            "name": "ABOVEFIVEDAYS",
            "dataType": "int64",
            "sourceColumn": "ABOVEFIVEDAYS"
          },
          {
            "name": "BELNR",
            "dataType": "string",
            "sourceColumn": "BELNR"
          },
          {
            "name": "COMPCODE",
            "dataType": "string",
            "sourceColumn": "COMPCODE"
          },
          {
            "name": "FISCYEAR",
            "dataType": "string",
            "sourceColumn": "FISCYEAR"
          },
          {
            "name": "REFNR",
            "dataType": "string",
            "sourceColumn": "REFNR"
          },
          {
            "name": "STATUS",
            "dataType": "string",
            "sourceColumn": "STATUS"
          },
          {
            "name": "STATUS_DESC",
            "dataType": "string",
            "sourceColumn": "STATUS_DESC"
          },
          {
            "name": "ZCLEARINGDATE_SIMP_DT",
            "dataType": "dateTime",
            "sourceColumn": "ZCLEARINGDATE_SIMP_DT"
          },
          {
            "name": "ZDATE",
            "dataType": "string",
            "sourceColumn": "ZDATE"
          },
          {
            "name": "ZDATE_SIMP_DT",
            "dataType": "dateTime",
            "sourceColumn": "ZDATE_SIMP_DT"
          },
          {
            "name": "ZITEM",
            "dataType": "string",
            "sourceColumn": "ZITEM"
          },
          {
            "name": "ZREASON",
            "dataType": "string",
            "sourceColumn": "ZREASON"
          },
          {
            "name": "ZTIME",
            "dataType": "string",
            "sourceColumn": "ZTIME"
          },
          {
            "name": "ZTIME_SIMP_TM",
            "dataType": "string",
            "sourceColumn": "ZTIME_SIMP_TM"
          },
          {
            "name": "ZUSER",
            "dataType": "string",
            "sourceColumn": "ZUSER"
          },
          {
            "name": "source_system_code",
            "dataType": "string",
            "sourceColumn": "source_system_code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    Staging_ZFIX_T02_T03_Combined = Source{[Schema=\"Staging\",Item=\"ZFIX_T02_T03_Combined\"]}[Data]",
                "in",
                "    Staging_ZFIX_T02_T03_Combined"
              ]
            }
          }
        ]
      },
      {
        "name": "purchase_org_direct_spend",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "purchase_org_direct_spend",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "invoice_star[purchase_org_direct_spend]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(invoice_star,invoice_star[purchase_org_direct_spend])"
            }
          }
        ]
      },
      {
        "name": "purchase_org_direct_spend_description",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "purchase_org_direct_spend_description",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "invoice_star[purchase_org_direct_spend_description]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(invoice_star,invoice_star[purchase_org_direct_spend_description])"
            }
          }
        ]
      },
      {
        "name": "sc_category",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "sc_category",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "invoice_star[sc_category]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(invoice_star,invoice_star[sc_category])"
            }
          }
        ]
      },
      {
        "name": "sc_ext_bus_partner",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "sc_ext_bus_partner",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "invoice_star[sc_ext_bus_partner]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(invoice_star,invoice_star[sc_ext_bus_partner])"
            }
          }
        ]
      },
      {
        "name": "cg_pm_category",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "cg_pm_category",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "invoice_star[cg_pm_category]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(invoice_star,invoice_star[cg_pm_category])"
            }
          }
        ]
      },
      {
        "name": "cg_pm_owner",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "cg_pm_owner",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "invoice_star[cg_pm_owner]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(invoice_star,invoice_star[cg_pm_owner])"
            }
          }
        ]
      },
      {
        "name": "direct_owner",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "direct_owner",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "invoice_star[direct_owner]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(invoice_star,invoice_star[direct_owner])"
            }
          }
        ]
      },
      {
        "name": "service_now_fpss_data",
        "columns": [
          {
            "name": "case_id",
            "dataType": "string",
            "sourceColumn": "case_id"
          },
          {
            "name": "created_by",
            "dataType": "string",
            "sourceColumn": "created_by"
          },
          {
            "name": "verbatim",
            "dataType": "string",
            "sourceColumn": "verbatim"
          },
          {
            "name": "user_feedback",
            "dataType": "string",
            "sourceColumn": "user_feedback"
          },
          {
            "name": "created_by_employee_type",
            "dataType": "string",
            "sourceColumn": "created_by_employee_type"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority"
          },
          {
            "name": "assignment_group",
            "dataType": "string",
            "sourceColumn": "assignment_group"
          },
          {
            "name": "application",
            "dataType": "string",
            "sourceColumn": "application"
          },
          {
            "name": "agent",
            "dataType": "string",
            "sourceColumn": "agent"
          },
          {
            "name": "state",
            "dataType": "string",
            "sourceColumn": "state"
          },
          {
            "name": "u_case_origin",
            "dataType": "string",
            "sourceColumn": "u_case_origin"
          },
          {
            "name": "request_date_time",
            "dataType": "dateTime",
            "sourceColumn": "request_date_time"
          },
          {
            "name": "request_date",
            "dataType": "dateTime",
            "sourceColumn": "request_date"
          },
          {
            "name": "request_date_key",
            "dataType": "int64",
            "sourceColumn": "request_date_key"
          },
          {
            "name": "u_case_category",
            "dataType": "string",
            "sourceColumn": "u_case_category"
          },
          {
            "name": "u_case_sub_category",
            "dataType": "string",
            "sourceColumn": "u_case_sub_category"
          },
          {
            "name": "opened_at_date_time",
            "dataType": "dateTime",
            "sourceColumn": "opened_at_date_time"
          },
          {
            "name": "sla_due_date_time",
            "dataType": "dateTime",
            "sourceColumn": "sla_due_date_time"
          },
          {
            "name": "closed_date_time",
            "dataType": "dateTime",
            "sourceColumn": "closed_date_time"
          },
          {
            "name": "closed_date",
            "dataType": "dateTime",
            "sourceColumn": "closed_date"
          },
          {
            "name": "closed_date_key",
            "dataType": "int64",
            "sourceColumn": "closed_date_key"
          },
          {
            "name": "u_resolution_code",
            "dataType": "string",
            "sourceColumn": "u_resolution_code"
          },
          {
            "name": "short_description",
            "dataType": "string",
            "sourceColumn": "short_description"
          },
          {
            "name": "caller_country",
            "dataType": "string",
            "sourceColumn": "caller_country"
          },
          {
            "name": "u_request_category",
            "dataType": "string",
            "sourceColumn": "u_request_category"
          },
          {
            "name": "request_sub_category",
            "dataType": "string",
            "sourceColumn": "request_sub_category"
          },
          {
            "name": "crc_country",
            "dataType": "string",
            "sourceColumn": "crc_country"
          },
          {
            "name": "crc_region",
            "dataType": "string",
            "sourceColumn": "crc_region"
          },
          {
            "name": "from_email",
            "dataType": "string",
            "sourceColumn": "from_email"
          },
          {
            "name": "request_type",
            "dataType": "string",
            "sourceColumn": "request_type"
          },
          {
            "name": "caller_department",
            "dataType": "int64",
            "sourceColumn": "caller_department"
          },
          {
            "name": "caller_u_organization",
            "dataType": "int64",
            "sourceColumn": "caller_u_organization"
          },
          {
            "name": "email_requestor",
            "dataType": "string",
            "sourceColumn": "email_requestor"
          },
          {
            "name": "RATING_SERVICENOW",
            "dataType": "string",
            "sourceColumn": "rating_servicenow"
          },
          {
            "name": "service_area",
            "dataType": "string",
            "sourceColumn": "service_area"
          },
          {
            "name": "assignment_group_region",
            "dataType": "string",
            "sourceColumn": "assignment_group_region"
          },
          {
            "name": "team",
            "dataType": "string",
            "sourceColumn": "team"
          },
          {
            "name": "persona",
            "dataType": "string",
            "sourceColumn": "persona"
          },
          {
            "type": "calculated",
            "name": "request_date_time_hour",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "HOUR(service_now_fpss_data[request_date_time])"
          },
          {
            "type": "calculated",
            "name": "Previous_workday",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "VAR latest_day=(service_now_fpss_data[request_date])",
              "VAR WD1=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-1)",
              "VAR WD2=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-2)",
              "VAR WD3=LOOKUPVALUE(clear_date_dim[working_day],clear_date_dim[DateKey],latest_day-3)",
              "VAR R1D=latest_day-1",
              "VAR R2D=latest_day-2",
              "VAR R3D=latest_day-3",
              "RETURN",
              "IF(WD1=1,R1D,IF(WD2=1,R2D,IF(WD3=1,R3D)))",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "technology",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "\"Service Now Tickets\""
          },
          {
            "type": "calculated",
            "name": "GMT+2",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(service_now_fpss_data[request_date_time]= BLANK() , BLANK() , HOUR(service_now_fpss_data[request_date_time] + 2/24))"
          },
          {
            "type": "calculated",
            "name": "GMT+8",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(service_now_fpss_data[request_date_time]= BLANK() , BLANK() , HOUR(service_now_fpss_data[request_date_time] + 8/24))"
          },
          {
            "type": "calculated",
            "name": "GMT-6",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF(service_now_fpss_data[request_date_time]= BLANK() , BLANK() , HOUR(service_now_fpss_data[request_date_time] - 6/24))"
          },
          {
            "name": "service_center",
            "dataType": "string",
            "sourceColumn": "service_center"
          },
          {
            "name": "group_service_center",
            "dataType": "string",
            "sourceColumn": "group_service_center"
          },
          {
            "name": "agent_region",
            "dataType": "string",
            "sourceColumn": "agent_region"
          },
          {
            "name": "agent_email",
            "dataType": "string",
            "sourceColumn": "agent_email"
          },
          {
            "name": "service_line",
            "dataType": "string",
            "sourceColumn": "service_line"
          }
        ],
        "partitions": [
          {
            "name": "Jun20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20200601 and [closed_date_key] <= 20200630)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "May20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20200501 and [closed_date_key] <= 20200531)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Apr20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20200401 and [closed_date_key] <= 20200431)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Mar20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20200301 and [closed_date_key] <= 20200331)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Feb20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20200201 and [closed_date_key] <= 20200229)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Jan20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20200101 and [closed_date_key] <= 20200131)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Dec19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20191201 and [closed_date_key] <= 20191231)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Nov19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20191101 and [closed_date_key] <= 20191130)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Oct19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 2019101 and [closed_date_key] <= 20191031)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Sep19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190901 and [closed_date_key] <= 20190930)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Aug19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190801 and [closed_date_key] <= 20190831)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Jul19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190701 and [closed_date_key] <= 20190731)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Jun19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190601 and [closed_date_key] <= 20190630)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "May19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190501 and [closed_date_key] <= 20190531)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Apr19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190401 and [closed_date_key] <= 20190430)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Mar19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190301 and [closed_date_key] <= 20190331)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Feb19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190201 and [closed_date_key] <= 20190228)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Jan19",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20190101 and [closed_date_key] <= 20190131)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Dec18",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20181201 and [closed_date_key] <= 20181231)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Nov18",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20181101 and [closed_date_key] <= 20181130)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Oct18",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20181001 and [closed_date_key] <= 20181031)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Sep18",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20180901 and [closed_date_key] <= 20180930)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Aug18",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20180801 and [closed_date_key] <= 20180831)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Jul18",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20180701 and [closed_date_key] <= 20180731)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Jun18",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each[closed_date_key] >= 20180601 and [closed_date_key] <= 20180630)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Aug20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20200801 and [closed_date_key] <= 20200831)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Sep20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20200901 and [closed_date_key] <= 20200930)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Oct20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20201001 and [closed_date_key] <= 20201031)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Nov20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20201101 and [closed_date_key] <= 20201130)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Dec20",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20201201 and [closed_date_key] <= 20201231)",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          },
          {
            "name": "Jul20",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20200701 and [closed_date_key] <= 20200731)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_nps_service_now_data = Source{[Schema=\"baseview\",Item=\"vw_nps_service_now_data\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_nps_service_now_data, each [closed_date_key] >= 20200701 and [closed_date_key] <= 20200731)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "M_Interactions_Servicenow #",
            "expression": "distinctcount('service_now_fpss_data'[case_id])",
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Servicenow_Feedback #",
            "expression": "[M_Interactions_Servicenow #] ('service_now_fpss_data'[RATING_SERVICENOW]<>\"NO FEEDBACK\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Servicenow_Feedback %",
            "expression": "DIVIDE([M_Interactions_Servicenow_Feedback #],[M_Interactions_Servicenow #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Promoters_Servicenow #",
            "expression": "[M_Interactions_Servicenow #]('service_now_fpss_data'[RATING_SERVICENOW]=\"HAPPY\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Detractors_Servicenow #",
            "expression": "[M_Interactions_Servicenow #] ('service_now_fpss_data'[RATING_SERVICENOW]=\"UNHAPPY\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Servicenow_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Servicenow #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Servicenow_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Interactions_Servicenow #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Servicenow_LY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Servicenow #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]-1",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_Interactions_Servicenow#",
            "expression": "TOTALMTD([M_Interactions_Servicenow #],DATESMTD('service_now_fpss_data'[request_date]))",
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Servicenow_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Servicenow #],",
              "    FILTER (",
              "        service_now_fpss_data,",
              "        'service_now_fpss_data'[request_date]",
              "            = MAX ( 'service_now_fpss_data'[request_date] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Interactions_Servicenow_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Servicenow #],",
              "    FILTER (",
              "        service_now_fpss_data,",
              "        'service_now_fpss_data'[request_date]",
              "            = MAX ( service_now_fpss_data[Previous_workday] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Interactions #",
            "expression": "[M_Interactions_Servicenow #]+[M_Interactions_Pypestream #]+[M_Interactions_BD #]+[M_Interactions_RME #]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Interactions_Feedback #",
            "expression": "[M_Interactions_Servicenow_Feedback #]+[M_Interactions_Pypestream_Feedback #]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Interactions_Feedback %",
            "expression": "([M_Interactions_Servicenow_Feedback %]+[M_Interactions_Pypestream_Feedback %])/2",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_Promoters #",
            "expression": "[M_Promoters_Servicenow #]+[M_Promoters_Pyperstream #]+[M_Promoters_BD #]+[M_Promoters_RME #]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Detractors #",
            "expression": "[M_Detractors_Servicenow #]+[M_Detractors_Pypestream #]+[M_Detractors_BD #]+[M_Detractors_RME #]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Interactions CY_PM",
            "expression": " [M_Interactions_Servicenow_CY_PM #] + [M_Interactions_Pypestream_CY_PM #] + [M_Interactions_BD_CY_PM #] +[M_Interactions_RME_CY_PM #]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Interactions_LY_CM",
            "expression": "[M_Interactions_Servicenow_LY_CM #]+[M_Interactions_Pypestream_LY_CM #]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_MTD_Interactions #",
            "expression": "[M_MTD_Interactions_Pypestream#] + [M_MTD_Interactions_Servicenow#] + [M_MTD_Interactions_RME#] + [M_MTD_Interactions_BD#]",
            "formatString": "#,0"
          },
          {
            "name": "M_Total_NPS %",
            "expression": "(([M_Promoters_BD #]+[M_Promoters_Pyperstream #]+[M_Promoters_RME #]+[M_Promoters_Servicenow #]) - ([M_Detractors_BD #]+[M_Detractors_Pypestream #]+[M_Detractors_RME #]+[M_Detractors_Servicenow #])) / ([M_Interactions_BD_Feedback #]+[M_Interactions_Pypestream_Feedback #]+[M_Interactions_RME_Feedback #]+[M_Interactions_Servicenow_Feedback #]) ",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_Interactions_Today",
            "expression": " [M_Interactions_Servicenow_Today #] + [M_Interactions_Pypestream_Today #] + [M_Interactions_BD_Today #] + [M_Interactions_RME_Today #]",
            "formatString": "#,0"
          },
          {
            "name": "M_SLA_in #",
            "expression": [
              " ",
              "SUMX(service_now_fpss_data,",
              "\tIF(service_now_fpss_data[closed_date_time]>service_now_fpss_data[sla_due_date_time],1,0)",
              "\t)"
            ]
          },
          {
            "name": "M_SLA_in %",
            "expression": " 1- [M_SLA_in #]/[M_Total_Interactions #]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Avg handling time_Servicenow #",
            "expression": [
              " ",
              "\tCALCULATE(",
              "\t\tAVERAGEX(service_now_fpss_data,",
              "\t\t\tDATEDIFF( service_now_fpss_data[request_date_time], service_now_fpss_data[closed_date_time],DAY)",
              "\t\t\t),service_now_fpss_data[request_date_time]<>BLANK(), service_now_fpss_data[closed_date_time]<>BLANK(), service_now_fpss_data[agent] <> BLANK()",
              "\t\t)"
            ],
            "formatString": "0.0"
          },
          {
            "name": "Avg_handling_time_Servicenow_CY_CM",
            "expression": [
              " ",
              "CALCULATE([Avg handling time_Servicenow #],",
              "\t FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0"
          },
          {
            "name": "Avg_handling_time_Servicenow_CY_PM",
            "expression": [
              "",
              "CALCULATE( [Avg handling time_Servicenow #], ",
              "FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0"
          },
          {
            "name": "M_SNOW_NPS %",
            "expression": "DIVIDE(([M_Promoters_Servicenow #]-[M_Detractors_Servicenow #]),[M_Interactions_Servicenow_Feedback #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha VS PM (Handeling_time_snow)",
            "expression": " [Avg_handling_time_Servicenow_CY_CM] - [Avg_handling_time_Servicenow_CY_PM]",
            "formatString": "0.0"
          },
          {
            "name": "M_NPS_SNOW_Today %",
            "expression": " CALCULATE( [M_SNOW_NPS %], FILTER(service_now_fpss_data, service_now_fpss_data[request_date] = MAX(service_now_fpss_data[request_date])))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_NPS_Today %",
            "expression": "(([M_Promoters_BD_Today #]+[M_Promoters_Pypestream_Today #]+[M_Promoters_RME_Today #]+[M_Promoters_Servicenow_Today #]) - ([M_Detractors_BD_Today #]+[M_Detractors_Pypestream_Today #]+[M_Detractors_RME_Today #]+[M_Detractors_Servicenow_Today #])) / ([M_Feedback _BD_Today #]+[M_Feedback_Pypestream_Today #]+[M_Feedback_RME_Today #]+[M_Feedback_Servicenow_Today #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_SNOW_Yday %",
            "expression": [
              "",
              "CALCULATE([M_SNOW_NPS %],",
              "\tFILTER(service_now_fpss_data, 'service_now_fpss_data'[request_date]=MAX(service_now_fpss_data[Previous_workday])",
              " \t))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_NPS_Yday %",
            "expression": " (([M_Promoters_BD_Yday #]+[M_Promoters_Pypestream_Yday #]+[M_Promoters_RME_Yday #]+[M_Promoters_Servicenow_Yday #]) - ([M_Detractors_BD_Yday #]+[M_Detractors_RME_Yday #]+[M_Detractors_Pypestream_Yday #]+[M_Detractors_Servicenow_Yday #])) / ([M_Feedback_BD_Yday #]+[M_Feedback_Pypestream_Yday #]+[M_Feedback_RME_Yday #]+[M_Feedback_Servicenow_Yday #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_SNOW_CY_CM %",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_SNOW_NPS %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_NPS_SNOW_CY_PM %",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_SNOW_NPS %],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_vs_PD_SNOW % (NPS)",
            "expression": " [M_NPS_SNOW_Today %] - [M_NPS_SNOW_Yday %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_NPS CY_PM %",
            "expression": " (([M_Promoters_Pypestream_CY_PM #]+[M_Promoters_BD_CY_PM #]+[M_Promoters_RME_CY_PM #]+[M_Promoters_SNOW_CY_PM #]) - ([M_Detractors_BD_CY_PM #]+[M_Detractors_Pypestream_CY_PM #]+[M_Detractors_RME_CY_PM #]+[M_Detractors_SNOW_CY_PM #])) / ([M_Feedback_BD_CY_PM #]+[M_Feedback_Pypestream_CY_PM #]+[M_Feedback_RME_CY_PM #]+[M_Feedback_SNOW_CY_PM #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_NPS CY_CM %",
            "expression": " (([M_Promoters_BD_CY_CM #]+[M_Promoters_Pypestream_CY_CM #]+[M_Promoters_RME_CY_CM #]+[M_Promoters_SNOW_CY_CM #]) - ([M_Detractors_BD_CY_CM #]+[M_Detractors_Pypestream_CY_CM #]+[M_Detractors_RME_CY_CM #]+[M_Detractors_SNOW_CY_CM #])) / ([M_Feedback _BD_CY_CM #]+[M_Feedback_Pypestream_CY_CM #]+[M_Feedback_SNOW_CY_CM #]+[M_Feedback_RME_CY_CM #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_NPS_Today",
            "expression": " ([M_NPS_BD_Today %] + [M_NPS_Pypestream_Today %] + [M_NPS_RME_Today %] + [M_NPS_SNOW_Today %])/4",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "M_MTD_NPS_SNOW %",
            "expression": "TOTALMTD([M_SNOW_NPS %],DATESMTD('service_now_fpss_data'[request_date]))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Total_MTD_NPS %",
            "expression": " (([M_MTD_Promoters_BD#]+[M_MTD_Promoters_Pypestream#]+[M_MTD_Promoters_RME#]+[M_MTD_Promoters_Servicenow#]) - ([M_MTD_Detractors_BD#]+[M_MTD_Detractors_Pypestream#]+[M_MTD_Feedback_RME#]+[M_MTD_Feedback_Servicenow#])) / ([M_Interactions_BD_Feedback #]+[M_Interactions_RME_Feedback #]+[M_Interactions_Servicenow_Feedback #]+[M_Interactions_Pypestream_Feedback #])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Neutral_Servicenow #",
            "expression": "[M_Interactions_Servicenow #]('service_now_fpss_data'[RATING_SERVICENOW]=\" NEUTRAL\")"
          },
          {
            "name": "M_Total_Neutral #",
            "expression": "[M_Neutral_Servicenow #]+[M_Neutral_Pyperstream #]+[M_Neutral_BD #]+[M_Neutral_RME #]"
          },
          {
            "name": "M_Cha_vs_PM_SNOW % (NPS)",
            "expression": " [M_NPS_SNOW_CY_CM %] - [M_NPS_SNOW_CY_PM %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Promoters_SNOW_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_Servicenow #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Total_Interactions_Yday #",
            "expression": "[M_Interactions_Servicenow_Yday #]+[M_Interactions_Pypestream_Yday #] + [M_Interactions_BD_Yday #] + [M_Interactions_RME_Yday #]",
            "formatString": "#,0"
          },
          {
            "name": "M_Cha_vs_PM_SNOW (interactions) #",
            "expression": "  [M_Interactions_Servicenow_CY_CM #] - [M_Interactions_Servicenow_CY_PM #]"
          },
          {
            "name": "M_MTD_Promoters_Servicenow#",
            "expression": "TOTALMTD([M_Promoters_Servicenow #],DATESMTD('service_now_fpss_data'[request_date]))"
          },
          {
            "name": "M_MTD_Feedback_Servicenow#",
            "expression": "TOTALMTD([M_Interactions_Servicenow_Feedback #],DATESMTD('service_now_fpss_data'[request_date]))"
          },
          {
            "name": "M_MTD_Detractors_Servicenow#",
            "expression": "TOTALMTD([M_Detractors_Servicenow #],DATESMTD('service_now_fpss_data'[request_date]))"
          },
          {
            "name": "M_Detractors_SNOW_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_Servicenow #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_SNOW_CY_CM #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Servicenow_Feedback #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_SNOW_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Interactions_Servicenow_Feedback #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_SNOW_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Promoters_Servicenow #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_SNOW_CY_PM #",
            "expression": [
              "",
              "CALCULATE (",
              "   [M_Detractors_Servicenow #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_Servicenow_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_Servicenow #],",
              "    FILTER (",
              "        service_now_fpss_data,",
              "        'service_now_fpss_data'[request_date]",
              "            = MAX ( 'service_now_fpss_data'[request_date] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_Servicenow_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_Servicenow #],",
              "    FILTER (",
              "        service_now_fpss_data,",
              "        'service_now_fpss_data'[request_date]",
              "            = MAX ( 'service_now_fpss_data'[request_date] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_Servicenow_Today #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Servicenow_Feedback #],",
              "    FILTER (",
              "        service_now_fpss_data,",
              "        'service_now_fpss_data'[request_date]",
              "            = MAX ( 'service_now_fpss_data'[request_date] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Promoters_Servicenow_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Promoters_Servicenow #],",
              "    FILTER (",
              "        service_now_fpss_data,",
              "        'service_now_fpss_data'[request_date]",
              "            = MAX ( service_now_fpss_data[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Detractors_Servicenow_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Detractors_Servicenow #],",
              "    FILTER (",
              "        service_now_fpss_data,",
              "        'service_now_fpss_data'[request_date]",
              "            = MAX ( service_now_fpss_data[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Feedback_Servicenow_Yday #",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_Interactions_Servicenow_Feedback #],",
              "    FILTER (",
              "        service_now_fpss_data,",
              "        'service_now_fpss_data'[request_date]",
              "            = MAX ( service_now_fpss_data[Previous_workday] )",
              "    )",
              ")"
            ]
          },
          {
            "name": "M_Cha_vs_PM_Avg_Handling_Time_SN",
            "expression": " [Avg_handling_time_Servicenow_CY_CM]- [Avg_handling_time_Servicenow_CY_PM]",
            "formatString": "0.0"
          },
          {
            "name": "M_Cha_vs_PM_SN (interactions) #",
            "expression": " [M_Interactions_Servicenow_CY_CM #] -[M_Interactions_Servicenow_CY_PM #]"
          },
          {
            "name": "M_in_SLA_%_CY_CM",
            "expression": [
              " CALCULATE([M_SLA_in %],",
              "\t FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_in_SLA_%_CY_PM",
            "expression": [
              " CALCULATE( [M_SLA_in %], ",
              "FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Interactions_Servicenow_Feedback_%_CY_CM",
            "expression": [
              " CALCULATE([M_Interactions_Servicenow_Feedback %],",
              "\t FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Interactions_Servicenow_Feedback_%_CY_PM",
            "expression": [
              " ",
              "CALCULATE( [M_Interactions_Servicenow_Feedback %], ",
              "FILTER (",
              "        doc_post_date_dim,",
              "        (",
              "            doc_post_date_dim[calendar_year]",
              "                = IF (",
              "                    ( doc_post_date_dim[closed_month] = 1 ),",
              "                    doc_post_date_dim[closed_year] - 1,",
              "                    doc_post_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    doc_post_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( doc_post_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            doc_post_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Out_of_SLA #",
            "expression": " sumx(service_now_fpss_data,if(service_now_fpss_data[closed_date_time]<service_now_fpss_data[sla_due_date_time],1,0))"
          },
          {
            "name": "M_Cha_vs_PM_Feedback_%",
            "expression": " [M_Interactions_Servicenow_Feedback_%_CY_CM]- [M_Interactions_Servicenow_Feedback_%_CY_PM]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_vs_PM_in_SLA_%",
            "expression": " [M_in_SLA_%_CY_CM]-[M_in_SLA_%_CY_PM] ",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_Detractors_SN",
            "expression": " [M_Detractors_SNOW_CY_CM #]- [M_Detractors_SNOW_CY_PM #]"
          },
          {
            "name": "M_Cha_vs_PD_Total_NPS %",
            "expression": " [M_Total_NPS_Today %] - [M_Total_NPS_Yday %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Cha_vs_PM_Total_NPS %",
            "expression": " [M_Total_NPS CY_CM %]-[M_Total_NPS CY_PM %]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Neutral_SN_CY_CM",
            "expression": [
              " CALCULATE (",
              "    [M_Neutral_Servicenow #],",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year]",
              "            && doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text_CY_CM",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), MAX ( doc_post_date_dim[closed_month] ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text_latest_date_available_SN",
            "expression": [
              "",
              "FORMAT ( MAX ( service_now_fpss_data[request_date] ), \"mm/dd/yyyy\" )"
            ]
          },
          {
            "name": "smart_text_SN NPS_PDdiff",
            "expression": [
              "",
              "IF (",
              "    ( service_now_fpss_data[M_Cha_vs_PD_SNOW % (NPS)] ) < 0,",
              "    \"decrease\",",
              "    IF (",
              "        ( service_now_fpss_data[M_Cha_vs_PD_SNOW % (NPS)] ) = 0,",
              "        \"flat\",",
              "        \"increase\"",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text_SN_NPS_PMdiff",
            "expression": [
              "",
              "IF (",
              "    ( service_now_fpss_data[M_Cha_vs_PM_SNOW % (NPS)] ) < 0,",
              "    \"decrease\",",
              "    IF (",
              "        ( service_now_fpss_data[M_Cha_vs_PM_SNOW % (NPS)] ) = 0,",
              "        \"flat\",",
              "        \"increase\"",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text_totalNPS_PDdiff",
            "expression": [
              "",
              "IF (",
              "    ( [M_Cha_vs_PD_Total_NPS %] ) < 0,",
              "    \"decrease\",",
              "    IF ( ( [M_Cha_vs_PD_Total_NPS %] ) = 0, \"flat\", \"increase\" )",
              ")"
            ]
          },
          {
            "name": "smart_text_totalNPS_PMdiff",
            "expression": [
              "",
              "IF (",
              "    ( service_now_fpss_data[M_Cha_vs_PM_Total_NPS %] ) < 0,",
              "    \"decrease\",",
              "    IF (",
              "        ( service_now_fpss_data[M_Cha_vs_PM_Total_NPS %] ) = 0,",
              "        \"flat\",",
              "        \"increase\"",
              "    )",
              ")"
            ]
          },
          {
            "name": "smart_text1_SN",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), ( MAX ( doc_post_date_dim[closed_month] ) - 1 ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text10_SN",
            "expression": [
              "",
              "FORMAT (",
              "    DATE ( MAX ( doc_post_date_dim[closed_year] ), MAX ( doc_post_date_dim[closed_month] ), 1 ),",
              "    \"MMMM\"",
              ")"
            ]
          },
          {
            "name": "smart_text13_SN",
            "expression": " FORMAT(TODAY(),\"MMMM\")"
          },
          {
            "name": "Total Detractors CY_CM",
            "expression": [
              "",
              "[M_Detractors_BD_CY_CM #] + [M_Detractors_Pypestream_CY_CM #] + [M_Detractors_RME_CY_CM #] + [M_Detractors_RME_CY_CM #]"
            ]
          },
          {
            "name": "Rows_count_SN",
            "expression": [
              "",
              "COUNTROWS(SUMMARIZE(service_now_fpss_data, service_now_fpss_data[case_id] , service_now_fpss_data[email_requestor], service_now_fpss_data[created_by_employee_type] , service_now_fpss_data[priority], service_now_fpss_data[assignment_group] , service_now_fpss_data[assignment_group_region], service_now_fpss_data[application], service_now_fpss_data[u_case_origin] , service_now_fpss_data[u_case_category] , service_now_fpss_data[u_case_sub_category] , service_now_fpss_data[created_by], service_now_fpss_data[from_email], service_now_fpss_data[crc_region], service_now_fpss_data[request_date_time], service_now_fpss_data[request_type] , service_now_fpss_data[request_sub_category] , service_now_fpss_data[u_request_category], service_now_fpss_data[crc_country], service_now_fpss_data[caller_country], service_now_fpss_data[short_description], service_now_fpss_data[u_resolution_code], service_now_fpss_data[sla_due_date_time], service_now_fpss_data[opened_at_date_time], service_now_fpss_data[agent], service_now_fpss_data[closed_date_time], service_now_fpss_data[persona], service_now_fpss_data[RATING_SERVICENOW], service_now_fpss_data[service_area], service_now_fpss_data[state],service_now_fpss_data[team],service_now_fpss_data[technology],service_now_fpss_data[user_feedback],service_now_fpss_data[verbatim],service_now_fpss_data[request_date_key]))"
            ]
          },
          {
            "name": "M_Total_MTD_NPS_1 %",
            "expression": [
              "",
              "CALCULATE (",
              "    ( ( [M_Promoters_BD #] + [M_Promoters_Pyperstream #] + [M_Promoters_RME #] + [M_Promoters_Servicenow #] ) - ( [M_Detractors_BD #] + [M_Detractors_Pypestream #] + [M_Detractors_RME #] + [M_Detractors_Servicenow #] ) ) / ( [M_Interactions_BD_Feedback #] + [M_Interactions_RME_Feedback #] + [M_Interactions_Servicenow_Feedback #] + [M_Interactions_Pypestream_Feedback #] ),",
              "    FILTER (",
              "        doc_post_date_dim,",
              "        ( doc_post_date_dim[calendar_year] = doc_post_date_dim[closed_year] )",
              "            && ( doc_post_date_dim[calendar_month] = doc_post_date_dim[closed_month]+1 )",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          }
        ]
      },
      {
        "name": "overdues",
        "columns": [
          {
            "name": "action_owner_name",
            "dataType": "string",
            "sourceColumn": "action_owner_name"
          },
          {
            "name": "baseline_date",
            "dataType": "string",
            "sourceColumn": "baseline_date"
          },
          {
            "name": "cal_year",
            "dataType": "string",
            "sourceColumn": "cal_year"
          },
          {
            "name": "company_code",
            "dataType": "string",
            "sourceColumn": "company_code"
          },
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "coupa_amount_in_lc",
            "dataType": "double",
            "sourceColumn": "coupa_amount_in_lc"
          },
          {
            "name": "coupa_current_approver",
            "dataType": "string",
            "sourceColumn": "coupa_current_approver"
          },
          {
            "name": "coupa_invoice_num",
            "dataType": "string",
            "sourceColumn": "coupa_invoice_num"
          },
          {
            "name": "currency",
            "dataType": "string",
            "sourceColumn": "currency"
          },
          {
            "name": "date_and_time_entered_sap",
            "dataType": "string",
            "sourceColumn": "date_and_time_entered_sap"
          },
          {
            "name": "days_in_status_cluster",
            "dataType": "string",
            "sourceColumn": "days_in_status_cluster"
          },
          {
            "name": "days_until_due_date",
            "dataType": "string",
            "sourceColumn": "days_until_due_date"
          },
          {
            "name": "direct_owners",
            "dataType": "string",
            "sourceColumn": "direct_owners"
          },
          {
            "name": "documentnumber",
            "dataType": "string",
            "sourceColumn": "documentnumber"
          },
          {
            "name": "due_date",
            "dataType": "dateTime",
            "sourceColumn": "due_date"
          },
          {
            "name": "europe_coupa_owner",
            "dataType": "string",
            "sourceColumn": "europe_coupa_owner"
          },
          {
            "name": "fiscal_year",
            "dataType": "string",
            "sourceColumn": "fiscal_year"
          },
          {
            "name": "former_owner",
            "dataType": "string",
            "sourceColumn": "former_owner"
          },
          {
            "name": "fss_contact_name",
            "dataType": "string",
            "sourceColumn": "fss_contact_name"
          },
          {
            "name": "fss_level_3",
            "dataType": "string",
            "sourceColumn": "fss_level_3"
          },
          {
            "name": "gbs_center",
            "dataType": "string",
            "sourceColumn": "gbs_center"
          },
          {
            "name": "invoice_amount_in_usd_cluster",
            "dataType": "string",
            "sourceColumn": "invoice_amount_in_usd_cluster"
          },
          {
            "name": "invoice_amt_usd",
            "dataType": "string",
            "sourceColumn": "invoice_amt_usd"
          },
          {
            "name": "invoice_reference_number",
            "dataType": "string",
            "sourceColumn": "invoice_reference_number"
          },
          {
            "name": "invoice_type",
            "dataType": "string",
            "sourceColumn": "invoice_type"
          },
          {
            "name": "lease_or_building_name",
            "dataType": "string",
            "sourceColumn": "lease_or_building_name"
          },
          {
            "name": "ledger_number",
            "dataType": "string",
            "sourceColumn": "ledger_number"
          },
          {
            "name": "material_number",
            "dataType": "string",
            "sourceColumn": "material_number"
          },
          {
            "name": "media_clusters",
            "dataType": "string",
            "sourceColumn": "media_clusters"
          },
          {
            "name": "mm_fi",
            "dataType": "string",
            "sourceColumn": "mm_fi"
          },
          {
            "name": "net_overdues",
            "dataType": "string",
            "sourceColumn": "net_overdues"
          },
          {
            "name": "payment_block",
            "dataType": "string",
            "sourceColumn": "payment_block"
          },
          {
            "name": "payment_block_owner_new",
            "dataType": "string",
            "sourceColumn": "payment_block_owner_new"
          },
          {
            "name": "payment_method",
            "dataType": "string",
            "sourceColumn": "payment_method"
          },
          {
            "name": "payment_method_supplement",
            "dataType": "string",
            "sourceColumn": "payment_method_supplement"
          },
          {
            "name": "payment_status",
            "dataType": "string",
            "sourceColumn": "payment_status"
          },
          {
            "name": "payment_terms",
            "dataType": "string",
            "sourceColumn": "payment_terms"
          },
          {
            "name": "plant_gos",
            "dataType": "int64",
            "sourceColumn": "plant_gos"
          },
          {
            "name": "plant_name",
            "dataType": "string",
            "sourceColumn": "plant_name"
          },
          {
            "name": "posting_date",
            "dataType": "string",
            "sourceColumn": "posting_date"
          },
          {
            "name": "posting_date_key",
            "dataType": "string",
            "sourceColumn": "posting_date_key"
          },
          {
            "name": "purchase_order_number",
            "dataType": "string",
            "sourceColumn": "purchase_order_number"
          },
          {
            "name": "purchasing_group",
            "dataType": "string",
            "sourceColumn": "purchasing_group"
          },
          {
            "name": "purchasing_level_1",
            "dataType": "string",
            "sourceColumn": "purchasing_level_1"
          },
          {
            "name": "purchasing_level_2",
            "dataType": "string",
            "sourceColumn": "purchasing_level_2"
          },
          {
            "name": "purchasing_level_3",
            "dataType": "string",
            "sourceColumn": "purchasing_level_3"
          },
          {
            "name": "purchasing_level_4",
            "dataType": "string",
            "sourceColumn": "purchasing_level_4"
          },
          {
            "name": "purchasing_organisation",
            "dataType": "string",
            "sourceColumn": "purchasing_organisation"
          },
          {
            "name": "purchasing_owner_name",
            "dataType": "string",
            "sourceColumn": "purchasing_owner_name"
          },
          {
            "name": "real_estate_country",
            "dataType": "string",
            "sourceColumn": "real_estate_country"
          },
          {
            "name": "real_estate_region",
            "dataType": "string",
            "sourceColumn": "real_estate_region"
          },
          {
            "name": "reporing_date_key",
            "dataType": "string",
            "sourceColumn": "reporing_date_key"
          },
          {
            "name": "reporting_date",
            "dataType": "dateTime",
            "sourceColumn": "reporting_date",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "requisitioner_approver_name",
            "dataType": "string",
            "sourceColumn": "requisitioner_approver_name"
          },
          {
            "name": "sap_plant_name",
            "dataType": "string",
            "sourceColumn": "sap_plant_name"
          },
          {
            "name": "site",
            "dataType": "string",
            "sourceColumn": "site"
          },
          {
            "name": "status",
            "dataType": "string",
            "sourceColumn": "status"
          },
          {
            "name": "status_description",
            "dataType": "string",
            "sourceColumn": "status_description"
          },
          {
            "name": "status_group",
            "dataType": "string",
            "sourceColumn": "status_group"
          },
          {
            "name": "status_owner_new",
            "dataType": "string",
            "sourceColumn": "status_owner_new"
          },
          {
            "name": "status_owner_pulse",
            "dataType": "string",
            "sourceColumn": "status_owner_pulse"
          },
          {
            "name": "substatus",
            "dataType": "string",
            "sourceColumn": "substatus"
          },
          {
            "name": "uniquekey",
            "dataType": "string",
            "sourceColumn": "uniquekey"
          },
          {
            "name": "vendor_name",
            "dataType": "string",
            "sourceColumn": "vendor_name"
          },
          {
            "name": "vendor_number",
            "dataType": "string",
            "sourceColumn": "vendor_number"
          },
          {
            "name": "we_indirect_payment_block_owner_new",
            "dataType": "string",
            "sourceColumn": "we_indirect_payment_block_owner_new"
          },
          {
            "name": "we_indirect_status_owner_new",
            "dataType": "string",
            "sourceColumn": "we_indirect_status_owner_new"
          },
          {
            "name": "amer_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "amer_sup_care_owner"
          },
          {
            "name": "asia_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "asia_sup_care_owner"
          },
          {
            "name": "cg_pm_category",
            "dataType": "string",
            "sourceColumn": "cg_pm_category"
          },
          {
            "name": "cg_pm_owner",
            "dataType": "string",
            "sourceColumn": "cg_pm_owner"
          },
          {
            "name": "debit_balance",
            "dataType": "int64",
            "sourceColumn": "debit_balance"
          },
          {
            "name": "eecar_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "eecar_sup_care_owner"
          },
          {
            "name": "imea_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "imea_sup_care_owner"
          },
          {
            "name": "site_map_cluster",
            "dataType": "string",
            "sourceColumn": "site_map_cluster"
          },
          {
            "name": "site_map_cluster_lvl_2",
            "dataType": "string",
            "sourceColumn": "site_map_cluster_lvl_2"
          },
          {
            "name": "material_group_id",
            "dataType": "string",
            "sourceColumn": "material_group_id"
          },
          {
            "name": "month",
            "dataType": "int64",
            "sourceColumn": "month"
          },
          {
            "name": "site_map_site",
            "dataType": "string",
            "sourceColumn": "site_map_site"
          },
          {
            "name": "overdue_older_than_180_days",
            "dataType": "string",
            "sourceColumn": "overdue_older_than_180_days"
          },
          {
            "name": "overdue_older_than_45_days",
            "dataType": "string",
            "sourceColumn": "overdue_older_than_45_days"
          },
          {
            "name": "overdue_older_than_90_days",
            "dataType": "string",
            "sourceColumn": "overdue_older_than_90_days"
          },
          {
            "name": "purchase_org_direct_spend_description",
            "dataType": "string",
            "sourceColumn": "purchase_org_direct_spend_description"
          },
          {
            "name": "generation_date",
            "dataType": "dateTime",
            "sourceColumn": "generation_date"
          },
          {
            "name": "m_scorecard_region",
            "dataType": "string",
            "sourceColumn": "m_scorecard_region"
          },
          {
            "name": "team",
            "dataType": "string",
            "sourceColumn": "team"
          },
          {
            "name": "vendor_category_scope",
            "dataType": "string",
            "sourceColumn": "vendor_category_scope"
          },
          {
            "name": "subregion",
            "dataType": "string",
            "sourceColumn": "subregion"
          },
          {
            "name": "scan_text",
            "dataType": "string",
            "sourceColumn": "scan_text"
          },
          {
            "name": "posted_unposted",
            "dataType": "string",
            "sourceColumn": "posted_unposted"
          },
          {
            "name": "workflow_non_workflow",
            "dataType": "string",
            "sourceColumn": "workflow_non_workflow"
          },
          {
            "name": "workflow_reason_code_description",
            "dataType": "int64",
            "sourceColumn": "workflow_reason_code_description"
          },
          {
            "name": "closed_le",
            "dataType": "string",
            "sourceColumn": "closed_le"
          },
          {
            "name": "credit_as_overdue",
            "dataType": "string",
            "sourceColumn": "credit_as_overdue"
          },
          {
            "name": "gross_overdues",
            "dataType": "string",
            "sourceColumn": "gross_overdues"
          },
          {
            "name": "cadivi",
            "dataType": "string",
            "sourceColumn": "cadivi"
          },
          {
            "name": "local_nordics",
            "dataType": "string",
            "sourceColumn": "local_nordics"
          },
          {
            "name": "status_9_10_and_11",
            "dataType": "string",
            "sourceColumn": "status_9_10_and_11"
          },
          {
            "name": "status_20_and_970",
            "dataType": "string",
            "sourceColumn": "status_20_and_970"
          },
          {
            "name": "x_day_dd",
            "dataType": "string",
            "sourceColumn": "x_day_dd"
          },
          {
            "name": "status_65",
            "dataType": "string",
            "sourceColumn": "status_65"
          },
          {
            "name": "rasc",
            "dataType": "string",
            "sourceColumn": "rasc"
          },
          {
            "name": "no_baseline_date",
            "dataType": "string",
            "sourceColumn": "no_baseline_date"
          },
          {
            "name": "no_payment_terms",
            "dataType": "string",
            "sourceColumn": "no_payment_terms"
          },
          {
            "name": "potential_debit_balance",
            "dataType": "string",
            "sourceColumn": "potential_debit_balance"
          },
          {
            "name": "status_owner",
            "dataType": "string",
            "sourceColumn": "status_owner"
          },
          {
            "name": "calculation_40",
            "dataType": "string",
            "sourceColumn": "calculation_40"
          },
          {
            "name": "priority",
            "dataType": "string",
            "sourceColumn": "priority"
          },
          {
            "name": "block_price",
            "dataType": "string",
            "sourceColumn": "block_price"
          },
          {
            "name": "block_quantity",
            "dataType": "string",
            "sourceColumn": "block_quantity"
          },
          {
            "name": "daysdd",
            "dataType": "string",
            "sourceColumn": "daysdd"
          },
          {
            "name": "direct_debit_indicator",
            "dataType": "string",
            "sourceColumn": "direct_debit_indicator"
          },
          {
            "name": "document_date",
            "dataType": "string",
            "sourceColumn": "document_date"
          },
          {
            "name": "fss_level_1",
            "dataType": "string",
            "sourceColumn": "fss_level_1"
          },
          {
            "name": "fss_level_2",
            "dataType": "string",
            "sourceColumn": "fss_level_2"
          },
          {
            "name": "fss_level_4",
            "dataType": "string",
            "sourceColumn": "fss_level_4"
          },
          {
            "name": "fss_level_5",
            "dataType": "string",
            "sourceColumn": "fss_level_5"
          },
          {
            "name": "fss_level_6",
            "dataType": "string",
            "sourceColumn": "fss_level_6"
          },
          {
            "name": "fss_level_7",
            "dataType": "string",
            "sourceColumn": "fss_level_7"
          },
          {
            "name": "fss_level_8",
            "dataType": "string",
            "sourceColumn": "fss_level_8"
          },
          {
            "name": "fss_masterdata_key",
            "dataType": "string",
            "sourceColumn": "fss_masterdata_key"
          },
          {
            "name": "fss_owner_name",
            "dataType": "string",
            "sourceColumn": "fss_owner_name"
          },
          {
            "name": "man_block_reasn",
            "dataType": "int64",
            "sourceColumn": "man_block_reasn"
          },
          {
            "name": "mm_document_number",
            "dataType": "string",
            "sourceColumn": "mm_document_number"
          },
          {
            "name": "payment_terms_days",
            "dataType": "string",
            "sourceColumn": "payment_terms_days"
          },
          {
            "name": "purchasing_masterdata_key",
            "dataType": "string",
            "sourceColumn": "purchasing_masterdata_key"
          },
          {
            "name": "scf_block_date",
            "dataType": "string",
            "sourceColumn": "scf_block_date"
          },
          {
            "name": "scf_flag",
            "dataType": "string",
            "sourceColumn": "scf_flag"
          },
          {
            "name": "scf_sent_date",
            "dataType": "string",
            "sourceColumn": "scf_sent_date"
          },
          {
            "name": "scf_unblocked",
            "dataType": "string",
            "sourceColumn": "scf_unblocked"
          },
          {
            "name": "temporary_action_owner_name",
            "dataType": "string",
            "sourceColumn": "temporary_action_owner_name"
          },
          {
            "name": "vendor_country",
            "dataType": "string",
            "sourceColumn": "vendor_country"
          },
          {
            "name": "working_days_in_sap",
            "dataType": "string",
            "sourceColumn": "working_days_in_sap"
          },
          {
            "name": "working_days_in_status",
            "dataType": "string",
            "sourceColumn": "working_days_in_status"
          },
          {
            "name": "overdue_neardue",
            "dataType": "string",
            "sourceColumn": "overdue_neardue"
          },
          {
            "name": "days_until_due_date_cluster",
            "dataType": "string",
            "sourceColumn": "days_until_due_date_cluster"
          },
          {
            "name": "document_currency",
            "dataType": "string",
            "sourceColumn": "document_currency"
          },
          {
            "name": "document_type",
            "dataType": "string",
            "sourceColumn": "document_type"
          },
          {
            "name": "invoice_amount_in_document_currency",
            "dataType": "string",
            "sourceColumn": "invoice_amount_in_document_currency"
          },
          {
            "name": "overdue_not_overdue",
            "dataType": "string",
            "sourceColumn": "overdue_not_overdue"
          },
          {
            "name": "region",
            "dataType": "string",
            "sourceColumn": "region"
          },
          {
            "name": "country",
            "dataType": "string",
            "sourceColumn": "country"
          },
          {
            "name": "aging_cluster",
            "dataType": "string",
            "sourceColumn": "aging_cluster"
          },
          {
            "name": "la_status_140",
            "dataType": "string",
            "sourceColumn": "la_status_140"
          },
          {
            "name": "invoice_source",
            "dataType": "string",
            "sourceColumn": "invoice_source"
          },
          {
            "name": "account_type_name",
            "dataType": "string",
            "sourceColumn": "account_type_name"
          },
          {
            "name": "approval_group",
            "dataType": "string",
            "sourceColumn": "approval_group"
          },
          {
            "name": "channel",
            "dataType": "string",
            "sourceColumn": "channel"
          },
          {
            "name": "coupa_scope",
            "dataType": "string",
            "sourceColumn": "coupa_scope"
          },
          {
            "name": "discount_amount",
            "dataType": "double",
            "sourceColumn": "discount_amount"
          },
          {
            "name": "discount_due_date",
            "dataType": "dateTime",
            "sourceColumn": "discount_due_date"
          },
          {
            "name": "discount_percent",
            "dataType": "double",
            "sourceColumn": "discount_percent"
          },
          {
            "name": "doc_date",
            "dataType": "dateTime",
            "sourceColumn": "doc_date"
          },
          {
            "name": "document_number",
            "dataType": "string",
            "sourceColumn": "document_number"
          },
          {
            "name": "inv_status",
            "dataType": "string",
            "sourceColumn": "inv_status"
          },
          {
            "name": "invoice_doc_num",
            "dataType": "string",
            "sourceColumn": "invoice_doc_num"
          },
          {
            "name": "invoice_from_supplier_name",
            "dataType": "string",
            "sourceColumn": "invoice_from_supplier_name"
          },
          {
            "name": "payment_date",
            "dataType": "dateTime",
            "sourceColumn": "payment_date"
          },
          {
            "name": "plant_code",
            "dataType": "string",
            "sourceColumn": "plant_code"
          },
          {
            "name": "po_requested_by_shortname",
            "dataType": "string",
            "sourceColumn": "po_requested_by_shortname"
          },
          {
            "name": "purchase_org_direct_spend",
            "dataType": "string",
            "sourceColumn": "purchase_org_direct_spend"
          },
          {
            "name": "sc_category",
            "dataType": "string",
            "sourceColumn": "sc_category"
          },
          {
            "name": "source_system_code",
            "dataType": "string",
            "sourceColumn": "source_system_code"
          },
          {
            "name": "tax_juridisction_code",
            "dataType": "string",
            "sourceColumn": "tax_juridisction_code"
          },
          {
            "name": "coupa_amount_in_usd",
            "dataType": "double",
            "sourceColumn": "coupa_amount_in_usd"
          },
          {
            "name": "vertex_tax_code",
            "dataType": "string",
            "sourceColumn": "vertex_tax_code"
          },
          {
            "name": "m_region",
            "dataType": "string",
            "sourceColumn": "m_region"
          },
          {
            "name": "m_subregion",
            "dataType": "string",
            "sourceColumn": "m_subregion"
          },
          {
            "name": "group",
            "dataType": "string",
            "sourceColumn": "group"
          },
          {
            "name": "sc_ext_bus_partner",
            "dataType": "string",
            "sourceColumn": "sc_ext_bus_partner"
          },
          {
            "name": "site_map_plant_ho",
            "dataType": "string",
            "sourceColumn": "site_map_plant_ho"
          },
          {
            "type": "calculated",
            "name": "acct_doc_key",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(overdues[source_system_code] ,CONCATENATE(\" \",CONCATENATE(overdues[company_code] ,CONCATENATE(\" \",CONCATENATE(overdues[documentnumber], CONCATENATE(\" \",overdues[fiscal_year]))))))"
          },
          {
            "type": "calculated",
            "name": "invoice_amt_usd_int",
            "dataType": "double",
            "isDataTypeInferred": false,
            "expression": [
              "",
              "IF (",
              "    overdues[invoice_amt_usd] = \"NA\", BLANK (),",
              "    IF(overdues[invoice_amt_usd] = BLANK (), BLANK(), CONVERT( overdues[invoice_amt_usd],DOUBLE )",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "scf_enroled",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " IF(overdues[payment_method] = \"P\" && (overdues[payment_method_supplement] = \"CI\" || overdues[payment_method_supplement] = \"DB\" || overdues[payment_method_supplement] = \"JP\"), \"Enrolled\" , \"Not-Enrolled\" )"
          },
          {
            "type": "calculated",
            "name": "incomplete_days",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " IF(",
              "overdues[reporing_date_key] IN {\"20180914\" , \"20180917\" , \"20180918\" , \"20180919\" , \"20181015\" , \"20181105\" , \"20181112\" , \"20181113\" , \"20181114\" , \"20181115\" , \"20181116\" , \"20181120\" , \"20181203\" , \"20181207\" , \"20190103\" , \"20190116\" , \"20190117\" , \"20190121\" , \"20190123\" , \"20190125\" , \"20190128\" , \"20190215\" , \"20190218\" , \"20190228\" , \"20190312\" , \"20190415\" , \"20190416\" , \"20190422\" , \"20190513\" , \"20190624\" , \"20190709\" , \"20190710\" , \"20190711\" , \"20190812\" , \"20190813\" , \"20190814\" , \"20190816\" , \"20190819\" , \"20190905\" , \"20190920\" , \"20191009\" , \"20191022\" , \"20191104\" , \"20191111\" , \"20191115\" , \"20191125\" , \"20191203\" , \"20191209\" , \"20191223\" , \"20191224\" , \"20191231\" , \"20200103\" , \"20200108\" , \"20200115\" , \"20200130\" , \"20200211\" , \"20200227\" , \"20200305\" , \"20200310\" , \"20200318\" , \"20200410\" , \"20200619\" , \"20200706\" , \"20200707\" , \"20200708\"} ,1 , 0)"
            ]
          },
          {
            "name": "eu_sup_care_owner",
            "dataType": "string",
            "sourceColumn": "eu_sup_care_owner"
          },
          {
            "name": "batch_name",
            "dataType": "string",
            "sourceColumn": "batch_name"
          },
          {
            "name": "last_date",
            "dataType": "int64",
            "sourceColumn": "last_date"
          },
          {
            "name": "excluded",
            "dataType": "string",
            "sourceColumn": "excluded"
          },
          {
            "name": "region_lkp_key",
            "dataType": "string",
            "sourceColumn": "region_lkp_key"
          },
          {
            "name": "spend_pool_lkp_code",
            "dataType": "string",
            "sourceColumn": "spend_pool_lkp_code"
          },
          {
            "name": "business_unit_lkp_code",
            "dataType": "string",
            "sourceColumn": "business_unit_lkp_code"
          }
        ],
        "partitions": [
          {
            "name": "Jul20",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 7, 1) and [reporting_date] <= #date(2020, 7, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 7, 1) and [reporting_date] <= #date(2020, 7, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Jun20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 6, 1) and [reporting_date] <= #date(2020, 6, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 6, 1) and [reporting_date] <= #date(2020, 6, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "May20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 5, 1) and [reporting_date] <= #date(2020, 5, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 5, 1) and [reporting_date] <= #date(2020, 5, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Apr20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 4, 1) and [reporting_date] <= #date(2020, 4, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 4, 1) and [reporting_date] <= #date(2020, 4, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Mar20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 3, 1) and [reporting_date] <= #date(2020, 3, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 3, 1) and [reporting_date] <= #date(2020, 3, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Feb20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 2, 1) and [reporting_date] <= #date(2020, 2, 29))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 2, 1) and [reporting_date] <= #date(2020, 2, 29))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Jan20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 1, 1) and [reporting_date] <= #date(2020, 1, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 1, 1) and [reporting_date] <= #date(2020, 1, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Dec19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 12, 1) and [reporting_date] <= #date(2019, 12, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 12, 1) and [reporting_date] <= #date(2019, 12, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Nov19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 11, 1) and [reporting_date] <= #date(2019, 11, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 11, 1) and [reporting_date] <= #date(2019, 11, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Oct19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 10, 1) and [reporting_date] <= #date(2019, 10, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 10, 1) and [reporting_date] <= #date(2019, 10, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Sep19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 9, 1) and [reporting_date] <= #date(2019, 9, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 9, 1) and [reporting_date] <= #date(2019, 9, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Aug19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 8, 1) and [reporting_date] <= #date(2019, 8, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 8, 1) and [reporting_date] <= #date(2019, 8, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Jul19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 7, 1) and [reporting_date] <= #date(2019, 7, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 7, 1) and [reporting_date] <= #date(2019, 7, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Jun19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 6, 1) and [reporting_date] <= #date(2019, 6, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 6, 1) and [reporting_date] <= #date(2019, 6, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "May19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 5, 1) and [reporting_date] <= #date(2019, 5, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 5, 1) and [reporting_date] <= #date(2019, 5, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Apr19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 4, 1) and [reporting_date] <= #date(2019, 4, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 4, 1) and [reporting_date] <= #date(2019, 4, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Mar19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 3, 1) and [reporting_date] <= #date(2019, 3, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 3, 1) and [reporting_date] <= #date(2019, 3, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Feb19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 2, 1) and [reporting_date] <= #date(2019, 2, 28))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 2, 1) and [reporting_date] <= #date(2019, 2, 28))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Jan19",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 1, 1) and [reporting_date] <= #date(2019, 1, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2019, 1, 1) and [reporting_date] <= #date(2019, 1, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Dec18",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 12, 1) and [reporting_date] <= #date(2018, 12, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 12, 1) and [reporting_date] <= #date(2018, 12, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Nov18",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 11, 1) and [reporting_date] <= #date(2018, 11, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 11, 1) and [reporting_date] <= #date(2018, 11, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Oct18",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 10, 1) and [reporting_date] <= #date(2018, 10, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 10, 1) and [reporting_date] <= #date(2018, 10, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Sep18",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 9, 1) and [reporting_date] <= #date(2018, 9, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 9, 1) and [reporting_date] <= #date(2018, 9, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Aug18",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 8, 1) and [reporting_date] <= #date(2018, 8, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 8, 1) and [reporting_date] <= #date(2018, 8, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Jul18",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 7, 1) and [reporting_date] <= #date(2018, 7, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 7, 1) and [reporting_date] <= #date(2018, 7, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Jun18",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 6, 1) and [reporting_date] <= #date(2018, 6, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2018, 6, 1) and [reporting_date] <= #date(2018, 6, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Aug20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 8, 1) and [reporting_date] <= #date(2020, 8, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 8, 1) and [reporting_date] <= #date(2020, 8, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Sep20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 9, 1) and [reporting_date] <= #date(2020, 9, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 9, 1) and [reporting_date] <= #date(2020, 9, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Oct20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 10, 1) and [reporting_date] <= #date(2020, 10, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 10, 1) and [reporting_date] <= #date(2020, 10, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Nov20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 11, 1) and [reporting_date] <= #date(2020, 11, 30))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 11, 1) and [reporting_date] <= #date(2020, 11, 30))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Dec20",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 12, 1) and [reporting_date] <= #date(2020, 12, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/Source2Pay_ASDW\",",
                  "    baseview_vw_overdues_global = Source{[Schema=\"baseview\",Item=\"vw_overdues_global\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(baseview_vw_overdues_global, each [reporting_date] >= #date(2020, 12, 1) and [reporting_date] <= #date(2020, 12, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "M_count_items_#",
            "expression": [
              " ",
              "COUNT(overdues[uniquekey])"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_sum_items_$",
            "expression": [
              "",
              "CALCULATE ( SUM ( overdues[invoice_amt_usd_int] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_today_neardue_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_sum_neardue_items_$],",
              "    FILTER (",
              "        ALL ( overdues[reporting_date] ),",
              "        overdues[reporting_date] = MAX ( overdues[reporting_date] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_today_neardue_#",
            "expression": [
              " ",
              "CALCULATE (",
              "    [M_count_neardue_items_#],",
              "    FILTER (",
              "        ALL ( overdues[reporting_date] ),",
              "        overdues[reporting_date] = MAX ( overdues[reporting_date] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_sum_overdue_items_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_sum_items_$],",
              "    FILTER ( ALL ( overdues[net_overdues] ), overdues[net_overdues] = \"overdue\" )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_count_overdue_items_#",
            "expression": [
              " ",
              "CALCULATE (",
              "    [M_count_items_#],",
              "    FILTER (",
              "        ALL ( overdues[net_overdues] ),",
              "        overdues[net_overdues] = \"overdue\"",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_sum_neardue_items_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_sum_items_$],",
              "    FILTER ( ALL ( overdues[net_overdues] ), overdues[net_overdues] = \"Neardue\" ))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_count_neardue_items_#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_count_items_#],",
              "    FILTER ( ALL ( overdues[net_overdues] ), overdues[net_overdues] = \"Neardue\" )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_today_neardue_#_%",
            "expression": [
              "",
              "[M_today_neardue_#] / [M_rolling_3m_CY_MTD_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_today_neardue_$_%",
            "expression": [
              " ",
              "[M_today_neardue_$]/[M_rolling_3m_CY_MTD_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_today_overdue_#",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_count_overdue_items_#],",
              "    FILTER (",
              "        ALL ( overdues[reporting_date] ),",
              "        overdues[reporting_date] = MAX ( overdues[reporting_date] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_today_overdue_$",
            "expression": [
              "",
              "CALCULATE (",
              "    [M_sum_overdue_items_$],",
              "    FILTER (",
              "        ALL ( overdues[reporting_date] ),",
              "        overdues[reporting_date] = MAX ( overdues[reporting_date] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_today_overdue_#_%",
            "expression": [
              " ",
              "[M_today_overdue_#]/[M_rolling_3m_CY_MTD_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_today_overdue_$_%",
            "expression": [
              " ",
              "[M_today_overdue_$]/[M_rolling_3m_CY_MTD_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_PD_neardue_#",
            "expression": [
              "",
              "VAR latest_day =",
              "    MAX ( overdues[reporting_date] )",
              "VAR WD1 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 1",
              "    )",
              "VAR WD2 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 2",
              "    )",
              "VAR WD3 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 3",
              "    )",
              "VAR R1D = latest_day - 1",
              "VAR R2D = latest_day - 2",
              "VAR R3D = latest_day - 3",
              "VAR PRV_DAY =",
              "    IF ( WD1 = 1, R1D, IF ( WD2 = 1, R2D, IF ( WD3 = 1, R3D ) ) )",
              "RETURN",
              "    CALCULATE ( [M_count_neardue_items_#], overdues[reporting_date] = PRV_DAY )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_PD_neardue_$",
            "expression": [
              "",
              "VAR latest_day =",
              "    MAX ( overdues[reporting_date] )",
              "VAR WD1 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 1",
              "    )",
              "VAR WD2 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 2",
              "    )",
              "VAR WD3 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 3",
              "    )",
              "VAR R1D = latest_day - 1",
              "VAR R2D = latest_day - 2",
              "VAR R3D = latest_day - 3",
              "VAR PRV_DAY =",
              "    IF ( WD1 = 1, R1D, IF ( WD2 = 1, R2D, IF ( WD3 = 1, R3D ) ) )",
              "RETURN",
              "    CALCULATE ( [M_sum_neardue_items_$], overdues[reporting_date] = PRV_DAY )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_PD_neardue_#_%",
            "expression": [
              " ",
              "[M_PD_neardue_#]/[M_rolling_3m_CY_MTD_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_PD_neardue_$_%",
            "expression": [
              " ",
              "[M_PD_neardue_$]/[M_rolling_3m_CY_MTD_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_PD_overdue_#",
            "expression": [
              "",
              "VAR latest_day =",
              "    MAX ( overdues[reporting_date] )",
              "VAR WD1 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 1",
              "    )",
              "VAR WD2 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 2",
              "    )",
              "VAR WD3 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 3",
              "    )",
              "VAR R1D = latest_day - 1",
              "VAR R2D = latest_day - 2",
              "VAR R3D = latest_day - 3",
              "VAR PRV_DAY =",
              "    IF ( WD1 = 1, R1D, IF ( WD2 = 1, R2D, IF ( WD3 = 1, R3D ) ) )",
              "RETURN",
              "    CALCULATE ( [M_count_overdue_items_#], overdues[reporting_date] = PRV_DAY )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_PD_overdue_$",
            "expression": [
              "",
              "VAR latest_day =",
              "    MAX ( overdues[reporting_date] )",
              "VAR WD1 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 1",
              "    )",
              "VAR WD2 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 2",
              "    )",
              "VAR WD3 =",
              "    LOOKUPVALUE (",
              "        clear_date_dim[working_day],",
              "        clear_date_dim[DateKey], latest_day - 3",
              "    )",
              "VAR R1D = latest_day - 1",
              "VAR R2D = latest_day - 2",
              "VAR R3D = latest_day - 3",
              "VAR PRV_DAY =",
              "    IF ( WD1 = 1, R1D, IF ( WD2 = 1, R2D, IF ( WD3 = 1, R3D ) ) )",
              "RETURN",
              "    CALCULATE ( [M_sum_overdue_items_$], overdues[reporting_date] = PRV_DAY )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_PD_overdue_#_%",
            "expression": [
              " ",
              "[M_PD_overdue_#]/[M_rolling_3m_CY_MTD_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_PD_overdue_$_%",
            "expression": [
              " ",
              "[M_PD_overdue_$]/[M_rolling_3m_CY_MTD_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_MTD_neardue_#",
            "expression": [
              "",
              "TOTALMTD ( [M_avg_neardue_#], DATESMTD ( overdues[reporting_date] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_neardue_$",
            "expression": [
              "",
              "TOTALMTD ( [M_sum_neardue_items_$], DATESMTD ( overdues[reporting_date] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_neardue_#_%",
            "expression": [
              " ",
              "[M_MTD_neardue_#]/[M_rolling_3m_CY_MTD_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_MTD_neardue_$_%",
            "expression": [
              " ",
              "[M_MTD_neardue_$]/[M_rolling_3m_CY_MTD_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_MTD_overdue_#",
            "expression": [
              "",
              "TOTALMTD ( [M_avg_overdue_#], DATESMTD ( overdues[reporting_date] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_overdue_$",
            "expression": [
              "",
              "TOTALMTD ( [M_sum_overdue_items_$], DATESMTD ( overdues[reporting_date] ) )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_MTD_overdue_#_%",
            "expression": [
              " ",
              "[M_MTD_overdue_#]/[M_rolling_3m_CY_MTD_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_MTD_overdue_$_%",
            "expression": [
              " ",
              "[M_MTD_overdue_$]/[M_rolling_3m_CY_MTD_$]"
            ],
            "formatString": "#,0.0%;-#,0.0%;#,0.0%"
          },
          {
            "name": "M_Monthly_neardue_CY_CM_#",
            "expression": [
              " ",
              "calculate (",
              "    [M_avg_neardue_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_neardue_CY_CM_$",
            "expression": [
              " ",
              "calculate (",
              "    [M_sum_neardue_items_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_neardue_CY_CM_#_%",
            "expression": [
              " ",
              "[M_Monthly_neardue_CY_CM_#]/[M_rolling_3m_CY_CM_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_neardue_CY_CM_$_%",
            "expression": [
              " ",
              "[M_Monthly_neardue_CY_CM_$]/[M_rolling_3m_CY_CM_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_overdue_CY_CM_#",
            "expression": [
              " ",
              "calculate (",
              "   [M_avg_overdue_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_overdue_CY_CM_$",
            "expression": [
              " ",
              "calculate (",
              "    [M_sum_overdue_items_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        ( clear_date_dim[calendar_year] = clear_date_dim[closed_year] )",
              "            && ( clear_date_dim[calendar_month] = clear_date_dim[closed_month] )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_overdue_CY_CM_#_%",
            "expression": [
              " ",
              "[M_Monthly_overdue_CY_CM_#]/[M_rolling_3m_CY_CM_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_overdue_CY_CM_$_%",
            "expression": [
              " ",
              "[M_Monthly_overdue_CY_CM_$]/[M_rolling_3m_CY_CM_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_neardue_CY_PM_#",
            "expression": [
              " CALCULATE (",
              "    [M_avg_neardue_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_neardue_CY_PM_$",
            "expression": [
              " CALCULATE (",
              "    [M_sum_neardue_items_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_neardue_CY_PM_#_%",
            "expression": [
              " ",
              "[M_Monthly_neardue_CY_PM_#]/[M_rolling_3m_CY_PM_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_neardue_CY_PM_$_%",
            "expression": [
              " ",
              "[M_Monthly_neardue_CY_PM_$]/[M_rolling_3m_CY_PM_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_overdue_CY_PM_#",
            "expression": [
              " CALCULATE (",
              "    [M_avg_overdue_#],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_overdue_CY_PM_$",
            "expression": [
              " CALCULATE (",
              "    [M_sum_overdue_items_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_overdue_CY_PM_#_%",
            "expression": [
              " ",
              "[M_Monthly_overdue_CY_PM_#]/[M_rolling_3m_cy_pm_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_overdue_CY_PM_$_%",
            "expression": [
              " ",
              "[M_Monthly_overdue_CY_PM_$]/[M_rolling_3m_cy_pm_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_neardue_PY_CM_#",
            "expression": [
              " ",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        CALCULATE (",
              "             [M_avg_neardue_#] ,",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[calendar_year]= MAX ( clear_date_dim[closed_year] ) - 1",
              "                    && clear_date_dim[calendar_month] = MAX (clear_date_dim[closed_month] )",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_neardue_PY_CM_$",
            "expression": [
              " ",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        CALCULATE (",
              "             [M_avg_neardue_$] ,",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[calendar_year]= MAX ( clear_date_dim[closed_year] ) - 1",
              "                    && clear_date_dim[calendar_month] = MAX (clear_date_dim[closed_month] )",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_neardue_PY_CM_#_%",
            "expression": [
              " ",
              "[M_Monthly_neardue_PY_CM_#]/[M_rolling_3m_PY_CM_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_neardue_PY_CM_$_%",
            "expression": [
              " ",
              "[M_Monthly_neardue_PY_CM_$]/[M_rolling_3m_PY_CM_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_overdue_PY_CM_#",
            "expression": [
              " ",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        CALCULATE (",
              "             [M_avg_overdue_#] ,",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[calendar_year]= MAX ( clear_date_dim[closed_year] ) - 1",
              "                    && clear_date_dim[calendar_month] = MAX (clear_date_dim[closed_month] )",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_overdue_PY_CM_#_%",
            "expression": [
              " ",
              "[M_Monthly_overdue_PY_CM_#]/[M_rolling_3m_PY_CM_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_overdue_PY_CM_$_%",
            "expression": [
              " ",
              "[M_Monthly_overdue_PY_CM_$]/[M_rolling_3m_PY_CM_$]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_avg_neardue_#",
            "expression": " [M_count_neardue_items_#]/DISTINCTCOUNT(overdues[reporting_date])",
            "formatString": "#,0"
          },
          {
            "name": "M_avg_overdue_#",
            "expression": " [M_count_overdue_items_#]/DISTINCTCOUNT(overdues[reporting_date])",
            "formatString": "#,0"
          },
          {
            "name": "M_Monthly_overdue_PY_CM$",
            "expression": [
              " ",
              "CALCULATE (",
              "    [M_sum_overdue_items_$],",
              "    FILTER (",
              "        clear_date_dim,",
              "        (",
              "            clear_date_dim[calendar_year]",
              "                = IF (",
              "                    ( clear_date_dim[closed_month] = 1 ),",
              "                    clear_date_dim[closed_year] - 1,",
              "                    clear_date_dim[closed_year]",
              "                )",
              "                && (",
              "                    clear_date_dim[calendar_month]",
              "                        = IF (",
              "                            ( clear_date_dim[closed_month] = 1 ),",
              "                            12,",
              "                            clear_date_dim[closed_month] - 1",
              "                        )",
              "                )",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_neardue_#_%",
            "expression": " [M_avg_neardue_#]/invoice_star[M_rolling_3m_#]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_overdue_#_%",
            "expression": " [M_avg_overdue_#]/invoice_star[M_rolling_3m_#]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_avg_neardue_$",
            "expression": " [M_sum_neardue_items_$]/DISTINCTCOUNT(overdues[reporting_date])",
            "formatString": "#,0"
          },
          {
            "name": "M_avg_overdue_$",
            "expression": " [M_sum_overdue_items_$]/DISTINCTCOUNT(overdues[reporting_date])",
            "formatString": "#,0"
          },
          {
            "name": "M_neardue_$_%",
            "expression": " [M_avg_neardue_$]/invoice_star[M_rolling_3m_$]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_overdue_$_%",
            "expression": " [M_avg_overdue_$]/invoice_star[M_rolling_3m_$]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Monthly_overdue_PY_CM_$",
            "expression": [
              " ",
              "VAR reportYTDMonth =",
              "    MONTH ( TODAY () ) - 1",
              "RETURN",
              "    IF (",
              "        MAX ( clear_date_dim[closed_month] ) <= reportYTDMonth,",
              "        CALCULATE (",
              "             [M_avg_overdue_$] ,",
              "            FILTER (",
              "                 clear_date_dim,",
              "                 clear_date_dim[calendar_year]= MAX ( clear_date_dim[closed_year] ) - 1",
              "                    && clear_date_dim[calendar_month] = MAX (clear_date_dim[closed_month] )",
              "            )",
              "        )",
              "    )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Last_closed_date",
            "expression": [
              "",
              "FORMAT (",
              "    CALCULATE ( MAX ( [reporting_date] ), FILTER ( overdues, [last_date] = 1 ) ),",
              "    \"MM/DD/YYYY\"",
              ")"
            ]
          },
          {
            "name": "M_closedday_neardue_#",
            "expression": [
              " ",
              "CALCULATE (",
              "[M_count_neardue_items_#],",
              "FILTER (overdues,[last_date]=1))"
            ]
          },
          {
            "name": "M_closedday_neardue_%",
            "expression": [
              "",
              "[M_closedday_neardue_#] / [M_rolling_3m_CY_MTD_#]"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_closedday_overdue_#",
            "expression": [
              " ",
              "CALCULATE (",
              "[M_count_overdue_items_#],",
              "FILTER (overdues,[last_date]=1))"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_closedday_overdue_%",
            "expression": " [M_closedday_overdue_#]/[M_rolling_3m_CY_MTD_#]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_diff_closedday_neardue_vs_PD_#",
            "expression": "[M_closedday_neardue_#] - [M_PD_closed_neardue_#]",
            "formatString": "#,0"
          },
          {
            "name": "M_diff_closedday_neardue_vs_PD_#_%",
            "expression": " [M_closedday_neardue_%]-[M_PD_closed_neardue_#_%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_diff_closedday_overdue_vs_PD_#",
            "expression": " [M_closedday_overdue_#]-[M_PD_closed_overdue_#]",
            "formatString": "#,0"
          },
          {
            "name": "M_diff_closedday_overdue_vs_PD_#_%",
            "expression": " [M_closedday_overdue_%]-[M_PD_closed_overdue_#_%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_PD_closed_neardue_#",
            "expression": [
              " ",
              "VAR latest_day =",
              "calculate(max([reporting_date]),filter (overdues,[last_date]=1))",
              "VAR WD1 =",
              "LOOKUPVALUE (",
              "clear_date_dim[working_day],",
              "clear_date_dim[DateKey], latest_day - 1",
              ")",
              "VAR WD2 =",
              "LOOKUPVALUE (",
              "clear_date_dim[working_day],",
              "clear_date_dim[DateKey], latest_day - 2",
              ")",
              "VAR WD3 =",
              "LOOKUPVALUE (",
              "clear_date_dim[working_day],",
              "clear_date_dim[DateKey], latest_day - 3",
              ")",
              "VAR R1D = latest_day - 1",
              "VAR R2D = latest_day - 2",
              "VAR R3D = latest_day - 3",
              "VAR PRV_DAY =",
              "IF ( WD1 = 1, R1D, IF ( WD2 = 1, R2D, IF ( WD3 = 1, R3D ) ) )",
              "RETURN",
              "CALCULATE ( [M_count_neardue_items_#], overdues[reporting_date] = PRV_DAY )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_PD_closed_neardue_#_%",
            "expression": " [M_PD_closed_neardue_#]/[M_rolling_3m_CY_MTD_#]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_PD_closed_overdue_#",
            "expression": [
              " ",
              "VAR latest_day =",
              "calculate(max([reporting_date]),filter (overdues,[last_date]=1))",
              "VAR WD1 =",
              "LOOKUPVALUE (",
              "clear_date_dim[working_day],",
              "clear_date_dim[DateKey], latest_day - 1",
              ")",
              "VAR WD2 =",
              "LOOKUPVALUE (",
              "clear_date_dim[working_day],",
              "clear_date_dim[DateKey], latest_day - 2",
              ")",
              "VAR WD3 =",
              "LOOKUPVALUE (",
              "clear_date_dim[working_day],",
              "clear_date_dim[DateKey], latest_day - 3",
              ")",
              "VAR R1D = latest_day - 1",
              "VAR R2D = latest_day - 2",
              "VAR R3D = latest_day - 3",
              "VAR PRV_DAY =",
              "IF ( WD1 = 1, R1D, IF ( WD2 = 1, R2D, IF ( WD3 = 1, R3D ) ) )",
              "RETURN",
              "CALCULATE ( [M_count_overdue_items_#], overdues[reporting_date] = PRV_DAY )"
            ],
            "formatString": "#,0"
          },
          {
            "name": "M_PD_closed_overdue_#_%",
            "expression": " [M_PD_closed_overdue_#]/[M_rolling_3m_CY_MTD_#]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Diff_neardue_CY_MTD_vs_CY_CM_#",
            "expression": " [M_MTD_neardue_#]-[M_Monthly_neardue_CY_CM_#]",
            "formatString": "#,0"
          },
          {
            "name": "M_Diff_neardue_CY_MTD_vs_CY_CM_#_%",
            "expression": " [M_MTD_neardue_#_%]-[M_Monthly_neardue_CY_CM_#_%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Diff_neardue_CY_MTD_vs_CY_CM_$_%",
            "expression": " [M_MTD_neardue_$_%]-[M_Monthly_neardue_CY_CM_$_%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Diff_overdue_CY_MTD_vs_CY_CM_#",
            "expression": " [M_MTD_overdue_#]-[M_Monthly_overdue_CY_CM_#]",
            "formatString": "#,0"
          },
          {
            "name": "M_Diff_overdue_CY_MTD_vs_CY_CM_$",
            "expression": " [M_MTD_overdue_$]-[M_Monthly_overdue_CY_CM_$]",
            "formatString": "#,0"
          },
          {
            "name": "M_Diff_Today_neardue_PD_#",
            "expression": " format(( [M_today_neardue_#]-[M_PD_neardue_#]),\"+0;-0\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Diff_Today_neardue_vs_PD_#_%",
            "expression": " format(( [M_today_neardue_#]-[M_PD_neardue_#]),\"+0;-0\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Diff_Today_overdue_PD_#",
            "expression": " format(( [M_today_overdue_#]-[M_PD_overdue_#]),\"+0;-0\")",
            "formatString": "#,0"
          },
          {
            "name": "M_Diff_Today_overdue_vs_PD_#_%",
            "expression": "  [M_today_overdue_#_%]-[M_PD_overdue_#_%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "M_Diff_neardue_CY_MTD_vs_CY_CM_$",
            "expression": " [M_MTD_neardue_$]-[M_Monthly_neardue_CY_CM_$]",
            "formatString": "#,0"
          },
          {
            "name": "M_Diff_overdue_CY_MTD_vs_CY_CM_#_%",
            "expression": " [M_MTD_overdue_#_%]-[M_Monthly_overdue_CY_CM_#_%]"
          }
        ]
      },
      {
        "name": "nps_filter_agents_dim",
        "columns": [
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "scorecard_region_agent",
            "dataType": "string",
            "sourceColumn": "scorecard_region_agent"
          },
          {
            "name": "service_center_agent",
            "dataType": "string",
            "sourceColumn": "service_center_agent"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_nps_filter_agents_dim = Source{[Schema=\"baseview\",Item=\"vw_nps_filter_agents_dim\"]}[Data]",
                "in",
                "    baseview_vw_nps_filter_agents_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "people_dim_agents",
        "columns": [
          {
            "name": "tnumber",
            "dataType": "string",
            "sourceColumn": "tnumber"
          },
          {
            "name": "manager_tnumber",
            "dataType": "string",
            "sourceColumn": "manager_tnumber"
          },
          {
            "name": "first_name",
            "dataType": "string",
            "sourceColumn": "first_name"
          },
          {
            "name": "last_name",
            "dataType": "string",
            "sourceColumn": "last_name"
          },
          {
            "name": "common_name",
            "dataType": "string",
            "sourceColumn": "common_name"
          },
          {
            "name": "short_name",
            "dataType": "string",
            "sourceColumn": "short_name"
          },
          {
            "name": "email",
            "dataType": "string",
            "sourceColumn": "email"
          },
          {
            "name": "job_title",
            "dataType": "string",
            "sourceColumn": "job_title"
          },
          {
            "name": "site_id",
            "dataType": "string",
            "sourceColumn": "site_id"
          },
          {
            "name": "region_code",
            "dataType": "string",
            "sourceColumn": "region_code"
          },
          {
            "name": "country_code",
            "dataType": "string",
            "sourceColumn": "country_code"
          },
          {
            "name": "scorecard_region",
            "dataType": "string",
            "sourceColumn": "scorecard_region"
          },
          {
            "name": "employee_status",
            "dataType": "int64",
            "sourceColumn": "employee_status"
          },
          {
            "name": "building",
            "dataType": "string",
            "sourceColumn": "building"
          },
          {
            "name": "room_num",
            "dataType": "string",
            "sourceColumn": "room_num"
          },
          {
            "name": "funcion_hour",
            "dataType": "string",
            "sourceColumn": "funcion_hour"
          },
          {
            "name": "organization_name",
            "dataType": "string",
            "sourceColumn": "organization_name"
          },
          {
            "name": "employee_type",
            "dataType": "string",
            "sourceColumn": "employee_type"
          },
          {
            "name": "company_name",
            "dataType": "string",
            "sourceColumn": "company_name"
          },
          {
            "name": "company_id",
            "dataType": "int64",
            "sourceColumn": "company_id"
          },
          {
            "name": "cost_center",
            "dataType": "string",
            "sourceColumn": "cost_center"
          },
          {
            "name": "function_name",
            "dataType": "string",
            "sourceColumn": "function_name"
          },
          {
            "name": "buyer_flag",
            "dataType": "boolean",
            "sourceColumn": "buyer_flag"
          },
          {
            "name": "m_gbs_center",
            "dataType": "string",
            "sourceColumn": "m_gbs_center"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_people_dim = Source{[Schema=\"baseview\",Item=\"vw_people_dim\"]}[Data]",
                "in",
                "    baseview_vw_people_dim"
              ]
            }
          }
        ]
      },
      {
        "name": "eu_sup_care_owner",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "eu_sup_care_owner",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "invoice_star[eu_sup_care_owner]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(invoice_star,invoice_star[eu_sup_care_owner])"
            }
          }
        ]
      },
      {
        "name": "service_center_agent",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "service_center_agent",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "nps_filter_agents_dim[service_center_agent]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE(nps_filter_agents_dim, nps_filter_agents_dim[service_center_agent])"
            }
          }
        ]
      },
      {
        "name": "Blocks",
        "columns": [
          {
            "name": "Company_code",
            "dataType": "string",
            "sourceColumn": "company_code"
          },
          {
            "name": "Created_by",
            "dataType": "string",
            "sourceColumn": "created_by"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "status"
          },
          {
            "name": "Status_description",
            "dataType": "string",
            "sourceColumn": "status_description"
          },
          {
            "name": "sap_box",
            "dataType": "string",
            "sourceColumn": "sap_box"
          },
          {
            "name": "invoice_reference",
            "dataType": "int64",
            "sourceColumn": "invoice_reference"
          },
          {
            "name": "region",
            "dataType": "int64",
            "sourceColumn": "region"
          },
          {
            "name": "subregion",
            "dataType": "int64",
            "sourceColumn": "subregion"
          },
          {
            "name": "country",
            "dataType": "string",
            "sourceColumn": "country"
          },
          {
            "name": "country_name",
            "dataType": "string",
            "sourceColumn": "country_name"
          },
          {
            "name": "scorecard_region",
            "dataType": "int64",
            "sourceColumn": "scorecard_region"
          },
          {
            "name": "scorecard_region_new",
            "dataType": "int64",
            "sourceColumn": "scorecard_region_new"
          },
          {
            "name": "status_owner",
            "dataType": "int64",
            "sourceColumn": "status_owner"
          },
          {
            "name": "date_entered_status",
            "dataType": "string",
            "sourceColumn": "date_entered_status"
          },
          {
            "name": "time_entered_status",
            "dataType": "string",
            "sourceColumn": "time_entered_status"
          },
          {
            "name": "action_code",
            "dataType": "string",
            "sourceColumn": "action_code"
          },
          {
            "name": "vendor",
            "dataType": "string",
            "sourceColumn": "vendor"
          },
          {
            "name": "vendor_name",
            "dataType": "string",
            "sourceColumn": "vendor_name"
          },
          {
            "name": "guv_code",
            "dataType": "int64",
            "sourceColumn": "guv_code"
          },
          {
            "name": "guv_name",
            "dataType": "int64",
            "sourceColumn": "guv_name"
          },
          {
            "name": "plant_code",
            "dataType": "string",
            "sourceColumn": "plant_code"
          },
          {
            "name": "plant_name",
            "dataType": "int64",
            "sourceColumn": "plant_name"
          },
          {
            "name": "company_code_name",
            "dataType": "int64",
            "sourceColumn": "company_code_name"
          },
          {
            "name": "plant_country",
            "dataType": "int64",
            "sourceColumn": "plant_country"
          },
          {
            "name": "plant_country_name",
            "dataType": "int64",
            "sourceColumn": "plant_country_name"
          },
          {
            "name": "vendor_country",
            "dataType": "int64",
            "sourceColumn": "vendor_country"
          },
          {
            "name": "vendor_country_name",
            "dataType": "int64",
            "sourceColumn": "vendor_country_name"
          },
          {
            "name": "late_payment_reason",
            "dataType": "int64",
            "sourceColumn": "late_payment_reason"
          },
          {
            "name": "manual_intervention_required_reason",
            "dataType": "int64",
            "sourceColumn": "manual_intervention_required_reason"
          },
          {
            "name": "processing_or_posting_error_reason",
            "dataType": "int64",
            "sourceColumn": "processing_or_posting_error_reason"
          },
          {
            "name": "approver",
            "dataType": "int64",
            "sourceColumn": "approver"
          },
          {
            "name": "invoice_channel",
            "dataType": "int64",
            "sourceColumn": "invoice_channel"
          },
          {
            "name": "invoice_channel_group",
            "dataType": "int64",
            "sourceColumn": "invoice_channel_group"
          },
          {
            "name": "invoice_source",
            "dataType": "int64",
            "sourceColumn": "invoice_source"
          },
          {
            "name": "invoice_date",
            "dataType": "string",
            "sourceColumn": "invoice_date"
          },
          {
            "name": "baseline_date",
            "dataType": "int64",
            "sourceColumn": "baseline_date"
          },
          {
            "name": "due_date",
            "dataType": "string",
            "sourceColumn": "due_date"
          },
          {
            "name": "clearing_date",
            "dataType": "dateTime",
            "sourceColumn": "clearing_date"
          },
          {
            "name": "payment_block",
            "dataType": "int64",
            "sourceColumn": "payment_block"
          },
          {
            "name": "payment_block_desc",
            "dataType": "int64",
            "sourceColumn": "payment_block_desc"
          },
          {
            "name": "acct_doc_key",
            "dataType": "string",
            "sourceColumn": "acct_doc_key"
          },
          {
            "name": "region_lkp_key",
            "dataType": "string",
            "sourceColumn": "region_lkp_key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_blocks = Source{[Schema=\"baseview\",Item=\"vw_blocks\"]}[Data]",
                "in",
                "    baseview_vw_blocks"
              ]
            }
          }
        ]
      },
      {
        "name": "plant_company_dim",
        "columns": [
          {
            "name": "m_country",
            "dataType": "string",
            "sourceColumn": "m_country"
          },
          {
            "name": "m_gbs_center",
            "dataType": "string",
            "sourceColumn": "m_gbs_center"
          },
          {
            "name": "m_region",
            "dataType": "string",
            "sourceColumn": "m_region"
          },
          {
            "name": "m_scorecard_reg",
            "dataType": "string",
            "sourceColumn": "m_scorecard_reg"
          },
          {
            "name": "m_subregion",
            "dataType": "string",
            "sourceColumn": "m_subregion"
          },
          {
            "name": "complant",
            "dataType": "string",
            "sourceColumn": "complant"
          },
          {
            "name": "flag",
            "dataType": "string",
            "sourceColumn": "flag"
          },
          {
            "name": "region_lkp_code",
            "dataType": "string",
            "sourceColumn": "region_lkp_code"
          },
          {
            "name": "sm_cluster",
            "dataType": "string",
            "sourceColumn": "sm_cluster"
          },
          {
            "name": "sm_cluster_lvl_2",
            "dataType": "string",
            "sourceColumn": "sm_cluster_lvl_2"
          },
          {
            "name": "sm_plant_ho",
            "dataType": "string",
            "sourceColumn": "sm_plant_ho"
          },
          {
            "name": "sm_site",
            "dataType": "string",
            "sourceColumn": "sm_site"
          },
          {
            "name": "m_country_description",
            "dataType": "string",
            "sourceColumn": "m_country_description"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/Source2Pay_ASDW\",",
                "    baseview_vw_plant_company_lkp = Source{[Schema=\"baseview\",Item=\"vw_plant_company_lkp\"]}[Data]",
                "in",
                "    baseview_vw_plant_company_lkp"
              ]
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "12d73053-e200-4f59-a10e-d9d5b115545f",
        "fromTable": "invoice_star",
        "fromColumn": "invoice_vendor_id",
        "toTable": "invoice_vendor_spend_pool_lkp",
        "toColumn": "vendor_id"
      },
      {
        "name": "ebcc9c9e-7fe3-4db8-a63f-a7218c3f03f8",
        "fromTable": "invoice_star",
        "fromColumn": "purch_vendor_mgc_key",
        "toTable": "final_spend_pool_PurchaseVendor_lkp",
        "toColumn": "PurchaseVendorMGCComboKey"
      },
      {
        "name": "70a60c04-984a-40dc-9be0-d6cefd9baed8",
        "fromTable": "invoice_star",
        "fromColumn": "purchase_vendor_id",
        "toTable": "purchase_vendor_spend_pool_lkp",
        "toColumn": "vendor_id"
      },
      {
        "name": "da1d99f1-220b-4156-902c-f8b215a71073",
        "fromTable": "invoice_star",
        "fromColumn": "invoice_vendor_mgc_key",
        "toTable": "final_spend_pool_InvoiceVendor_lkp",
        "toColumn": "InvoiceVendorMGCComboKey"
      },
      {
        "name": "29f6b6af-2619-4924-8349-4cb0ea687f1f",
        "fromTable": "invoice_star",
        "fromColumn": "doc_post_date_key",
        "toTable": "doc_post_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "b76a8090-445b-4adb-ae47-3815560888a3",
        "fromTable": "invoice_star",
        "fromColumn": "clear_date_Key",
        "toTable": "clear_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "256e67d4-0699-49fa-b5fd-560fe50e3f3f",
        "fromTable": "invoice_star",
        "fromColumn": "purch_doc_line_key",
        "toTable": "po_star",
        "toColumn": "purch_doc_line_key",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "9e10c8f1-d7ba-4007-b00b-062713923473",
        "fromTable": "bot_agent_pypestream",
        "fromColumn": "closed_date_key",
        "toTable": "clear_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "055c7509-5947-46c3-b1cb-2874cdae0b27",
        "fromTable": "bot_agent_pypestream",
        "fromColumn": "request_date_key",
        "toTable": "doc_post_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "76fd6c88-a27c-40ff-8384-6db0806c6124",
        "fromTable": "nps_rate_my_experience",
        "fromColumn": "rating_timestamp_key",
        "toTable": "doc_post_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "c08d03bf-0f48-4e46-bab0-37263ee75497",
        "fromTable": "nps_buyer_dashboard_ratings",
        "fromColumn": "date_time_key",
        "toTable": "doc_post_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "12edcd07-1c3a-4c61-932f-84f13855b15c",
        "fromTable": "service_now_fpss_data",
        "fromColumn": "request_date_key",
        "toTable": "doc_post_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "121b85f4-2f57-4ec5-81bf-818c4d5a8d96",
        "fromTable": "service_now_fpss_data",
        "fromColumn": "closed_date_key",
        "toTable": "clear_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "bb1010df-317b-4d84-99be-6fd2a3881741",
        "fromTable": "nps_buyer_dashboard_ratings",
        "fromColumn": "email_requestor",
        "toTable": "people_dim",
        "toColumn": "email"
      },
      {
        "name": "13abfa48-5181-48da-a4a2-c8070e675199",
        "fromTable": "service_now_fpss_data",
        "fromColumn": "technology",
        "toTable": "vw_nps_technology",
        "toColumn": "technology_nps"
      },
      {
        "name": "985d091c-d849-4277-b829-ec7c82c28fe3",
        "fromTable": "bot_agent_pypestream",
        "fromColumn": "technology",
        "toTable": "vw_nps_technology",
        "toColumn": "technology_nps"
      },
      {
        "name": "f2468bc6-96da-4981-a58c-8310bb1767d9",
        "fromTable": "nps_buyer_dashboard_ratings",
        "fromColumn": "technology",
        "toTable": "vw_nps_technology",
        "toColumn": "technology_nps"
      },
      {
        "name": "a8fbf306-5413-49ad-b557-258977fe68a4",
        "fromTable": "nps_rate_my_experience",
        "fromColumn": "technology",
        "toTable": "vw_nps_technology",
        "toColumn": "technology_nps"
      },
      {
        "name": "1c1348ef-90cd-4451-9a2f-a079bfd1c198",
        "fromTable": "nps_buyer_dashboard_ratings",
        "fromColumn": "service_line",
        "toTable": "nps_service_line",
        "toColumn": "service_name"
      },
      {
        "name": "5ee94ff8-71a5-4b91-8aed-2be0eacfb858",
        "fromTable": "nps_rate_my_experience",
        "fromColumn": "service_line",
        "toTable": "nps_service_line",
        "toColumn": "service_name"
      },
      {
        "name": "29dafb20-ca4d-47dd-bc74-d25cfeeb8c7d",
        "fromTable": "bot_agent_pypestream",
        "fromColumn": "persona",
        "toTable": "nps_filter_persona",
        "toColumn": "persona"
      },
      {
        "name": "877b8196-5b25-4f28-8db9-6d1e0a0cb1c7",
        "fromTable": "nps_buyer_dashboard_ratings",
        "fromColumn": "persona",
        "toTable": "nps_filter_persona",
        "toColumn": "persona"
      },
      {
        "name": "c27321c3-0093-4d12-82ad-b18776489a65",
        "fromTable": "service_now_fpss_data",
        "fromColumn": "persona",
        "toTable": "nps_filter_persona",
        "toColumn": "persona"
      },
      {
        "name": "edef15a6-67b4-464a-8503-da6a2514aa72",
        "fromTable": "nps_rate_my_experience",
        "fromColumn": "persona",
        "toTable": "nps_filter_persona",
        "toColumn": "persona"
      },
      {
        "name": "f775c66a-f577-40a9-82fc-48d36f6b08bf",
        "fromTable": "people_dim",
        "fromColumn": "country_code",
        "toTable": "nps_filter_dim",
        "toColumn": "country_code",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "040e815b-2180-4097-ac93-dfa44a31e946",
        "fromTable": "invoice_star",
        "fromColumn": "acct_doc_key",
        "toTable": "doc_key_dim",
        "toColumn": "acct_doc_key",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "80058c36-19ed-4ad3-8999-0c6edaa22cdd",
        "fromTable": "autopost_error",
        "fromColumn": "acct_doc_key",
        "toTable": "doc_key_dim",
        "toColumn": "acct_doc_key",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "00e7ecef-9fc2-4466-80ea-bde7db195d08",
        "fromTable": "nps_rate_my_experience",
        "fromColumn": "email_requestor",
        "toTable": "people_dim",
        "toColumn": "short_name"
      },
      {
        "name": "4fa27aac-539a-4161-8ba5-8fb2434b2fab",
        "fromTable": "service_now_fpss_data",
        "fromColumn": "email_requestor",
        "toTable": "people_dim",
        "toColumn": "email"
      },
      {
        "name": "4bacafbe-ecd7-4d80-b71c-ad12a77ca2c5",
        "fromTable": "bot_agent_pypestream",
        "fromColumn": "email_requestor",
        "toTable": "people_dim",
        "toColumn": "email"
      },
      {
        "name": "de10bf4c-511b-4a26-bd16-d945e30e00c7",
        "fromTable": "bot_agent_pypestream",
        "fromColumn": "agent_email",
        "toTable": "people_dim_agents",
        "toColumn": "email"
      },
      {
        "name": "739d43b1-9b22-4469-82fa-83c8288cc9d7",
        "fromTable": "service_now_fpss_data",
        "fromColumn": "agent_email",
        "toTable": "people_dim_agents",
        "toColumn": "email"
      },
      {
        "name": "a9d3a8d2-f71c-4099-af73-b9834bf0b1ea",
        "fromTable": "people_dim_agents",
        "fromColumn": "country_code",
        "toTable": "nps_filter_agents_dim",
        "toColumn": "country_code",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "17c012d2-6a41-408c-8b48-6e48cb8c7698",
        "fromTable": "nps_filter_agents_dim",
        "fromColumn": "service_center_agent",
        "toTable": "service_center_agent",
        "toColumn": "service_center_agent",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "8d4b63dc-aacc-48ea-b666-ebe02af62ee4",
        "fromTable": "nps_buyer_dashboard_ratings",
        "fromColumn": "agent_gbs",
        "toTable": "service_center_agent",
        "toColumn": "service_center_agent"
      },
      {
        "name": "d9c00378-9dfa-49df-97d3-5f8039404eb6",
        "fromTable": "nps_rate_my_experience",
        "fromColumn": "agent_gbs",
        "toTable": "service_center_agent",
        "toColumn": "service_center_agent"
      },
      {
        "name": "87afa025-b2d9-4ce3-9743-060e67fc2a3a",
        "fromTable": "invoice_star",
        "fromColumn": "spend_pool_lkp_code",
        "toTable": "spend_pool_hier_inv_dim",
        "toColumn": "spend_pool_lkp_code"
      },
      {
        "name": "9134f677-6c85-4abe-ba0c-baf09af5135b",
        "fromTable": "overdues",
        "fromColumn": "purchase_org_direct_spend",
        "toTable": "purchase_org_direct_spend",
        "toColumn": "purchase_org_direct_spend"
      },
      {
        "name": "c3f7ad22-81d0-48ab-b81f-306b8ce5475c",
        "fromTable": "overdues",
        "fromColumn": "sc_category",
        "toTable": "sc_category",
        "toColumn": "sc_category"
      },
      {
        "name": "529656a8-2a55-4829-97a2-8981bffac3e5",
        "fromTable": "overdues",
        "fromColumn": "sc_ext_bus_partner",
        "toTable": "sc_ext_bus_partner",
        "toColumn": "sc_ext_bus_partner"
      },
      {
        "name": "5c91d201-8f69-4234-baf9-a955f20456aa",
        "fromTable": "overdues",
        "fromColumn": "cg_pm_category",
        "toTable": "cg_pm_category",
        "toColumn": "cg_pm_category"
      },
      {
        "name": "36ea0eff-55bf-45b4-9da6-471ab64551c7",
        "fromTable": "overdues",
        "fromColumn": "cg_pm_owner",
        "toTable": "cg_pm_owner",
        "toColumn": "cg_pm_owner"
      },
      {
        "name": "bf3141d0-1a3b-4931-aff6-bd6bfdc12fd9",
        "fromTable": "overdues",
        "fromColumn": "eu_sup_care_owner",
        "toTable": "eu_sup_care_owner",
        "toColumn": "eu_sup_care_owner"
      },
      {
        "name": "f141cb37-7db2-4126-9af2-34ce2a573d77",
        "fromTable": "overdues",
        "fromColumn": "purchase_org_direct_spend_description",
        "toTable": "purchase_org_direct_spend_description",
        "toColumn": "purchase_org_direct_spend_description"
      },
      {
        "name": "5f4a0d16-2671-486d-bd82-c7ee2d86719e",
        "fromTable": "overdues",
        "fromColumn": "direct_owners",
        "toTable": "direct_owner",
        "toColumn": "direct_owner"
      },
      {
        "name": "29a80b9e-7ba8-4bba-b0e5-2f9fd2ac7027",
        "fromTable": "overdues",
        "fromColumn": "reporting_date",
        "toTable": "clear_date_dim",
        "toColumn": "DateKey"
      },
      {
        "name": "851127b3-d8ab-4459-a558-bd824442321b",
        "fromTable": "service_now_fpss_data",
        "fromColumn": "service_line",
        "toTable": "nps_service_line",
        "toColumn": "service_name"
      },
      {
        "name": "0a989258-34ed-4c38-884c-9ac471a2deca",
        "fromTable": "overdues",
        "fromColumn": "region_lkp_key",
        "toTable": "plant_company_dim",
        "toColumn": "region_lkp_code"
      },
      {
        "name": "8f74bd31-13bb-4c8c-995f-1f45872367bd",
        "fromTable": "overdues",
        "fromColumn": "vendor_number",
        "toTable": "vendor_guv_dim",
        "toColumn": "vendor_id"
      },
      {
        "name": "aadcd83c-c262-4d65-8077-706339623c85",
        "fromTable": "invoice_star",
        "fromColumn": "spend_pool_lkp_code",
        "toTable": "material_group_dim",
        "toColumn": "material_group_code"
      },
      {
        "name": "0089d3cc-a7c7-4a14-8a62-519267f39fd2",
        "fromTable": "invoice_star",
        "fromColumn": "invoice_vendor_id",
        "toTable": "vendor_invoice_star_dim",
        "toColumn": "vendor_id"
      },
      {
        "name": "26fe7f81-662c-4b5a-9db0-d6efadf0e424",
        "fromTable": "overdues",
        "fromColumn": "vendor_number",
        "toTable": "vendor_invoice_star_dim",
        "toColumn": "vendor_id"
      },
      {
        "name": "2f28fc02-cc9a-4247-8e58-6b3957eaeda5",
        "fromTable": "invoice_star",
        "fromColumn": "plant_code",
        "toTable": "plant_invoice_star_dim",
        "toColumn": "plant_code"
      },
      {
        "name": "2448115f-60f6-4b80-9fbc-5a2fd744dd25",
        "fromTable": "overdues",
        "fromColumn": "plant_code",
        "toTable": "plant_invoice_star_dim",
        "toColumn": "plant_code"
      },
      {
        "name": "499c5b60-a929-4fae-bb35-8fb68b0a1850",
        "fromTable": "invoice_star",
        "fromColumn": "company_code",
        "toTable": "company_invoice_star_dim",
        "toColumn": "company_code"
      },
      {
        "name": "b1f47715-ddc2-4afa-aa5b-c231c4168638",
        "fromTable": "overdues",
        "fromColumn": "company_code",
        "toTable": "company_invoice_star_dim",
        "toColumn": "company_code"
      },
      {
        "name": "8566fe8a-a1e3-43c7-9727-28b3aef15bf8",
        "fromTable": "invoice_star",
        "fromColumn": "purchase_org_id",
        "toTable": "purchase_org_dim",
        "toColumn": "purchase_org_id"
      },
      {
        "name": "0e360cd8-ee56-4dc6-9fc0-a750db2e6d77",
        "fromTable": "overdues",
        "fromColumn": "purchasing_organisation",
        "toTable": "purchase_org_dim",
        "toColumn": "purchase_org_id"
      },
      {
        "name": "bea9b97a-be06-4d17-b388-82acb5d96b63",
        "fromTable": "invoice_star",
        "fromColumn": "invoice_vendor_company",
        "toTable": "vendor_company_dim",
        "toColumn": "vendor_company_join_id"
      },
      {
        "name": "47c34cf1-b949-4eed-9d7c-2c489daf7641",
        "fromTable": "Blocks",
        "fromColumn": "clearing_date",
        "toTable": "clear_date_dim",
        "toColumn": "DateKey"
      },
      {
        "name": "29065065-cf8d-4178-90d5-61937fee05f3",
        "fromTable": "Blocks",
        "fromColumn": "date_entered_status",
        "toTable": "doc_post_date_dim",
        "toColumn": "date_int"
      },
      {
        "name": "16ffc8f5-a069-4452-9690-201ab9a3d8a3",
        "fromTable": "invoice_star",
        "fromColumn": "invoice_country_code",
        "toTable": "geo_dim",
        "toColumn": "country_code"
      },
      {
        "name": "f0d775a3-34d2-48dd-b47e-4037850b7519",
        "fromTable": "invoice_star",
        "fromColumn": "invoice_vendor_id",
        "toTable": "vendor_guv_dim",
        "toColumn": "vendor_id"
      },
      {
        "name": "ddc676fc-80f8-4cb0-94f6-afd4f475be06",
        "fromTable": "invoice_star",
        "fromColumn": "material_id",
        "toTable": "material_dim",
        "toColumn": "material_number"
      },
      {
        "name": "f98f2f5b-6ffb-4379-b831-27b3449c674d",
        "fromTable": "Blocks",
        "fromColumn": "Company_code",
        "toTable": "company_invoice_star_dim",
        "toColumn": "company_code"
      },
      {
        "name": "c2269a6f-a580-418f-a167-1ce7d91cebc9",
        "fromTable": "Blocks",
        "fromColumn": "plant_code",
        "toTable": "plant_invoice_star_dim",
        "toColumn": "plant_code"
      },
      {
        "name": "a82f303f-d15b-4aa0-b304-97ac6b5d943e",
        "fromTable": "invoice_star",
        "fromColumn": "purchase_group_code",
        "toTable": "purchase_group_dim",
        "toColumn": "purchase_group_id"
      },
      {
        "name": "12b905db-084f-4bae-a9fe-b7e31f9dc8f0",
        "fromTable": "invoice_star",
        "fromColumn": "cg_pm_owner",
        "toTable": "cg_pm_owner",
        "toColumn": "cg_pm_owner"
      },
      {
        "name": "4cb42786-da2d-47e1-9578-87e68de30334",
        "fromTable": "invoice_star",
        "fromColumn": "purchase_org_direct_spend",
        "toTable": "purchase_org_direct_spend",
        "toColumn": "purchase_org_direct_spend"
      },
      {
        "name": "7790585d-d842-403e-995e-1b0f36f037b1",
        "fromTable": "invoice_star",
        "fromColumn": "direct_owner",
        "toTable": "direct_owner",
        "toColumn": "direct_owner"
      },
      {
        "name": "52396a40-498a-4081-aee4-a63584481aa4",
        "fromTable": "invoice_star",
        "fromColumn": "cg_pm_category",
        "toTable": "cg_pm_category",
        "toColumn": "cg_pm_category"
      },
      {
        "name": "9b2a5308-4433-45d1-9a3d-38226b4da2f8",
        "fromTable": "invoice_star",
        "fromColumn": "purchase_org_direct_spend_description",
        "toTable": "purchase_org_direct_spend_description",
        "toColumn": "purchase_org_direct_spend_description"
      },
      {
        "name": "37573c41-20e0-473c-a84f-1816fd9177c7",
        "fromTable": "invoice_star",
        "fromColumn": "eu_sup_care_owner",
        "toTable": "eu_sup_care_owner",
        "toColumn": "eu_sup_care_owner"
      },
      {
        "name": "d09a0d73-9a18-4624-b7a5-35192a92e546",
        "fromTable": "invoice_star",
        "fromColumn": "sc_ext_bus_partner",
        "toTable": "sc_ext_bus_partner",
        "toColumn": "sc_ext_bus_partner"
      },
      {
        "name": "bf28c438-90e7-49a1-bbdd-ad126b153e44",
        "fromTable": "invoice_star",
        "fromColumn": "sc_category",
        "toTable": "sc_category",
        "toColumn": "sc_category"
      },
      {
        "name": "6846f432-a14e-4a50-bcae-8bf54bdf5ff8",
        "fromTable": "invoice_star",
        "fromColumn": "region_lkp_key",
        "toTable": "plant_company_dim",
        "toColumn": "region_lkp_code"
      },
      {
        "name": "fc2ed657-35a6-4709-afa1-cd4396c9b43c",
        "fromTable": "overdues",
        "fromColumn": "business_unit_lkp_code",
        "toTable": "bu_comb_dim",
        "toColumn": "code"
      },
      {
        "name": "fc1600be-2326-40d9-9c49-a9fb083dc38a",
        "fromTable": "overdues",
        "fromColumn": "spend_pool_lkp_code",
        "toTable": "spend_pool_hier_inv_dim",
        "toColumn": "spend_pool_lkp_code"
      },
      {
        "name": "30f9b830-f360-47da-b21e-47d2f23ae7b3",
        "fromTable": "invoice_star",
        "fromColumn": "business_unit_lkp_code",
        "toTable": "bu_comb_dim",
        "toColumn": "code"
      },
      {
        "name": "cca875e8-aed9-48f0-a488-9c4b662ac2d7",
        "fromTable": "Blocks",
        "fromColumn": "region_lkp_key",
        "toTable": "plant_company_dim",
        "toColumn": "region_lkp_code"
      },
      {
        "name": "2f4f0dfe-5ad4-4ef2-aefe-8c564e23db8b",
        "fromTable": "invoice_star",
        "fromColumn": "first_approver",
        "toTable": "people_dim",
        "toColumn": "tnumber"
      }
    ],
    "roles": [
      {
        "name": "Reader",
        "modelPermission": "readRefresh",
        "members": [
          {
            "memberName": "p2pg-pbi-rptdevl@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "P2PG-PBI-RPTUSERS@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "gbs-globalspp-reportinganalytics@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "cnf-sppoamericas@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "s2pg-pbi-azrrdr-ro@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "s2pg-pbi-bd2exn-ro@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "s2pg-pbi-bd2buy-ro@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "s2pg-pbi-azradm-ad@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "CNFG-MNL-SPPOSupplierCare@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "cnf-fo@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "cnf-manilava@groups.pg.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "MNL-SPPO-GOV@groups.pg.com",
            "identityProvider": "AzureAD"
          }
        ]
      },
      {
        "name": "Admin",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "p2pg-pbi-azradm-ad@groups.pg.com",
            "identityProvider": "AzureAD"
          }
        ]
      }
    ],
    "expressions": [
      {
        "name": "final_spend_pool_InvoiceVendor_lkp",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"SQL/Source2Pay_ASDW\",",
          "    support_final_spend_pool_lkp = Source{[Schema=\"support\",Item=\"final_spend_pool_lkp\"]}[Data],",
          "    #\"Added Custom\" = Table.AddColumn(support_final_spend_pool_lkp, \"InvoiceVendorMGCComboKey\", each Text.Combine({[vendor_id],[sap_material_group_code]}))",
          "in",
          "    #\"Added Custom\""
        ]
      },
      {
        "name": "purchase_vendor_spend_pool_lkp",
        "kind": "m",
        "expression": [
          "let",
          "    Source = #\"SQL/Source2Pay_ASDW\",",
          "    support_vendor_spend_pool_lkp = Source{[Schema=\"support\",Item=\"vendor_spend_pool_lkp\"]}[Data]",
          "in",
          "    support_vendor_spend_pool_lkp"
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  },
  "id": "SemanticModel"
}